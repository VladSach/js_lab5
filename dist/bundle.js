!function(){var n={5850:function(){},4225:function(){},6124:function(n,r,t){"use strict";if(t(1934),t(5654),t(7694),t.g._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");function e(n,r,t){n[r]||Object.defineProperty(n,r,{writable:!0,configurable:!0,value:t})}t.g._babelPolyfill=!0,e(String.prototype,"padLeft","".padStart),e(String.prototype,"padRight","".padEnd),"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach((function(n){[][n]&&e(Array,n,Function.call.bind([][n]))}))},5654:function(n,r,t){!function(r){"use strict";var t,e=Object.prototype,i=e.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",s=o.asyncIterator||"@@asyncIterator",A=o.toStringTag||"@@toStringTag",c=r.regeneratorRuntime;if(c)n.exports=c;else{(c=r.regeneratorRuntime=n.exports).wrap=x;var l="suspendedStart",u="suspendedYield",p="executing",f="completed",d={},h={};h[a]=function(){return this};var g=Object.getPrototypeOf,m=g&&g(g(j([])));m&&m!==e&&i.call(m,a)&&(h=m);var B=b.prototype=C.prototype=Object.create(h);I.prototype=B.constructor=b,b.constructor=I,b[A]=I.displayName="GeneratorFunction",c.isGeneratorFunction=function(n){var r="function"==typeof n&&n.constructor;return!!r&&(r===I||"GeneratorFunction"===(r.displayName||r.name))},c.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,b):(n.__proto__=b,A in n||(n[A]="GeneratorFunction")),n.prototype=Object.create(B),n},c.awrap=function(n){return{__await:n}},y(w.prototype),w.prototype[s]=function(){return this},c.AsyncIterator=w,c.async=function(n,r,t,e){var i=new w(x(n,r,t,e));return c.isGeneratorFunction(r)?i:i.next().then((function(n){return n.done?n.value:i.next()}))},y(B),B[A]="Generator",B[a]=function(){return this},B.toString=function(){return"[object Generator]"},c.keys=function(n){var r=[];for(var t in n)r.push(t);return r.reverse(),function t(){for(;r.length;){var e=r.pop();if(e in n)return t.value=e,t.done=!1,t}return t.done=!0,t}},c.values=j,_.prototype={constructor:_,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(S),!n)for(var r in this)"t"===r.charAt(0)&&i.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var r=this;function e(e,i){return s.type="throw",s.arg=n,r.next=e,i&&(r.method="next",r.arg=t),!!i}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],s=a.completion;if("root"===a.tryLoc)return e("end");if(a.tryLoc<=this.prev){var A=i.call(a,"catchLoc"),c=i.call(a,"finallyLoc");if(A&&c){if(this.prev<a.catchLoc)return e(a.catchLoc,!0);if(this.prev<a.finallyLoc)return e(a.finallyLoc)}else if(A){if(this.prev<a.catchLoc)return e(a.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return e(a.finallyLoc)}}}},abrupt:function(n,r){for(var t=this.tryEntries.length-1;t>=0;--t){var e=this.tryEntries[t];if(e.tryLoc<=this.prev&&i.call(e,"finallyLoc")&&this.prev<e.finallyLoc){var o=e;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=r&&r<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=n,a.arg=r,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(a)},complete:function(n,r){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&r&&(this.next=r),d},finish:function(n){for(var r=this.tryEntries.length-1;r>=0;--r){var t=this.tryEntries[r];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),S(t),d}},catch:function(n){for(var r=this.tryEntries.length-1;r>=0;--r){var t=this.tryEntries[r];if(t.tryLoc===n){var e=t.completion;if("throw"===e.type){var i=e.arg;S(t)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(n,r,e){return this.delegate={iterator:j(n),resultName:r,nextLoc:e},"next"===this.method&&(this.arg=t),d}}}function x(n,r,t,e){var i=r&&r.prototype instanceof C?r:C,o=Object.create(i.prototype),a=new _(e||[]);return o._invoke=function(n,r,t){var e=l;return function(i,o){if(e===p)throw new Error("Generator is already running");if(e===f){if("throw"===i)throw o;return W()}for(t.method=i,t.arg=o;;){var a=t.delegate;if(a){var s=k(a,t);if(s){if(s===d)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if(e===l)throw e=f,t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);e=p;var A=v(n,r,t);if("normal"===A.type){if(e=t.done?f:u,A.arg===d)continue;return{value:A.arg,done:t.done}}"throw"===A.type&&(e=f,t.method="throw",t.arg=A.arg)}}}(n,t,a),o}function v(n,r,t){try{return{type:"normal",arg:n.call(r,t)}}catch(n){return{type:"throw",arg:n}}}function C(){}function I(){}function b(){}function y(n){["next","throw","return"].forEach((function(r){n[r]=function(n){return this._invoke(r,n)}}))}function w(n){function t(r,e,o,a){var s=v(n[r],n,e);if("throw"!==s.type){var A=s.arg,c=A.value;return c&&"object"==typeof c&&i.call(c,"__await")?Promise.resolve(c.__await).then((function(n){t("next",n,o,a)}),(function(n){t("throw",n,o,a)})):Promise.resolve(c).then((function(n){A.value=n,o(A)}),a)}a(s.arg)}var e;"object"==typeof r.process&&r.process.domain&&(t=r.process.domain.bind(t)),this._invoke=function(n,r){function i(){return new Promise((function(e,i){t(n,r,e,i)}))}return e=e?e.then(i,i):i()}}function k(n,r){var e=n.iterator[r.method];if(e===t){if(r.delegate=null,"throw"===r.method){if(n.iterator.return&&(r.method="return",r.arg=t,k(n,r),"throw"===r.method))return d;r.method="throw",r.arg=new TypeError("The iterator does not provide a 'throw' method")}return d}var i=v(e,n.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,d;var o=i.arg;return o?o.done?(r[n.resultName]=o.value,r.next=n.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,d):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,d)}function E(n){var r={tryLoc:n[0]};1 in n&&(r.catchLoc=n[1]),2 in n&&(r.finallyLoc=n[2],r.afterLoc=n[3]),this.tryEntries.push(r)}function S(n){var r=n.completion||{};r.type="normal",delete r.arg,n.completion=r}function _(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(E,this),this.reset(!0)}function j(n){if(n){var r=n[a];if(r)return r.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var e=-1,o=function r(){for(;++e<n.length;)if(i.call(n,e))return r.value=n[e],r.done=!1,r;return r.value=t,r.done=!0,r};return o.next=o}}return{next:W}}function W(){return{value:t,done:!0}}}("object"==typeof t.g?t.g:"object"==typeof window?window:"object"==typeof self?self:this)},7694:function(n,r,t){t(1761),n.exports=t(5645).RegExp.escape},4963:function(n){n.exports=function(n){if("function"!=typeof n)throw TypeError(n+" is not a function!");return n}},3365:function(n,r,t){var e=t(2032);n.exports=function(n,r){if("number"!=typeof n&&"Number"!=e(n))throw TypeError(r);return+n}},7722:function(n,r,t){var e=t(6314)("unscopables"),i=Array.prototype;null==i[e]&&t(7728)(i,e,{}),n.exports=function(n){i[e][n]=!0}},6793:function(n,r,t){"use strict";var e=t(4496)(!0);n.exports=function(n,r,t){return r+(t?e(n,r).length:1)}},3328:function(n){n.exports=function(n,r,t,e){if(!(n instanceof r)||void 0!==e&&e in n)throw TypeError(t+": incorrect invocation!");return n}},7007:function(n,r,t){var e=t(5286);n.exports=function(n){if(!e(n))throw TypeError(n+" is not an object!");return n}},5216:function(n,r,t){"use strict";var e=t(508),i=t(2337),o=t(875);n.exports=[].copyWithin||function(n,r){var t=e(this),a=o(t.length),s=i(n,a),A=i(r,a),c=arguments.length>2?arguments[2]:void 0,l=Math.min((void 0===c?a:i(c,a))-A,a-s),u=1;for(A<s&&s<A+l&&(u=-1,A+=l-1,s+=l-1);l-- >0;)A in t?t[s]=t[A]:delete t[s],s+=u,A+=u;return t}},6852:function(n,r,t){"use strict";var e=t(508),i=t(2337),o=t(875);n.exports=function(n){for(var r=e(this),t=o(r.length),a=arguments.length,s=i(a>1?arguments[1]:void 0,t),A=a>2?arguments[2]:void 0,c=void 0===A?t:i(A,t);c>s;)r[s++]=n;return r}},9490:function(n,r,t){var e=t(3531);n.exports=function(n,r){var t=[];return e(n,!1,t.push,t,r),t}},9315:function(n,r,t){var e=t(2110),i=t(875),o=t(2337);n.exports=function(n){return function(r,t,a){var s,A=e(r),c=i(A.length),l=o(a,c);if(n&&t!=t){for(;c>l;)if((s=A[l++])!=s)return!0}else for(;c>l;l++)if((n||l in A)&&A[l]===t)return n||l||0;return!n&&-1}}},50:function(n,r,t){var e=t(741),i=t(9797),o=t(508),a=t(875),s=t(6886);n.exports=function(n,r){var t=1==n,A=2==n,c=3==n,l=4==n,u=6==n,p=5==n||u,f=r||s;return function(r,s,d){for(var h,g,m=o(r),B=i(m),x=e(s,d,3),v=a(B.length),C=0,I=t?f(r,v):A?f(r,0):void 0;v>C;C++)if((p||C in B)&&(g=x(h=B[C],C,m),n))if(t)I[C]=g;else if(g)switch(n){case 3:return!0;case 5:return h;case 6:return C;case 2:I.push(h)}else if(l)return!1;return u?-1:c||l?l:I}}},7628:function(n,r,t){var e=t(4963),i=t(508),o=t(9797),a=t(875);n.exports=function(n,r,t,s,A){e(r);var c=i(n),l=o(c),u=a(c.length),p=A?u-1:0,f=A?-1:1;if(t<2)for(;;){if(p in l){s=l[p],p+=f;break}if(p+=f,A?p<0:u<=p)throw TypeError("Reduce of empty array with no initial value")}for(;A?p>=0:u>p;p+=f)p in l&&(s=r(s,l[p],p,c));return s}},2736:function(n,r,t){var e=t(5286),i=t(4302),o=t(6314)("species");n.exports=function(n){var r;return i(n)&&("function"!=typeof(r=n.constructor)||r!==Array&&!i(r.prototype)||(r=void 0),e(r)&&null===(r=r[o])&&(r=void 0)),void 0===r?Array:r}},6886:function(n,r,t){var e=t(2736);n.exports=function(n,r){return new(e(n))(r)}},4398:function(n,r,t){"use strict";var e=t(4963),i=t(5286),o=t(7242),a=[].slice,s={},A=function(n,r,t){if(!(r in s)){for(var e=[],i=0;i<r;i++)e[i]="a["+i+"]";s[r]=Function("F,a","return new F("+e.join(",")+")")}return s[r](n,t)};n.exports=Function.bind||function(n){var r=e(this),t=a.call(arguments,1),s=function(){var e=t.concat(a.call(arguments));return this instanceof s?A(r,e.length,e):o(r,e,n)};return i(r.prototype)&&(s.prototype=r.prototype),s}},1488:function(n,r,t){var e=t(2032),i=t(6314)("toStringTag"),o="Arguments"==e(function(){return arguments}());n.exports=function(n){var r,t,a;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,r){try{return n[r]}catch(n){}}(r=Object(n),i))?t:o?e(r):"Object"==(a=e(r))&&"function"==typeof r.callee?"Arguments":a}},2032:function(n){var r={}.toString;n.exports=function(n){return r.call(n).slice(8,-1)}},9824:function(n,r,t){"use strict";var e=t(9275).f,i=t(2503),o=t(4408),a=t(741),s=t(3328),A=t(3531),c=t(2923),l=t(5436),u=t(2974),p=t(7057),f=t(4728).fastKey,d=t(1616),h=p?"_s":"size",g=function(n,r){var t,e=f(r);if("F"!==e)return n._i[e];for(t=n._f;t;t=t.n)if(t.k==r)return t};n.exports={getConstructor:function(n,r,t,c){var l=n((function(n,e){s(n,l,r,"_i"),n._t=r,n._i=i(null),n._f=void 0,n._l=void 0,n[h]=0,null!=e&&A(e,t,n[c],n)}));return o(l.prototype,{clear:function(){for(var n=d(this,r),t=n._i,e=n._f;e;e=e.n)e.r=!0,e.p&&(e.p=e.p.n=void 0),delete t[e.i];n._f=n._l=void 0,n[h]=0},delete:function(n){var t=d(this,r),e=g(t,n);if(e){var i=e.n,o=e.p;delete t._i[e.i],e.r=!0,o&&(o.n=i),i&&(i.p=o),t._f==e&&(t._f=i),t._l==e&&(t._l=o),t[h]--}return!!e},forEach:function(n){d(this,r);for(var t,e=a(n,arguments.length>1?arguments[1]:void 0,3);t=t?t.n:this._f;)for(e(t.v,t.k,this);t&&t.r;)t=t.p},has:function(n){return!!g(d(this,r),n)}}),p&&e(l.prototype,"size",{get:function(){return d(this,r)[h]}}),l},def:function(n,r,t){var e,i,o=g(n,r);return o?o.v=t:(n._l=o={i:i=f(r,!0),k:r,v:t,p:e=n._l,n:void 0,r:!1},n._f||(n._f=o),e&&(e.n=o),n[h]++,"F"!==i&&(n._i[i]=o)),n},getEntry:g,setStrong:function(n,r,t){c(n,r,(function(n,t){this._t=d(n,r),this._k=t,this._l=void 0}),(function(){for(var n=this,r=n._k,t=n._l;t&&t.r;)t=t.p;return n._t&&(n._l=t=t?t.n:n._t._f)?l(0,"keys"==r?t.k:"values"==r?t.v:[t.k,t.v]):(n._t=void 0,l(1))}),t?"entries":"values",!t,!0),u(r)}}},6132:function(n,r,t){var e=t(1488),i=t(9490);n.exports=function(n){return function(){if(e(this)!=n)throw TypeError(n+"#toJSON isn't generic");return i(this)}}},3657:function(n,r,t){"use strict";var e=t(4408),i=t(4728).getWeak,o=t(7007),a=t(5286),s=t(3328),A=t(3531),c=t(50),l=t(9181),u=t(1616),p=c(5),f=c(6),d=0,h=function(n){return n._l||(n._l=new g)},g=function(){this.a=[]},m=function(n,r){return p(n.a,(function(n){return n[0]===r}))};g.prototype={get:function(n){var r=m(this,n);if(r)return r[1]},has:function(n){return!!m(this,n)},set:function(n,r){var t=m(this,n);t?t[1]=r:this.a.push([n,r])},delete:function(n){var r=f(this.a,(function(r){return r[0]===n}));return~r&&this.a.splice(r,1),!!~r}},n.exports={getConstructor:function(n,r,t,o){var c=n((function(n,e){s(n,c,r,"_i"),n._t=r,n._i=d++,n._l=void 0,null!=e&&A(e,t,n[o],n)}));return e(c.prototype,{delete:function(n){if(!a(n))return!1;var t=i(n);return!0===t?h(u(this,r)).delete(n):t&&l(t,this._i)&&delete t[this._i]},has:function(n){if(!a(n))return!1;var t=i(n);return!0===t?h(u(this,r)).has(n):t&&l(t,this._i)}}),c},def:function(n,r,t){var e=i(o(r),!0);return!0===e?h(n).set(r,t):e[n._i]=t,n},ufstore:h}},5795:function(n,r,t){"use strict";var e=t(3816),i=t(2985),o=t(7234),a=t(4408),s=t(4728),A=t(3531),c=t(3328),l=t(5286),u=t(4253),p=t(7462),f=t(2943),d=t(266);n.exports=function(n,r,t,h,g,m){var B=e[n],x=B,v=g?"set":"add",C=x&&x.prototype,I={},b=function(n){var r=C[n];o(C,n,"delete"==n||"has"==n?function(n){return!(m&&!l(n))&&r.call(this,0===n?0:n)}:"get"==n?function(n){return m&&!l(n)?void 0:r.call(this,0===n?0:n)}:"add"==n?function(n){return r.call(this,0===n?0:n),this}:function(n,t){return r.call(this,0===n?0:n,t),this})};if("function"==typeof x&&(m||C.forEach&&!u((function(){(new x).entries().next()})))){var y=new x,w=y[v](m?{}:-0,1)!=y,k=u((function(){y.has(1)})),E=p((function(n){new x(n)})),S=!m&&u((function(){for(var n=new x,r=5;r--;)n[v](r,r);return!n.has(-0)}));E||((x=r((function(r,t){c(r,x,n);var e=d(new B,r,x);return null!=t&&A(t,g,e[v],e),e}))).prototype=C,C.constructor=x),(k||S)&&(b("delete"),b("has"),g&&b("get")),(S||w)&&b(v),m&&C.clear&&delete C.clear}else x=h.getConstructor(r,n,g,v),a(x.prototype,t),s.NEED=!0;return f(x,n),I[n]=x,i(i.G+i.W+i.F*(x!=B),I),m||h.setStrong(x,n,g),x}},5645:function(n){var r=n.exports={version:"2.6.12"};"number"==typeof __e&&(__e=r)},2811:function(n,r,t){"use strict";var e=t(9275),i=t(681);n.exports=function(n,r,t){r in n?e.f(n,r,i(0,t)):n[r]=t}},741:function(n,r,t){var e=t(4963);n.exports=function(n,r,t){if(e(n),void 0===r)return n;switch(t){case 1:return function(t){return n.call(r,t)};case 2:return function(t,e){return n.call(r,t,e)};case 3:return function(t,e,i){return n.call(r,t,e,i)}}return function(){return n.apply(r,arguments)}}},3537:function(n,r,t){"use strict";var e=t(4253),i=Date.prototype.getTime,o=Date.prototype.toISOString,a=function(n){return n>9?n:"0"+n};n.exports=e((function(){return"0385-07-25T07:06:39.999Z"!=o.call(new Date(-50000000000001))}))||!e((function(){o.call(new Date(NaN))}))?function(){if(!isFinite(i.call(this)))throw RangeError("Invalid time value");var n=this,r=n.getUTCFullYear(),t=n.getUTCMilliseconds(),e=r<0?"-":r>9999?"+":"";return e+("00000"+Math.abs(r)).slice(e?-6:-4)+"-"+a(n.getUTCMonth()+1)+"-"+a(n.getUTCDate())+"T"+a(n.getUTCHours())+":"+a(n.getUTCMinutes())+":"+a(n.getUTCSeconds())+"."+(t>99?t:"0"+a(t))+"Z"}:o},870:function(n,r,t){"use strict";var e=t(7007),i=t(1689),o="number";n.exports=function(n){if("string"!==n&&n!==o&&"default"!==n)throw TypeError("Incorrect hint");return i(e(this),n!=o)}},1355:function(n){n.exports=function(n){if(null==n)throw TypeError("Can't call method on  "+n);return n}},7057:function(n,r,t){n.exports=!t(4253)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},2457:function(n,r,t){var e=t(5286),i=t(3816).document,o=e(i)&&e(i.createElement);n.exports=function(n){return o?i.createElement(n):{}}},4430:function(n){n.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},5541:function(n,r,t){var e=t(7184),i=t(4548),o=t(4682);n.exports=function(n){var r=e(n),t=i.f;if(t)for(var a,s=t(n),A=o.f,c=0;s.length>c;)A.call(n,a=s[c++])&&r.push(a);return r}},2985:function(n,r,t){var e=t(3816),i=t(5645),o=t(7728),a=t(7234),s=t(741),A=function(n,r,t){var c,l,u,p,f=n&A.F,d=n&A.G,h=n&A.S,g=n&A.P,m=n&A.B,B=d?e:h?e[r]||(e[r]={}):(e[r]||{}).prototype,x=d?i:i[r]||(i[r]={}),v=x.prototype||(x.prototype={});for(c in d&&(t=r),t)u=((l=!f&&B&&void 0!==B[c])?B:t)[c],p=m&&l?s(u,e):g&&"function"==typeof u?s(Function.call,u):u,B&&a(B,c,u,n&A.U),x[c]!=u&&o(x,c,p),g&&v[c]!=u&&(v[c]=u)};e.core=i,A.F=1,A.G=2,A.S=4,A.P=8,A.B=16,A.W=32,A.U=64,A.R=128,n.exports=A},8852:function(n,r,t){var e=t(6314)("match");n.exports=function(n){var r=/./;try{"/./"[n](r)}catch(t){try{return r[e]=!1,!"/./"[n](r)}catch(n){}}return!0}},4253:function(n){n.exports=function(n){try{return!!n()}catch(n){return!0}}},8082:function(n,r,t){"use strict";t(8269);var e=t(7234),i=t(7728),o=t(4253),a=t(1355),s=t(6314),A=t(1165),c=s("species"),l=!o((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")})),u=function(){var n=/(?:)/,r=n.exec;n.exec=function(){return r.apply(this,arguments)};var t="ab".split(n);return 2===t.length&&"a"===t[0]&&"b"===t[1]}();n.exports=function(n,r,t){var p=s(n),f=!o((function(){var r={};return r[p]=function(){return 7},7!=""[n](r)})),d=f?!o((function(){var r=!1,t=/a/;return t.exec=function(){return r=!0,null},"split"===n&&(t.constructor={},t.constructor[c]=function(){return t}),t[p](""),!r})):void 0;if(!f||!d||"replace"===n&&!l||"split"===n&&!u){var h=/./[p],g=t(a,p,""[n],(function(n,r,t,e,i){return r.exec===A?f&&!i?{done:!0,value:h.call(r,t,e)}:{done:!0,value:n.call(t,r,e)}:{done:!1}})),m=g[0],B=g[1];e(String.prototype,n,m),i(RegExp.prototype,p,2==r?function(n,r){return B.call(n,this,r)}:function(n){return B.call(n,this)})}}},3218:function(n,r,t){"use strict";var e=t(7007);n.exports=function(){var n=e(this),r="";return n.global&&(r+="g"),n.ignoreCase&&(r+="i"),n.multiline&&(r+="m"),n.unicode&&(r+="u"),n.sticky&&(r+="y"),r}},3325:function(n,r,t){"use strict";var e=t(4302),i=t(5286),o=t(875),a=t(741),s=t(6314)("isConcatSpreadable");n.exports=function n(r,t,A,c,l,u,p,f){for(var d,h,g=l,m=0,B=!!p&&a(p,f,3);m<c;){if(m in A){if(d=B?B(A[m],m,t):A[m],h=!1,i(d)&&(h=void 0!==(h=d[s])?!!h:e(d)),h&&u>0)g=n(r,t,d,o(d.length),g,u-1)-1;else{if(g>=9007199254740991)throw TypeError();r[g]=d}g++}m++}return g}},3531:function(n,r,t){var e=t(741),i=t(8851),o=t(6555),a=t(7007),s=t(875),A=t(9002),c={},l={},u=n.exports=function(n,r,t,u,p){var f,d,h,g,m=p?function(){return n}:A(n),B=e(t,u,r?2:1),x=0;if("function"!=typeof m)throw TypeError(n+" is not iterable!");if(o(m)){for(f=s(n.length);f>x;x++)if((g=r?B(a(d=n[x])[0],d[1]):B(n[x]))===c||g===l)return g}else for(h=m.call(n);!(d=h.next()).done;)if((g=i(h,B,d.value,r))===c||g===l)return g};u.BREAK=c,u.RETURN=l},18:function(n,r,t){n.exports=t(3825)("native-function-to-string",Function.toString)},3816:function(n){var r=n.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},9181:function(n){var r={}.hasOwnProperty;n.exports=function(n,t){return r.call(n,t)}},7728:function(n,r,t){var e=t(9275),i=t(681);n.exports=t(7057)?function(n,r,t){return e.f(n,r,i(1,t))}:function(n,r,t){return n[r]=t,n}},639:function(n,r,t){var e=t(3816).document;n.exports=e&&e.documentElement},1734:function(n,r,t){n.exports=!t(7057)&&!t(4253)((function(){return 7!=Object.defineProperty(t(2457)("div"),"a",{get:function(){return 7}}).a}))},266:function(n,r,t){var e=t(5286),i=t(7375).set;n.exports=function(n,r,t){var o,a=r.constructor;return a!==t&&"function"==typeof a&&(o=a.prototype)!==t.prototype&&e(o)&&i&&i(n,o),n}},7242:function(n){n.exports=function(n,r,t){var e=void 0===t;switch(r.length){case 0:return e?n():n.call(t);case 1:return e?n(r[0]):n.call(t,r[0]);case 2:return e?n(r[0],r[1]):n.call(t,r[0],r[1]);case 3:return e?n(r[0],r[1],r[2]):n.call(t,r[0],r[1],r[2]);case 4:return e?n(r[0],r[1],r[2],r[3]):n.call(t,r[0],r[1],r[2],r[3])}return n.apply(t,r)}},9797:function(n,r,t){var e=t(2032);n.exports=Object("z").propertyIsEnumerable(0)?Object:function(n){return"String"==e(n)?n.split(""):Object(n)}},6555:function(n,r,t){var e=t(2803),i=t(6314)("iterator"),o=Array.prototype;n.exports=function(n){return void 0!==n&&(e.Array===n||o[i]===n)}},4302:function(n,r,t){var e=t(2032);n.exports=Array.isArray||function(n){return"Array"==e(n)}},8367:function(n,r,t){var e=t(5286),i=Math.floor;n.exports=function(n){return!e(n)&&isFinite(n)&&i(n)===n}},5286:function(n){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},5364:function(n,r,t){var e=t(5286),i=t(2032),o=t(6314)("match");n.exports=function(n){var r;return e(n)&&(void 0!==(r=n[o])?!!r:"RegExp"==i(n))}},8851:function(n,r,t){var e=t(7007);n.exports=function(n,r,t,i){try{return i?r(e(t)[0],t[1]):r(t)}catch(r){var o=n.return;throw void 0!==o&&e(o.call(n)),r}}},9988:function(n,r,t){"use strict";var e=t(2503),i=t(681),o=t(2943),a={};t(7728)(a,t(6314)("iterator"),(function(){return this})),n.exports=function(n,r,t){n.prototype=e(a,{next:i(1,t)}),o(n,r+" Iterator")}},2923:function(n,r,t){"use strict";var e=t(4461),i=t(2985),o=t(7234),a=t(7728),s=t(2803),A=t(9988),c=t(2943),l=t(468),u=t(6314)("iterator"),p=!([].keys&&"next"in[].keys()),f="keys",d="values",h=function(){return this};n.exports=function(n,r,t,g,m,B,x){A(t,r,g);var v,C,I,b=function(n){if(!p&&n in E)return E[n];switch(n){case f:case d:return function(){return new t(this,n)}}return function(){return new t(this,n)}},y=r+" Iterator",w=m==d,k=!1,E=n.prototype,S=E[u]||E["@@iterator"]||m&&E[m],_=S||b(m),j=m?w?b("entries"):_:void 0,W="Array"==r&&E.entries||S;if(W&&(I=l(W.call(new n)))!==Object.prototype&&I.next&&(c(I,y,!0),e||"function"==typeof I[u]||a(I,u,h)),w&&S&&S.name!==d&&(k=!0,_=function(){return S.call(this)}),e&&!x||!p&&!k&&E[u]||a(E,u,_),s[r]=_,s[y]=h,m)if(v={values:w?_:b(d),keys:B?_:b(f),entries:j},x)for(C in v)C in E||o(E,C,v[C]);else i(i.P+i.F*(p||k),r,v);return v}},7462:function(n,r,t){var e=t(6314)("iterator"),i=!1;try{var o=[7][e]();o.return=function(){i=!0},Array.from(o,(function(){throw 2}))}catch(n){}n.exports=function(n,r){if(!r&&!i)return!1;var t=!1;try{var o=[7],a=o[e]();a.next=function(){return{done:t=!0}},o[e]=function(){return a},n(o)}catch(n){}return t}},5436:function(n){n.exports=function(n,r){return{value:r,done:!!n}}},2803:function(n){n.exports={}},4461:function(n){n.exports=!1},3086:function(n){var r=Math.expm1;n.exports=!r||r(10)>22025.465794806718||r(10)<22025.465794806718||-2e-17!=r(-2e-17)?function(n){return 0==(n=+n)?n:n>-1e-6&&n<1e-6?n+n*n/2:Math.exp(n)-1}:r},4934:function(n,r,t){var e=t(1801),i=Math.pow,o=i(2,-52),a=i(2,-23),s=i(2,127)*(2-a),A=i(2,-126);n.exports=Math.fround||function(n){var r,t,i=Math.abs(n),c=e(n);return i<A?c*(i/A/a+1/o-1/o)*A*a:(t=(r=(1+a/o)*i)-(r-i))>s||t!=t?c*(1/0):c*t}},6206:function(n){n.exports=Math.log1p||function(n){return(n=+n)>-1e-8&&n<1e-8?n-n*n/2:Math.log(1+n)}},8757:function(n){n.exports=Math.scale||function(n,r,t,e,i){return 0===arguments.length||n!=n||r!=r||t!=t||e!=e||i!=i?NaN:n===1/0||n===-1/0?n:(n-r)*(i-e)/(t-r)+e}},1801:function(n){n.exports=Math.sign||function(n){return 0==(n=+n)||n!=n?n:n<0?-1:1}},4728:function(n,r,t){var e=t(3953)("meta"),i=t(5286),o=t(9181),a=t(9275).f,s=0,A=Object.isExtensible||function(){return!0},c=!t(4253)((function(){return A(Object.preventExtensions({}))})),l=function(n){a(n,e,{value:{i:"O"+ ++s,w:{}}})},u=n.exports={KEY:e,NEED:!1,fastKey:function(n,r){if(!i(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!o(n,e)){if(!A(n))return"F";if(!r)return"E";l(n)}return n[e].i},getWeak:function(n,r){if(!o(n,e)){if(!A(n))return!0;if(!r)return!1;l(n)}return n[e].w},onFreeze:function(n){return c&&u.NEED&&A(n)&&!o(n,e)&&l(n),n}}},133:function(n,r,t){var e=t(8416),i=t(2985),o=t(3825)("metadata"),a=o.store||(o.store=new(t(147))),s=function(n,r,t){var i=a.get(n);if(!i){if(!t)return;a.set(n,i=new e)}var o=i.get(r);if(!o){if(!t)return;i.set(r,o=new e)}return o};n.exports={store:a,map:s,has:function(n,r,t){var e=s(r,t,!1);return void 0!==e&&e.has(n)},get:function(n,r,t){var e=s(r,t,!1);return void 0===e?void 0:e.get(n)},set:function(n,r,t,e){s(t,e,!0).set(n,r)},keys:function(n,r){var t=s(n,r,!1),e=[];return t&&t.forEach((function(n,r){e.push(r)})),e},key:function(n){return void 0===n||"symbol"==typeof n?n:String(n)},exp:function(n){i(i.S,"Reflect",n)}}},4351:function(n,r,t){var e=t(3816),i=t(4193).set,o=e.MutationObserver||e.WebKitMutationObserver,a=e.process,s=e.Promise,A="process"==t(2032)(a);n.exports=function(){var n,r,t,c=function(){var e,i;for(A&&(e=a.domain)&&e.exit();n;){i=n.fn,n=n.next;try{i()}catch(e){throw n?t():r=void 0,e}}r=void 0,e&&e.enter()};if(A)t=function(){a.nextTick(c)};else if(!o||e.navigator&&e.navigator.standalone)if(s&&s.resolve){var l=s.resolve(void 0);t=function(){l.then(c)}}else t=function(){i.call(e,c)};else{var u=!0,p=document.createTextNode("");new o(c).observe(p,{characterData:!0}),t=function(){p.data=u=!u}}return function(e){var i={fn:e,next:void 0};r&&(r.next=i),n||(n=i,t()),r=i}}},3499:function(n,r,t){"use strict";var e=t(4963);function i(n){var r,t;this.promise=new n((function(n,e){if(void 0!==r||void 0!==t)throw TypeError("Bad Promise constructor");r=n,t=e})),this.resolve=e(r),this.reject=e(t)}n.exports.f=function(n){return new i(n)}},5345:function(n,r,t){"use strict";var e=t(7057),i=t(7184),o=t(4548),a=t(4682),s=t(508),A=t(9797),c=Object.assign;n.exports=!c||t(4253)((function(){var n={},r={},t=Symbol(),e="abcdefghijklmnopqrst";return n[t]=7,e.split("").forEach((function(n){r[n]=n})),7!=c({},n)[t]||Object.keys(c({},r)).join("")!=e}))?function(n,r){for(var t=s(n),c=arguments.length,l=1,u=o.f,p=a.f;c>l;)for(var f,d=A(arguments[l++]),h=u?i(d).concat(u(d)):i(d),g=h.length,m=0;g>m;)f=h[m++],e&&!p.call(d,f)||(t[f]=d[f]);return t}:c},2503:function(n,r,t){var e=t(7007),i=t(5588),o=t(4430),a=t(9335)("IE_PROTO"),s=function(){},A=function(){var n,r=t(2457)("iframe"),e=o.length;for(r.style.display="none",t(639).appendChild(r),r.src="javascript:",(n=r.contentWindow.document).open(),n.write("<script>document.F=Object<\/script>"),n.close(),A=n.F;e--;)delete A.prototype[o[e]];return A()};n.exports=Object.create||function(n,r){var t;return null!==n?(s.prototype=e(n),t=new s,s.prototype=null,t[a]=n):t=A(),void 0===r?t:i(t,r)}},9275:function(n,r,t){var e=t(7007),i=t(1734),o=t(1689),a=Object.defineProperty;r.f=t(7057)?Object.defineProperty:function(n,r,t){if(e(n),r=o(r,!0),e(t),i)try{return a(n,r,t)}catch(n){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(n[r]=t.value),n}},5588:function(n,r,t){var e=t(9275),i=t(7007),o=t(7184);n.exports=t(7057)?Object.defineProperties:function(n,r){i(n);for(var t,a=o(r),s=a.length,A=0;s>A;)e.f(n,t=a[A++],r[t]);return n}},1670:function(n,r,t){"use strict";n.exports=t(4461)||!t(4253)((function(){var n=Math.random();__defineSetter__.call(null,n,(function(){})),delete t(3816)[n]}))},8693:function(n,r,t){var e=t(4682),i=t(681),o=t(2110),a=t(1689),s=t(9181),A=t(1734),c=Object.getOwnPropertyDescriptor;r.f=t(7057)?c:function(n,r){if(n=o(n),r=a(r,!0),A)try{return c(n,r)}catch(n){}if(s(n,r))return i(!e.f.call(n,r),n[r])}},9327:function(n,r,t){var e=t(2110),i=t(616).f,o={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];n.exports.f=function(n){return a&&"[object Window]"==o.call(n)?function(n){try{return i(n)}catch(n){return a.slice()}}(n):i(e(n))}},616:function(n,r,t){var e=t(189),i=t(4430).concat("length","prototype");r.f=Object.getOwnPropertyNames||function(n){return e(n,i)}},4548:function(n,r){r.f=Object.getOwnPropertySymbols},468:function(n,r,t){var e=t(9181),i=t(508),o=t(9335)("IE_PROTO"),a=Object.prototype;n.exports=Object.getPrototypeOf||function(n){return n=i(n),e(n,o)?n[o]:"function"==typeof n.constructor&&n instanceof n.constructor?n.constructor.prototype:n instanceof Object?a:null}},189:function(n,r,t){var e=t(9181),i=t(2110),o=t(9315)(!1),a=t(9335)("IE_PROTO");n.exports=function(n,r){var t,s=i(n),A=0,c=[];for(t in s)t!=a&&e(s,t)&&c.push(t);for(;r.length>A;)e(s,t=r[A++])&&(~o(c,t)||c.push(t));return c}},7184:function(n,r,t){var e=t(189),i=t(4430);n.exports=Object.keys||function(n){return e(n,i)}},4682:function(n,r){r.f={}.propertyIsEnumerable},3160:function(n,r,t){var e=t(2985),i=t(5645),o=t(4253);n.exports=function(n,r){var t=(i.Object||{})[n]||Object[n],a={};a[n]=r(t),e(e.S+e.F*o((function(){t(1)})),"Object",a)}},1131:function(n,r,t){var e=t(7057),i=t(7184),o=t(2110),a=t(4682).f;n.exports=function(n){return function(r){for(var t,s=o(r),A=i(s),c=A.length,l=0,u=[];c>l;)t=A[l++],e&&!a.call(s,t)||u.push(n?[t,s[t]]:s[t]);return u}}},7643:function(n,r,t){var e=t(616),i=t(4548),o=t(7007),a=t(3816).Reflect;n.exports=a&&a.ownKeys||function(n){var r=e.f(o(n)),t=i.f;return t?r.concat(t(n)):r}},7743:function(n,r,t){var e=t(3816).parseFloat,i=t(9599).trim;n.exports=1/e(t(4644)+"-0")!=-1/0?function(n){var r=i(String(n),3),t=e(r);return 0===t&&"-"==r.charAt(0)?-0:t}:e},5960:function(n,r,t){var e=t(3816).parseInt,i=t(9599).trim,o=t(4644),a=/^[-+]?0[xX]/;n.exports=8!==e(o+"08")||22!==e(o+"0x16")?function(n,r){var t=i(String(n),3);return e(t,r>>>0||(a.test(t)?16:10))}:e},188:function(n){n.exports=function(n){try{return{e:!1,v:n()}}catch(n){return{e:!0,v:n}}}},94:function(n,r,t){var e=t(7007),i=t(5286),o=t(3499);n.exports=function(n,r){if(e(n),i(r)&&r.constructor===n)return r;var t=o.f(n);return(0,t.resolve)(r),t.promise}},681:function(n){n.exports=function(n,r){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:r}}},4408:function(n,r,t){var e=t(7234);n.exports=function(n,r,t){for(var i in r)e(n,i,r[i],t);return n}},7234:function(n,r,t){var e=t(3816),i=t(7728),o=t(9181),a=t(3953)("src"),s=t(18),A="toString",c=(""+s).split(A);t(5645).inspectSource=function(n){return s.call(n)},(n.exports=function(n,r,t,s){var A="function"==typeof t;A&&(o(t,"name")||i(t,"name",r)),n[r]!==t&&(A&&(o(t,a)||i(t,a,n[r]?""+n[r]:c.join(String(r)))),n===e?n[r]=t:s?n[r]?n[r]=t:i(n,r,t):(delete n[r],i(n,r,t)))})(Function.prototype,A,(function(){return"function"==typeof this&&this[a]||s.call(this)}))},7787:function(n,r,t){"use strict";var e=t(1488),i=RegExp.prototype.exec;n.exports=function(n,r){var t=n.exec;if("function"==typeof t){var o=t.call(n,r);if("object"!=typeof o)throw new TypeError("RegExp exec method returned something other than an Object or null");return o}if("RegExp"!==e(n))throw new TypeError("RegExp#exec called on incompatible receiver");return i.call(n,r)}},1165:function(n,r,t){"use strict";var e,i,o=t(3218),a=RegExp.prototype.exec,s=String.prototype.replace,A=a,c=(e=/a/,i=/b*/g,a.call(e,"a"),a.call(i,"a"),0!==e.lastIndex||0!==i.lastIndex),l=void 0!==/()??/.exec("")[1];(c||l)&&(A=function(n){var r,t,e,i,A=this;return l&&(t=new RegExp("^"+A.source+"$(?!\\s)",o.call(A))),c&&(r=A.lastIndex),e=a.call(A,n),c&&e&&(A.lastIndex=A.global?e.index+e[0].length:r),l&&e&&e.length>1&&s.call(e[0],t,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(e[i]=void 0)})),e}),n.exports=A},5496:function(n){n.exports=function(n,r){var t=r===Object(r)?function(n){return r[n]}:r;return function(r){return String(r).replace(n,t)}}},7195:function(n){n.exports=Object.is||function(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}},1024:function(n,r,t){"use strict";var e=t(2985),i=t(4963),o=t(741),a=t(3531);n.exports=function(n){e(e.S,n,{from:function(n){var r,t,e,s,A=arguments[1];return i(this),(r=void 0!==A)&&i(A),null==n?new this:(t=[],r?(e=0,s=o(A,arguments[2],2),a(n,!1,(function(n){t.push(s(n,e++))}))):a(n,!1,t.push,t),new this(t))}})}},4881:function(n,r,t){"use strict";var e=t(2985);n.exports=function(n){e(e.S,n,{of:function(){for(var n=arguments.length,r=new Array(n);n--;)r[n]=arguments[n];return new this(r)}})}},7375:function(n,r,t){var e=t(5286),i=t(7007),o=function(n,r){if(i(n),!e(r)&&null!==r)throw TypeError(r+": can't set as prototype!")};n.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(n,r,e){try{(e=t(741)(Function.call,t(8693).f(Object.prototype,"__proto__").set,2))(n,[]),r=!(n instanceof Array)}catch(n){r=!0}return function(n,t){return o(n,t),r?n.__proto__=t:e(n,t),n}}({},!1):void 0),check:o}},2974:function(n,r,t){"use strict";var e=t(3816),i=t(9275),o=t(7057),a=t(6314)("species");n.exports=function(n){var r=e[n];o&&r&&!r[a]&&i.f(r,a,{configurable:!0,get:function(){return this}})}},2943:function(n,r,t){var e=t(9275).f,i=t(9181),o=t(6314)("toStringTag");n.exports=function(n,r,t){n&&!i(n=t?n:n.prototype,o)&&e(n,o,{configurable:!0,value:r})}},9335:function(n,r,t){var e=t(3825)("keys"),i=t(3953);n.exports=function(n){return e[n]||(e[n]=i(n))}},3825:function(n,r,t){var e=t(5645),i=t(3816),o="__core-js_shared__",a=i[o]||(i[o]={});(n.exports=function(n,r){return a[n]||(a[n]=void 0!==r?r:{})})("versions",[]).push({version:e.version,mode:t(4461)?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},8364:function(n,r,t){var e=t(7007),i=t(4963),o=t(6314)("species");n.exports=function(n,r){var t,a=e(n).constructor;return void 0===a||null==(t=e(a)[o])?r:i(t)}},7717:function(n,r,t){"use strict";var e=t(4253);n.exports=function(n,r){return!!n&&e((function(){r?n.call(null,(function(){}),1):n.call(null)}))}},4496:function(n,r,t){var e=t(1467),i=t(1355);n.exports=function(n){return function(r,t){var o,a,s=String(i(r)),A=e(t),c=s.length;return A<0||A>=c?n?"":void 0:(o=s.charCodeAt(A))<55296||o>56319||A+1===c||(a=s.charCodeAt(A+1))<56320||a>57343?n?s.charAt(A):o:n?s.slice(A,A+2):a-56320+(o-55296<<10)+65536}}},2094:function(n,r,t){var e=t(5364),i=t(1355);n.exports=function(n,r,t){if(e(r))throw TypeError("String#"+t+" doesn't accept regex!");return String(i(n))}},9395:function(n,r,t){var e=t(2985),i=t(4253),o=t(1355),a=/"/g,s=function(n,r,t,e){var i=String(o(n)),s="<"+r;return""!==t&&(s+=" "+t+'="'+String(e).replace(a,"&quot;")+'"'),s+">"+i+"</"+r+">"};n.exports=function(n,r){var t={};t[n]=r(s),e(e.P+e.F*i((function(){var r=""[n]('"');return r!==r.toLowerCase()||r.split('"').length>3})),"String",t)}},5442:function(n,r,t){var e=t(875),i=t(8595),o=t(1355);n.exports=function(n,r,t,a){var s=String(o(n)),A=s.length,c=void 0===t?" ":String(t),l=e(r);if(l<=A||""==c)return s;var u=l-A,p=i.call(c,Math.ceil(u/c.length));return p.length>u&&(p=p.slice(0,u)),a?p+s:s+p}},8595:function(n,r,t){"use strict";var e=t(1467),i=t(1355);n.exports=function(n){var r=String(i(this)),t="",o=e(n);if(o<0||o==1/0)throw RangeError("Count can't be negative");for(;o>0;(o>>>=1)&&(r+=r))1&o&&(t+=r);return t}},9599:function(n,r,t){var e=t(2985),i=t(1355),o=t(4253),a=t(4644),s="["+a+"]",A=RegExp("^"+s+s+"*"),c=RegExp(s+s+"*$"),l=function(n,r,t){var i={},s=o((function(){return!!a[n]()||"​"!="​"[n]()})),A=i[n]=s?r(u):a[n];t&&(i[t]=A),e(e.P+e.F*s,"String",i)},u=l.trim=function(n,r){return n=String(i(n)),1&r&&(n=n.replace(A,"")),2&r&&(n=n.replace(c,"")),n};n.exports=l},4644:function(n){n.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},4193:function(n,r,t){var e,i,o,a=t(741),s=t(7242),A=t(639),c=t(2457),l=t(3816),u=l.process,p=l.setImmediate,f=l.clearImmediate,d=l.MessageChannel,h=l.Dispatch,g=0,m={},B=function(){var n=+this;if(m.hasOwnProperty(n)){var r=m[n];delete m[n],r()}},x=function(n){B.call(n.data)};p&&f||(p=function(n){for(var r=[],t=1;arguments.length>t;)r.push(arguments[t++]);return m[++g]=function(){s("function"==typeof n?n:Function(n),r)},e(g),g},f=function(n){delete m[n]},"process"==t(2032)(u)?e=function(n){u.nextTick(a(B,n,1))}:h&&h.now?e=function(n){h.now(a(B,n,1))}:d?(o=(i=new d).port2,i.port1.onmessage=x,e=a(o.postMessage,o,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(e=function(n){l.postMessage(n+"","*")},l.addEventListener("message",x,!1)):e="onreadystatechange"in c("script")?function(n){A.appendChild(c("script")).onreadystatechange=function(){A.removeChild(this),B.call(n)}}:function(n){setTimeout(a(B,n,1),0)}),n.exports={set:p,clear:f}},2337:function(n,r,t){var e=t(1467),i=Math.max,o=Math.min;n.exports=function(n,r){return(n=e(n))<0?i(n+r,0):o(n,r)}},4843:function(n,r,t){var e=t(1467),i=t(875);n.exports=function(n){if(void 0===n)return 0;var r=e(n),t=i(r);if(r!==t)throw RangeError("Wrong length!");return t}},1467:function(n){var r=Math.ceil,t=Math.floor;n.exports=function(n){return isNaN(n=+n)?0:(n>0?t:r)(n)}},2110:function(n,r,t){var e=t(9797),i=t(1355);n.exports=function(n){return e(i(n))}},875:function(n,r,t){var e=t(1467),i=Math.min;n.exports=function(n){return n>0?i(e(n),9007199254740991):0}},508:function(n,r,t){var e=t(1355);n.exports=function(n){return Object(e(n))}},1689:function(n,r,t){var e=t(5286);n.exports=function(n,r){if(!e(n))return n;var t,i;if(r&&"function"==typeof(t=n.toString)&&!e(i=t.call(n)))return i;if("function"==typeof(t=n.valueOf)&&!e(i=t.call(n)))return i;if(!r&&"function"==typeof(t=n.toString)&&!e(i=t.call(n)))return i;throw TypeError("Can't convert object to primitive value")}},8440:function(n,r,t){"use strict";if(t(7057)){var e=t(4461),i=t(3816),o=t(4253),a=t(2985),s=t(9383),A=t(1125),c=t(741),l=t(3328),u=t(681),p=t(7728),f=t(4408),d=t(1467),h=t(875),g=t(4843),m=t(2337),B=t(1689),x=t(9181),v=t(1488),C=t(5286),I=t(508),b=t(6555),y=t(2503),w=t(468),k=t(616).f,E=t(9002),S=t(3953),_=t(6314),j=t(50),W=t(9315),M=t(8364),P=t(6997),T=t(2803),L=t(7462),O=t(2974),z=t(6852),N=t(5216),F=t(9275),R=t(8693),Y=F.f,$=R.f,X=i.RangeError,U=i.TypeError,q=i.Uint8Array,Z="ArrayBuffer",V="SharedArrayBuffer",H="BYTES_PER_ELEMENT",D=Array.prototype,G=A.ArrayBuffer,Q=A.DataView,J=j(0),K=j(2),nn=j(3),rn=j(4),tn=j(5),en=j(6),on=W(!0),an=W(!1),sn=P.values,An=P.keys,cn=P.entries,ln=D.lastIndexOf,un=D.reduce,pn=D.reduceRight,fn=D.join,dn=D.sort,hn=D.slice,gn=D.toString,mn=D.toLocaleString,Bn=_("iterator"),xn=_("toStringTag"),vn=S("typed_constructor"),Cn=S("def_constructor"),In=s.CONSTR,bn=s.TYPED,yn=s.VIEW,wn="Wrong length!",kn=j(1,(function(n,r){return Wn(M(n,n[Cn]),r)})),En=o((function(){return 1===new q(new Uint16Array([1]).buffer)[0]})),Sn=!!q&&!!q.prototype.set&&o((function(){new q(1).set({})})),_n=function(n,r){var t=d(n);if(t<0||t%r)throw X("Wrong offset!");return t},jn=function(n){if(C(n)&&bn in n)return n;throw U(n+" is not a typed array!")},Wn=function(n,r){if(!C(n)||!(vn in n))throw U("It is not a typed array constructor!");return new n(r)},Mn=function(n,r){return Pn(M(n,n[Cn]),r)},Pn=function(n,r){for(var t=0,e=r.length,i=Wn(n,e);e>t;)i[t]=r[t++];return i},Tn=function(n,r,t){Y(n,r,{get:function(){return this._d[t]}})},Ln=function(n){var r,t,e,i,o,a,s=I(n),A=arguments.length,l=A>1?arguments[1]:void 0,u=void 0!==l,p=E(s);if(null!=p&&!b(p)){for(a=p.call(s),e=[],r=0;!(o=a.next()).done;r++)e.push(o.value);s=e}for(u&&A>2&&(l=c(l,arguments[2],2)),r=0,t=h(s.length),i=Wn(this,t);t>r;r++)i[r]=u?l(s[r],r):s[r];return i},On=function(){for(var n=0,r=arguments.length,t=Wn(this,r);r>n;)t[n]=arguments[n++];return t},zn=!!q&&o((function(){mn.call(new q(1))})),Nn=function(){return mn.apply(zn?hn.call(jn(this)):jn(this),arguments)},Fn={copyWithin:function(n,r){return N.call(jn(this),n,r,arguments.length>2?arguments[2]:void 0)},every:function(n){return rn(jn(this),n,arguments.length>1?arguments[1]:void 0)},fill:function(n){return z.apply(jn(this),arguments)},filter:function(n){return Mn(this,K(jn(this),n,arguments.length>1?arguments[1]:void 0))},find:function(n){return tn(jn(this),n,arguments.length>1?arguments[1]:void 0)},findIndex:function(n){return en(jn(this),n,arguments.length>1?arguments[1]:void 0)},forEach:function(n){J(jn(this),n,arguments.length>1?arguments[1]:void 0)},indexOf:function(n){return an(jn(this),n,arguments.length>1?arguments[1]:void 0)},includes:function(n){return on(jn(this),n,arguments.length>1?arguments[1]:void 0)},join:function(n){return fn.apply(jn(this),arguments)},lastIndexOf:function(n){return ln.apply(jn(this),arguments)},map:function(n){return kn(jn(this),n,arguments.length>1?arguments[1]:void 0)},reduce:function(n){return un.apply(jn(this),arguments)},reduceRight:function(n){return pn.apply(jn(this),arguments)},reverse:function(){for(var n,r=this,t=jn(r).length,e=Math.floor(t/2),i=0;i<e;)n=r[i],r[i++]=r[--t],r[t]=n;return r},some:function(n){return nn(jn(this),n,arguments.length>1?arguments[1]:void 0)},sort:function(n){return dn.call(jn(this),n)},subarray:function(n,r){var t=jn(this),e=t.length,i=m(n,e);return new(M(t,t[Cn]))(t.buffer,t.byteOffset+i*t.BYTES_PER_ELEMENT,h((void 0===r?e:m(r,e))-i))}},Rn=function(n,r){return Mn(this,hn.call(jn(this),n,r))},Yn=function(n){jn(this);var r=_n(arguments[1],1),t=this.length,e=I(n),i=h(e.length),o=0;if(i+r>t)throw X(wn);for(;o<i;)this[r+o]=e[o++]},$n={entries:function(){return cn.call(jn(this))},keys:function(){return An.call(jn(this))},values:function(){return sn.call(jn(this))}},Xn=function(n,r){return C(n)&&n[bn]&&"symbol"!=typeof r&&r in n&&String(+r)==String(r)},Un=function(n,r){return Xn(n,r=B(r,!0))?u(2,n[r]):$(n,r)},qn=function(n,r,t){return!(Xn(n,r=B(r,!0))&&C(t)&&x(t,"value"))||x(t,"get")||x(t,"set")||t.configurable||x(t,"writable")&&!t.writable||x(t,"enumerable")&&!t.enumerable?Y(n,r,t):(n[r]=t.value,n)};In||(R.f=Un,F.f=qn),a(a.S+a.F*!In,"Object",{getOwnPropertyDescriptor:Un,defineProperty:qn}),o((function(){gn.call({})}))&&(gn=mn=function(){return fn.call(this)});var Zn=f({},Fn);f(Zn,$n),p(Zn,Bn,$n.values),f(Zn,{slice:Rn,set:Yn,constructor:function(){},toString:gn,toLocaleString:Nn}),Tn(Zn,"buffer","b"),Tn(Zn,"byteOffset","o"),Tn(Zn,"byteLength","l"),Tn(Zn,"length","e"),Y(Zn,xn,{get:function(){return this[bn]}}),n.exports=function(n,r,t,A){var c=n+((A=!!A)?"Clamped":"")+"Array",u="get"+n,f="set"+n,d=i[c],m=d||{},B=d&&w(d),x=!d||!s.ABV,I={},b=d&&d.prototype,E=function(n,t){Y(n,t,{get:function(){return function(n,t){var e=n._d;return e.v[u](t*r+e.o,En)}(this,t)},set:function(n){return function(n,t,e){var i=n._d;A&&(e=(e=Math.round(e))<0?0:e>255?255:255&e),i.v[f](t*r+i.o,e,En)}(this,t,n)},enumerable:!0})};x?(d=t((function(n,t,e,i){l(n,d,c,"_d");var o,a,s,A,u=0,f=0;if(C(t)){if(!(t instanceof G||(A=v(t))==Z||A==V))return bn in t?Pn(d,t):Ln.call(d,t);o=t,f=_n(e,r);var m=t.byteLength;if(void 0===i){if(m%r)throw X(wn);if((a=m-f)<0)throw X(wn)}else if((a=h(i)*r)+f>m)throw X(wn);s=a/r}else s=g(t),o=new G(a=s*r);for(p(n,"_d",{b:o,o:f,l:a,e:s,v:new Q(o)});u<s;)E(n,u++)})),b=d.prototype=y(Zn),p(b,"constructor",d)):o((function(){d(1)}))&&o((function(){new d(-1)}))&&L((function(n){new d,new d(null),new d(1.5),new d(n)}),!0)||(d=t((function(n,t,e,i){var o;return l(n,d,c),C(t)?t instanceof G||(o=v(t))==Z||o==V?void 0!==i?new m(t,_n(e,r),i):void 0!==e?new m(t,_n(e,r)):new m(t):bn in t?Pn(d,t):Ln.call(d,t):new m(g(t))})),J(B!==Function.prototype?k(m).concat(k(B)):k(m),(function(n){n in d||p(d,n,m[n])})),d.prototype=b,e||(b.constructor=d));var S=b[Bn],_=!!S&&("values"==S.name||null==S.name),j=$n.values;p(d,vn,!0),p(b,bn,c),p(b,yn,!0),p(b,Cn,d),(A?new d(1)[xn]==c:xn in b)||Y(b,xn,{get:function(){return c}}),I[c]=d,a(a.G+a.W+a.F*(d!=m),I),a(a.S,c,{BYTES_PER_ELEMENT:r}),a(a.S+a.F*o((function(){m.of.call(d,1)})),c,{from:Ln,of:On}),H in b||p(b,H,r),a(a.P,c,Fn),O(c),a(a.P+a.F*Sn,c,{set:Yn}),a(a.P+a.F*!_,c,$n),e||b.toString==gn||(b.toString=gn),a(a.P+a.F*o((function(){new d(1).slice()})),c,{slice:Rn}),a(a.P+a.F*(o((function(){return[1,2].toLocaleString()!=new d([1,2]).toLocaleString()}))||!o((function(){b.toLocaleString.call([1,2])}))),c,{toLocaleString:Nn}),T[c]=_?S:j,e||_||p(b,Bn,j)}}else n.exports=function(){}},1125:function(n,r,t){"use strict";var e=t(3816),i=t(7057),o=t(4461),a=t(9383),s=t(7728),A=t(4408),c=t(4253),l=t(3328),u=t(1467),p=t(875),f=t(4843),d=t(616).f,h=t(9275).f,g=t(6852),m=t(2943),B="ArrayBuffer",x="DataView",v="Wrong index!",C=e.ArrayBuffer,I=e.DataView,b=e.Math,y=e.RangeError,w=e.Infinity,k=C,E=b.abs,S=b.pow,_=b.floor,j=b.log,W=b.LN2,M="buffer",P="byteLength",T="byteOffset",L=i?"_b":M,O=i?"_l":P,z=i?"_o":T;function N(n,r,t){var e,i,o,a=new Array(t),s=8*t-r-1,A=(1<<s)-1,c=A>>1,l=23===r?S(2,-24)-S(2,-77):0,u=0,p=n<0||0===n&&1/n<0?1:0;for((n=E(n))!=n||n===w?(i=n!=n?1:0,e=A):(e=_(j(n)/W),n*(o=S(2,-e))<1&&(e--,o*=2),(n+=e+c>=1?l/o:l*S(2,1-c))*o>=2&&(e++,o/=2),e+c>=A?(i=0,e=A):e+c>=1?(i=(n*o-1)*S(2,r),e+=c):(i=n*S(2,c-1)*S(2,r),e=0));r>=8;a[u++]=255&i,i/=256,r-=8);for(e=e<<r|i,s+=r;s>0;a[u++]=255&e,e/=256,s-=8);return a[--u]|=128*p,a}function F(n,r,t){var e,i=8*t-r-1,o=(1<<i)-1,a=o>>1,s=i-7,A=t-1,c=n[A--],l=127&c;for(c>>=7;s>0;l=256*l+n[A],A--,s-=8);for(e=l&(1<<-s)-1,l>>=-s,s+=r;s>0;e=256*e+n[A],A--,s-=8);if(0===l)l=1-a;else{if(l===o)return e?NaN:c?-w:w;e+=S(2,r),l-=a}return(c?-1:1)*e*S(2,l-r)}function R(n){return n[3]<<24|n[2]<<16|n[1]<<8|n[0]}function Y(n){return[255&n]}function $(n){return[255&n,n>>8&255]}function X(n){return[255&n,n>>8&255,n>>16&255,n>>24&255]}function U(n){return N(n,52,8)}function q(n){return N(n,23,4)}function Z(n,r,t){h(n.prototype,r,{get:function(){return this[t]}})}function V(n,r,t,e){var i=f(+t);if(i+r>n[O])throw y(v);var o=n[L]._b,a=i+n[z],s=o.slice(a,a+r);return e?s:s.reverse()}function H(n,r,t,e,i,o){var a=f(+t);if(a+r>n[O])throw y(v);for(var s=n[L]._b,A=a+n[z],c=e(+i),l=0;l<r;l++)s[A+l]=c[o?l:r-l-1]}if(a.ABV){if(!c((function(){C(1)}))||!c((function(){new C(-1)}))||c((function(){return new C,new C(1.5),new C(NaN),C.name!=B}))){for(var D,G=(C=function(n){return l(this,C),new k(f(n))}).prototype=k.prototype,Q=d(k),J=0;Q.length>J;)(D=Q[J++])in C||s(C,D,k[D]);o||(G.constructor=C)}var K=new I(new C(2)),nn=I.prototype.setInt8;K.setInt8(0,2147483648),K.setInt8(1,2147483649),!K.getInt8(0)&&K.getInt8(1)||A(I.prototype,{setInt8:function(n,r){nn.call(this,n,r<<24>>24)},setUint8:function(n,r){nn.call(this,n,r<<24>>24)}},!0)}else C=function(n){l(this,C,B);var r=f(n);this._b=g.call(new Array(r),0),this[O]=r},I=function(n,r,t){l(this,I,x),l(n,C,x);var e=n[O],i=u(r);if(i<0||i>e)throw y("Wrong offset!");if(i+(t=void 0===t?e-i:p(t))>e)throw y("Wrong length!");this[L]=n,this[z]=i,this[O]=t},i&&(Z(C,P,"_l"),Z(I,M,"_b"),Z(I,P,"_l"),Z(I,T,"_o")),A(I.prototype,{getInt8:function(n){return V(this,1,n)[0]<<24>>24},getUint8:function(n){return V(this,1,n)[0]},getInt16:function(n){var r=V(this,2,n,arguments[1]);return(r[1]<<8|r[0])<<16>>16},getUint16:function(n){var r=V(this,2,n,arguments[1]);return r[1]<<8|r[0]},getInt32:function(n){return R(V(this,4,n,arguments[1]))},getUint32:function(n){return R(V(this,4,n,arguments[1]))>>>0},getFloat32:function(n){return F(V(this,4,n,arguments[1]),23,4)},getFloat64:function(n){return F(V(this,8,n,arguments[1]),52,8)},setInt8:function(n,r){H(this,1,n,Y,r)},setUint8:function(n,r){H(this,1,n,Y,r)},setInt16:function(n,r){H(this,2,n,$,r,arguments[2])},setUint16:function(n,r){H(this,2,n,$,r,arguments[2])},setInt32:function(n,r){H(this,4,n,X,r,arguments[2])},setUint32:function(n,r){H(this,4,n,X,r,arguments[2])},setFloat32:function(n,r){H(this,4,n,q,r,arguments[2])},setFloat64:function(n,r){H(this,8,n,U,r,arguments[2])}});m(C,B),m(I,x),s(I.prototype,a.VIEW,!0),r.ArrayBuffer=C,r.DataView=I},9383:function(n,r,t){for(var e,i=t(3816),o=t(7728),a=t(3953),s=a("typed_array"),A=a("view"),c=!(!i.ArrayBuffer||!i.DataView),l=c,u=0,p="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");u<9;)(e=i[p[u++]])?(o(e.prototype,s,!0),o(e.prototype,A,!0)):l=!1;n.exports={ABV:c,CONSTR:l,TYPED:s,VIEW:A}},3953:function(n){var r=0,t=Math.random();n.exports=function(n){return"Symbol(".concat(void 0===n?"":n,")_",(++r+t).toString(36))}},575:function(n,r,t){var e=t(3816).navigator;n.exports=e&&e.userAgent||""},1616:function(n,r,t){var e=t(5286);n.exports=function(n,r){if(!e(n)||n._t!==r)throw TypeError("Incompatible receiver, "+r+" required!");return n}},6074:function(n,r,t){var e=t(3816),i=t(5645),o=t(4461),a=t(8787),s=t(9275).f;n.exports=function(n){var r=i.Symbol||(i.Symbol=o?{}:e.Symbol||{});"_"==n.charAt(0)||n in r||s(r,n,{value:a.f(n)})}},8787:function(n,r,t){r.f=t(6314)},6314:function(n,r,t){var e=t(3825)("wks"),i=t(3953),o=t(3816).Symbol,a="function"==typeof o;(n.exports=function(n){return e[n]||(e[n]=a&&o[n]||(a?o:i)("Symbol."+n))}).store=e},9002:function(n,r,t){var e=t(1488),i=t(6314)("iterator"),o=t(2803);n.exports=t(5645).getIteratorMethod=function(n){if(null!=n)return n[i]||n["@@iterator"]||o[e(n)]}},1761:function(n,r,t){var e=t(2985),i=t(5496)(/[\\^$*+?.()|[\]{}]/g,"\\$&");e(e.S,"RegExp",{escape:function(n){return i(n)}})},2e3:function(n,r,t){var e=t(2985);e(e.P,"Array",{copyWithin:t(5216)}),t(7722)("copyWithin")},5745:function(n,r,t){"use strict";var e=t(2985),i=t(50)(4);e(e.P+e.F*!t(7717)([].every,!0),"Array",{every:function(n){return i(this,n,arguments[1])}})},8977:function(n,r,t){var e=t(2985);e(e.P,"Array",{fill:t(6852)}),t(7722)("fill")},8837:function(n,r,t){"use strict";var e=t(2985),i=t(50)(2);e(e.P+e.F*!t(7717)([].filter,!0),"Array",{filter:function(n){return i(this,n,arguments[1])}})},4899:function(n,r,t){"use strict";var e=t(2985),i=t(50)(6),o="findIndex",a=!0;o in[]&&Array(1)[o]((function(){a=!1})),e(e.P+e.F*a,"Array",{findIndex:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0)}}),t(7722)(o)},2310:function(n,r,t){"use strict";var e=t(2985),i=t(50)(5),o="find",a=!0;o in[]&&Array(1).find((function(){a=!1})),e(e.P+e.F*a,"Array",{find:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0)}}),t(7722)(o)},4336:function(n,r,t){"use strict";var e=t(2985),i=t(50)(0),o=t(7717)([].forEach,!0);e(e.P+e.F*!o,"Array",{forEach:function(n){return i(this,n,arguments[1])}})},522:function(n,r,t){"use strict";var e=t(741),i=t(2985),o=t(508),a=t(8851),s=t(6555),A=t(875),c=t(2811),l=t(9002);i(i.S+i.F*!t(7462)((function(n){Array.from(n)})),"Array",{from:function(n){var r,t,i,u,p=o(n),f="function"==typeof this?this:Array,d=arguments.length,h=d>1?arguments[1]:void 0,g=void 0!==h,m=0,B=l(p);if(g&&(h=e(h,d>2?arguments[2]:void 0,2)),null==B||f==Array&&s(B))for(t=new f(r=A(p.length));r>m;m++)c(t,m,g?h(p[m],m):p[m]);else for(u=B.call(p),t=new f;!(i=u.next()).done;m++)c(t,m,g?a(u,h,[i.value,m],!0):i.value);return t.length=m,t}})},3369:function(n,r,t){"use strict";var e=t(2985),i=t(9315)(!1),o=[].indexOf,a=!!o&&1/[1].indexOf(1,-0)<0;e(e.P+e.F*(a||!t(7717)(o)),"Array",{indexOf:function(n){return a?o.apply(this,arguments)||0:i(this,n,arguments[1])}})},774:function(n,r,t){var e=t(2985);e(e.S,"Array",{isArray:t(4302)})},6997:function(n,r,t){"use strict";var e=t(7722),i=t(5436),o=t(2803),a=t(2110);n.exports=t(2923)(Array,"Array",(function(n,r){this._t=a(n),this._i=0,this._k=r}),(function(){var n=this._t,r=this._k,t=this._i++;return!n||t>=n.length?(this._t=void 0,i(1)):i(0,"keys"==r?t:"values"==r?n[t]:[t,n[t]])}),"values"),o.Arguments=o.Array,e("keys"),e("values"),e("entries")},7842:function(n,r,t){"use strict";var e=t(2985),i=t(2110),o=[].join;e(e.P+e.F*(t(9797)!=Object||!t(7717)(o)),"Array",{join:function(n){return o.call(i(this),void 0===n?",":n)}})},9564:function(n,r,t){"use strict";var e=t(2985),i=t(2110),o=t(1467),a=t(875),s=[].lastIndexOf,A=!!s&&1/[1].lastIndexOf(1,-0)<0;e(e.P+e.F*(A||!t(7717)(s)),"Array",{lastIndexOf:function(n){if(A)return s.apply(this,arguments)||0;var r=i(this),t=a(r.length),e=t-1;for(arguments.length>1&&(e=Math.min(e,o(arguments[1]))),e<0&&(e=t+e);e>=0;e--)if(e in r&&r[e]===n)return e||0;return-1}})},1802:function(n,r,t){"use strict";var e=t(2985),i=t(50)(1);e(e.P+e.F*!t(7717)([].map,!0),"Array",{map:function(n){return i(this,n,arguments[1])}})},8295:function(n,r,t){"use strict";var e=t(2985),i=t(2811);e(e.S+e.F*t(4253)((function(){function n(){}return!(Array.of.call(n)instanceof n)})),"Array",{of:function(){for(var n=0,r=arguments.length,t=new("function"==typeof this?this:Array)(r);r>n;)i(t,n,arguments[n++]);return t.length=r,t}})},3750:function(n,r,t){"use strict";var e=t(2985),i=t(7628);e(e.P+e.F*!t(7717)([].reduceRight,!0),"Array",{reduceRight:function(n){return i(this,n,arguments.length,arguments[1],!0)}})},3057:function(n,r,t){"use strict";var e=t(2985),i=t(7628);e(e.P+e.F*!t(7717)([].reduce,!0),"Array",{reduce:function(n){return i(this,n,arguments.length,arguments[1],!1)}})},110:function(n,r,t){"use strict";var e=t(2985),i=t(639),o=t(2032),a=t(2337),s=t(875),A=[].slice;e(e.P+e.F*t(4253)((function(){i&&A.call(i)})),"Array",{slice:function(n,r){var t=s(this.length),e=o(this);if(r=void 0===r?t:r,"Array"==e)return A.call(this,n,r);for(var i=a(n,t),c=a(r,t),l=s(c-i),u=new Array(l),p=0;p<l;p++)u[p]="String"==e?this.charAt(i+p):this[i+p];return u}})},6773:function(n,r,t){"use strict";var e=t(2985),i=t(50)(3);e(e.P+e.F*!t(7717)([].some,!0),"Array",{some:function(n){return i(this,n,arguments[1])}})},75:function(n,r,t){"use strict";var e=t(2985),i=t(4963),o=t(508),a=t(4253),s=[].sort,A=[1,2,3];e(e.P+e.F*(a((function(){A.sort(void 0)}))||!a((function(){A.sort(null)}))||!t(7717)(s)),"Array",{sort:function(n){return void 0===n?s.call(o(this)):s.call(o(this),i(n))}})},1842:function(n,r,t){t(2974)("Array")},1822:function(n,r,t){var e=t(2985);e(e.S,"Date",{now:function(){return(new Date).getTime()}})},1031:function(n,r,t){var e=t(2985),i=t(3537);e(e.P+e.F*(Date.prototype.toISOString!==i),"Date",{toISOString:i})},9977:function(n,r,t){"use strict";var e=t(2985),i=t(508),o=t(1689);e(e.P+e.F*t(4253)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(n){var r=i(this),t=o(r);return"number"!=typeof t||isFinite(t)?r.toISOString():null}})},1560:function(n,r,t){var e=t(6314)("toPrimitive"),i=Date.prototype;e in i||t(7728)(i,e,t(870))},6331:function(n,r,t){var e=Date.prototype,i="Invalid Date",o=e.toString,a=e.getTime;new Date(NaN)+""!=i&&t(7234)(e,"toString",(function(){var n=a.call(this);return n==n?o.call(this):i}))},9730:function(n,r,t){var e=t(2985);e(e.P,"Function",{bind:t(4398)})},8377:function(n,r,t){"use strict";var e=t(5286),i=t(468),o=t(6314)("hasInstance"),a=Function.prototype;o in a||t(9275).f(a,o,{value:function(n){if("function"!=typeof this||!e(n))return!1;if(!e(this.prototype))return n instanceof this;for(;n=i(n);)if(this.prototype===n)return!0;return!1}})},6059:function(n,r,t){var e=t(9275).f,i=Function.prototype,o=/^\s*function ([^ (]*)/,a="name";a in i||t(7057)&&e(i,a,{configurable:!0,get:function(){try{return(""+this).match(o)[1]}catch(n){return""}}})},8416:function(n,r,t){"use strict";var e=t(9824),i=t(1616),o="Map";n.exports=t(5795)(o,(function(n){return function(){return n(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(n){var r=e.getEntry(i(this,o),n);return r&&r.v},set:function(n,r){return e.def(i(this,o),0===n?0:n,r)}},e,!0)},6503:function(n,r,t){var e=t(2985),i=t(6206),o=Math.sqrt,a=Math.acosh;e(e.S+e.F*!(a&&710==Math.floor(a(Number.MAX_VALUE))&&a(1/0)==1/0),"Math",{acosh:function(n){return(n=+n)<1?NaN:n>94906265.62425156?Math.log(n)+Math.LN2:i(n-1+o(n-1)*o(n+1))}})},6786:function(n,r,t){var e=t(2985),i=Math.asinh;e(e.S+e.F*!(i&&1/i(0)>0),"Math",{asinh:function n(r){return isFinite(r=+r)&&0!=r?r<0?-n(-r):Math.log(r+Math.sqrt(r*r+1)):r}})},932:function(n,r,t){var e=t(2985),i=Math.atanh;e(e.S+e.F*!(i&&1/i(-0)<0),"Math",{atanh:function(n){return 0==(n=+n)?n:Math.log((1+n)/(1-n))/2}})},7526:function(n,r,t){var e=t(2985),i=t(1801);e(e.S,"Math",{cbrt:function(n){return i(n=+n)*Math.pow(Math.abs(n),1/3)}})},1591:function(n,r,t){var e=t(2985);e(e.S,"Math",{clz32:function(n){return(n>>>=0)?31-Math.floor(Math.log(n+.5)*Math.LOG2E):32}})},9073:function(n,r,t){var e=t(2985),i=Math.exp;e(e.S,"Math",{cosh:function(n){return(i(n=+n)+i(-n))/2}})},347:function(n,r,t){var e=t(2985),i=t(3086);e(e.S+e.F*(i!=Math.expm1),"Math",{expm1:i})},579:function(n,r,t){var e=t(2985);e(e.S,"Math",{fround:t(4934)})},4669:function(n,r,t){var e=t(2985),i=Math.abs;e(e.S,"Math",{hypot:function(n,r){for(var t,e,o=0,a=0,s=arguments.length,A=0;a<s;)A<(t=i(arguments[a++]))?(o=o*(e=A/t)*e+1,A=t):o+=t>0?(e=t/A)*e:t;return A===1/0?1/0:A*Math.sqrt(o)}})},7710:function(n,r,t){var e=t(2985),i=Math.imul;e(e.S+e.F*t(4253)((function(){return-5!=i(4294967295,5)||2!=i.length})),"Math",{imul:function(n,r){var t=65535,e=+n,i=+r,o=t&e,a=t&i;return 0|o*a+((t&e>>>16)*a+o*(t&i>>>16)<<16>>>0)}})},5789:function(n,r,t){var e=t(2985);e(e.S,"Math",{log10:function(n){return Math.log(n)*Math.LOG10E}})},3514:function(n,r,t){var e=t(2985);e(e.S,"Math",{log1p:t(6206)})},9978:function(n,r,t){var e=t(2985);e(e.S,"Math",{log2:function(n){return Math.log(n)/Math.LN2}})},8472:function(n,r,t){var e=t(2985);e(e.S,"Math",{sign:t(1801)})},6946:function(n,r,t){var e=t(2985),i=t(3086),o=Math.exp;e(e.S+e.F*t(4253)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(n){return Math.abs(n=+n)<1?(i(n)-i(-n))/2:(o(n-1)-o(-n-1))*(Math.E/2)}})},5068:function(n,r,t){var e=t(2985),i=t(3086),o=Math.exp;e(e.S,"Math",{tanh:function(n){var r=i(n=+n),t=i(-n);return r==1/0?1:t==1/0?-1:(r-t)/(o(n)+o(-n))}})},413:function(n,r,t){var e=t(2985);e(e.S,"Math",{trunc:function(n){return(n>0?Math.floor:Math.ceil)(n)}})},1246:function(n,r,t){"use strict";var e=t(3816),i=t(9181),o=t(2032),a=t(266),s=t(1689),A=t(4253),c=t(616).f,l=t(8693).f,u=t(9275).f,p=t(9599).trim,f="Number",d=e.Number,h=d,g=d.prototype,m=o(t(2503)(g))==f,B="trim"in String.prototype,x=function(n){var r=s(n,!1);if("string"==typeof r&&r.length>2){var t,e,i,o=(r=B?r.trim():p(r,3)).charCodeAt(0);if(43===o||45===o){if(88===(t=r.charCodeAt(2))||120===t)return NaN}else if(48===o){switch(r.charCodeAt(1)){case 66:case 98:e=2,i=49;break;case 79:case 111:e=8,i=55;break;default:return+r}for(var a,A=r.slice(2),c=0,l=A.length;c<l;c++)if((a=A.charCodeAt(c))<48||a>i)return NaN;return parseInt(A,e)}}return+r};if(!d(" 0o1")||!d("0b1")||d("+0x1")){d=function(n){var r=arguments.length<1?0:n,t=this;return t instanceof d&&(m?A((function(){g.valueOf.call(t)})):o(t)!=f)?a(new h(x(r)),t,d):x(r)};for(var v,C=t(7057)?c(h):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),I=0;C.length>I;I++)i(h,v=C[I])&&!i(d,v)&&u(d,v,l(h,v));d.prototype=g,g.constructor=d,t(7234)(e,f,d)}},5972:function(n,r,t){var e=t(2985);e(e.S,"Number",{EPSILON:Math.pow(2,-52)})},3403:function(n,r,t){var e=t(2985),i=t(3816).isFinite;e(e.S,"Number",{isFinite:function(n){return"number"==typeof n&&i(n)}})},2516:function(n,r,t){var e=t(2985);e(e.S,"Number",{isInteger:t(8367)})},9371:function(n,r,t){var e=t(2985);e(e.S,"Number",{isNaN:function(n){return n!=n}})},6479:function(n,r,t){var e=t(2985),i=t(8367),o=Math.abs;e(e.S,"Number",{isSafeInteger:function(n){return i(n)&&o(n)<=9007199254740991}})},1736:function(n,r,t){var e=t(2985);e(e.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},1889:function(n,r,t){var e=t(2985);e(e.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},5177:function(n,r,t){var e=t(2985),i=t(7743);e(e.S+e.F*(Number.parseFloat!=i),"Number",{parseFloat:i})},6943:function(n,r,t){var e=t(2985),i=t(5960);e(e.S+e.F*(Number.parseInt!=i),"Number",{parseInt:i})},726:function(n,r,t){"use strict";var e=t(2985),i=t(1467),o=t(3365),a=t(8595),s=1..toFixed,A=Math.floor,c=[0,0,0,0,0,0],l="Number.toFixed: incorrect invocation!",u="0",p=function(n,r){for(var t=-1,e=r;++t<6;)e+=n*c[t],c[t]=e%1e7,e=A(e/1e7)},f=function(n){for(var r=6,t=0;--r>=0;)t+=c[r],c[r]=A(t/n),t=t%n*1e7},d=function(){for(var n=6,r="";--n>=0;)if(""!==r||0===n||0!==c[n]){var t=String(c[n]);r=""===r?t:r+a.call(u,7-t.length)+t}return r},h=function(n,r,t){return 0===r?t:r%2==1?h(n,r-1,t*n):h(n*n,r/2,t)};e(e.P+e.F*(!!s&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!t(4253)((function(){s.call({})}))),"Number",{toFixed:function(n){var r,t,e,s,A=o(this,l),c=i(n),g="",m=u;if(c<0||c>20)throw RangeError(l);if(A!=A)return"NaN";if(A<=-1e21||A>=1e21)return String(A);if(A<0&&(g="-",A=-A),A>1e-21)if(t=(r=function(n){for(var r=0,t=n;t>=4096;)r+=12,t/=4096;for(;t>=2;)r+=1,t/=2;return r}(A*h(2,69,1))-69)<0?A*h(2,-r,1):A/h(2,r,1),t*=4503599627370496,(r=52-r)>0){for(p(0,t),e=c;e>=7;)p(1e7,0),e-=7;for(p(h(10,e,1),0),e=r-1;e>=23;)f(1<<23),e-=23;f(1<<e),p(1,1),f(2),m=d()}else p(0,t),p(1<<-r,0),m=d()+a.call(u,c);return c>0?g+((s=m.length)<=c?"0."+a.call(u,c-s)+m:m.slice(0,s-c)+"."+m.slice(s-c)):g+m}})},1901:function(n,r,t){"use strict";var e=t(2985),i=t(4253),o=t(3365),a=1..toPrecision;e(e.P+e.F*(i((function(){return"1"!==a.call(1,void 0)}))||!i((function(){a.call({})}))),"Number",{toPrecision:function(n){var r=o(this,"Number#toPrecision: incorrect invocation!");return void 0===n?a.call(r):a.call(r,n)}})},5115:function(n,r,t){var e=t(2985);e(e.S+e.F,"Object",{assign:t(5345)})},8132:function(n,r,t){var e=t(2985);e(e.S,"Object",{create:t(2503)})},7470:function(n,r,t){var e=t(2985);e(e.S+e.F*!t(7057),"Object",{defineProperties:t(5588)})},8388:function(n,r,t){var e=t(2985);e(e.S+e.F*!t(7057),"Object",{defineProperty:t(9275).f})},9375:function(n,r,t){var e=t(5286),i=t(4728).onFreeze;t(3160)("freeze",(function(n){return function(r){return n&&e(r)?n(i(r)):r}}))},4882:function(n,r,t){var e=t(2110),i=t(8693).f;t(3160)("getOwnPropertyDescriptor",(function(){return function(n,r){return i(e(n),r)}}))},9622:function(n,r,t){t(3160)("getOwnPropertyNames",(function(){return t(9327).f}))},1520:function(n,r,t){var e=t(508),i=t(468);t(3160)("getPrototypeOf",(function(){return function(n){return i(e(n))}}))},9892:function(n,r,t){var e=t(5286);t(3160)("isExtensible",(function(n){return function(r){return!!e(r)&&(!n||n(r))}}))},4157:function(n,r,t){var e=t(5286);t(3160)("isFrozen",(function(n){return function(r){return!e(r)||!!n&&n(r)}}))},5095:function(n,r,t){var e=t(5286);t(3160)("isSealed",(function(n){return function(r){return!e(r)||!!n&&n(r)}}))},9176:function(n,r,t){var e=t(2985);e(e.S,"Object",{is:t(7195)})},7476:function(n,r,t){var e=t(508),i=t(7184);t(3160)("keys",(function(){return function(n){return i(e(n))}}))},4672:function(n,r,t){var e=t(5286),i=t(4728).onFreeze;t(3160)("preventExtensions",(function(n){return function(r){return n&&e(r)?n(i(r)):r}}))},3533:function(n,r,t){var e=t(5286),i=t(4728).onFreeze;t(3160)("seal",(function(n){return function(r){return n&&e(r)?n(i(r)):r}}))},8838:function(n,r,t){var e=t(2985);e(e.S,"Object",{setPrototypeOf:t(7375).set})},6253:function(n,r,t){"use strict";var e=t(1488),i={};i[t(6314)("toStringTag")]="z",i+""!="[object z]"&&t(7234)(Object.prototype,"toString",(function(){return"[object "+e(this)+"]"}),!0)},4299:function(n,r,t){var e=t(2985),i=t(7743);e(e.G+e.F*(parseFloat!=i),{parseFloat:i})},1084:function(n,r,t){var e=t(2985),i=t(5960);e(e.G+e.F*(parseInt!=i),{parseInt:i})},851:function(n,r,t){"use strict";var e,i,o,a,s=t(4461),A=t(3816),c=t(741),l=t(1488),u=t(2985),p=t(5286),f=t(4963),d=t(3328),h=t(3531),g=t(8364),m=t(4193).set,B=t(4351)(),x=t(3499),v=t(188),C=t(575),I=t(94),b="Promise",y=A.TypeError,w=A.process,k=w&&w.versions,E=k&&k.v8||"",S=A.Promise,_="process"==l(w),j=function(){},W=i=x.f,M=!!function(){try{var n=S.resolve(1),r=(n.constructor={})[t(6314)("species")]=function(n){n(j,j)};return(_||"function"==typeof PromiseRejectionEvent)&&n.then(j)instanceof r&&0!==E.indexOf("6.6")&&-1===C.indexOf("Chrome/66")}catch(n){}}(),P=function(n){var r;return!(!p(n)||"function"!=typeof(r=n.then))&&r},T=function(n,r){if(!n._n){n._n=!0;var t=n._c;B((function(){for(var e=n._v,i=1==n._s,o=0,a=function(r){var t,o,a,s=i?r.ok:r.fail,A=r.resolve,c=r.reject,l=r.domain;try{s?(i||(2==n._h&&z(n),n._h=1),!0===s?t=e:(l&&l.enter(),t=s(e),l&&(l.exit(),a=!0)),t===r.promise?c(y("Promise-chain cycle")):(o=P(t))?o.call(t,A,c):A(t)):c(e)}catch(n){l&&!a&&l.exit(),c(n)}};t.length>o;)a(t[o++]);n._c=[],n._n=!1,r&&!n._h&&L(n)}))}},L=function(n){m.call(A,(function(){var r,t,e,i=n._v,o=O(n);if(o&&(r=v((function(){_?w.emit("unhandledRejection",i,n):(t=A.onunhandledrejection)?t({promise:n,reason:i}):(e=A.console)&&e.error&&e.error("Unhandled promise rejection",i)})),n._h=_||O(n)?2:1),n._a=void 0,o&&r.e)throw r.v}))},O=function(n){return 1!==n._h&&0===(n._a||n._c).length},z=function(n){m.call(A,(function(){var r;_?w.emit("rejectionHandled",n):(r=A.onrejectionhandled)&&r({promise:n,reason:n._v})}))},N=function(n){var r=this;r._d||(r._d=!0,(r=r._w||r)._v=n,r._s=2,r._a||(r._a=r._c.slice()),T(r,!0))},F=function(n){var r,t=this;if(!t._d){t._d=!0,t=t._w||t;try{if(t===n)throw y("Promise can't be resolved itself");(r=P(n))?B((function(){var e={_w:t,_d:!1};try{r.call(n,c(F,e,1),c(N,e,1))}catch(n){N.call(e,n)}})):(t._v=n,t._s=1,T(t,!1))}catch(n){N.call({_w:t,_d:!1},n)}}};M||(S=function(n){d(this,S,b,"_h"),f(n),e.call(this);try{n(c(F,this,1),c(N,this,1))}catch(n){N.call(this,n)}},(e=function(n){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=t(4408)(S.prototype,{then:function(n,r){var t=W(g(this,S));return t.ok="function"!=typeof n||n,t.fail="function"==typeof r&&r,t.domain=_?w.domain:void 0,this._c.push(t),this._a&&this._a.push(t),this._s&&T(this,!1),t.promise},catch:function(n){return this.then(void 0,n)}}),o=function(){var n=new e;this.promise=n,this.resolve=c(F,n,1),this.reject=c(N,n,1)},x.f=W=function(n){return n===S||n===a?new o(n):i(n)}),u(u.G+u.W+u.F*!M,{Promise:S}),t(2943)(S,b),t(2974)(b),a=t(5645).Promise,u(u.S+u.F*!M,b,{reject:function(n){var r=W(this);return(0,r.reject)(n),r.promise}}),u(u.S+u.F*(s||!M),b,{resolve:function(n){return I(s&&this===a?S:this,n)}}),u(u.S+u.F*!(M&&t(7462)((function(n){S.all(n).catch(j)}))),b,{all:function(n){var r=this,t=W(r),e=t.resolve,i=t.reject,o=v((function(){var t=[],o=0,a=1;h(n,!1,(function(n){var s=o++,A=!1;t.push(void 0),a++,r.resolve(n).then((function(n){A||(A=!0,t[s]=n,--a||e(t))}),i)})),--a||e(t)}));return o.e&&i(o.v),t.promise},race:function(n){var r=this,t=W(r),e=t.reject,i=v((function(){h(n,!1,(function(n){r.resolve(n).then(t.resolve,e)}))}));return i.e&&e(i.v),t.promise}})},1572:function(n,r,t){var e=t(2985),i=t(4963),o=t(7007),a=(t(3816).Reflect||{}).apply,s=Function.apply;e(e.S+e.F*!t(4253)((function(){a((function(){}))})),"Reflect",{apply:function(n,r,t){var e=i(n),A=o(t);return a?a(e,r,A):s.call(e,r,A)}})},2139:function(n,r,t){var e=t(2985),i=t(2503),o=t(4963),a=t(7007),s=t(5286),A=t(4253),c=t(4398),l=(t(3816).Reflect||{}).construct,u=A((function(){function n(){}return!(l((function(){}),[],n)instanceof n)})),p=!A((function(){l((function(){}))}));e(e.S+e.F*(u||p),"Reflect",{construct:function(n,r){o(n),a(r);var t=arguments.length<3?n:o(arguments[2]);if(p&&!u)return l(n,r,t);if(n==t){switch(r.length){case 0:return new n;case 1:return new n(r[0]);case 2:return new n(r[0],r[1]);case 3:return new n(r[0],r[1],r[2]);case 4:return new n(r[0],r[1],r[2],r[3])}var e=[null];return e.push.apply(e,r),new(c.apply(n,e))}var A=t.prototype,f=i(s(A)?A:Object.prototype),d=Function.apply.call(n,f,r);return s(d)?d:f}})},685:function(n,r,t){var e=t(9275),i=t(2985),o=t(7007),a=t(1689);i(i.S+i.F*t(4253)((function(){Reflect.defineProperty(e.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(n,r,t){o(n),r=a(r,!0),o(t);try{return e.f(n,r,t),!0}catch(n){return!1}}})},5535:function(n,r,t){var e=t(2985),i=t(8693).f,o=t(7007);e(e.S,"Reflect",{deleteProperty:function(n,r){var t=i(o(n),r);return!(t&&!t.configurable)&&delete n[r]}})},7347:function(n,r,t){"use strict";var e=t(2985),i=t(7007),o=function(n){this._t=i(n),this._i=0;var r,t=this._k=[];for(r in n)t.push(r)};t(9988)(o,"Object",(function(){var n,r=this,t=r._k;do{if(r._i>=t.length)return{value:void 0,done:!0}}while(!((n=t[r._i++])in r._t));return{value:n,done:!1}})),e(e.S,"Reflect",{enumerate:function(n){return new o(n)}})},6633:function(n,r,t){var e=t(8693),i=t(2985),o=t(7007);i(i.S,"Reflect",{getOwnPropertyDescriptor:function(n,r){return e.f(o(n),r)}})},8989:function(n,r,t){var e=t(2985),i=t(468),o=t(7007);e(e.S,"Reflect",{getPrototypeOf:function(n){return i(o(n))}})},3049:function(n,r,t){var e=t(8693),i=t(468),o=t(9181),a=t(2985),s=t(5286),A=t(7007);a(a.S,"Reflect",{get:function n(r,t){var a,c,l=arguments.length<3?r:arguments[2];return A(r)===l?r[t]:(a=e.f(r,t))?o(a,"value")?a.value:void 0!==a.get?a.get.call(l):void 0:s(c=i(r))?n(c,t,l):void 0}})},8270:function(n,r,t){var e=t(2985);e(e.S,"Reflect",{has:function(n,r){return r in n}})},4510:function(n,r,t){var e=t(2985),i=t(7007),o=Object.isExtensible;e(e.S,"Reflect",{isExtensible:function(n){return i(n),!o||o(n)}})},3984:function(n,r,t){var e=t(2985);e(e.S,"Reflect",{ownKeys:t(7643)})},5769:function(n,r,t){var e=t(2985),i=t(7007),o=Object.preventExtensions;e(e.S,"Reflect",{preventExtensions:function(n){i(n);try{return o&&o(n),!0}catch(n){return!1}}})},6014:function(n,r,t){var e=t(2985),i=t(7375);i&&e(e.S,"Reflect",{setPrototypeOf:function(n,r){i.check(n,r);try{return i.set(n,r),!0}catch(n){return!1}}})},55:function(n,r,t){var e=t(9275),i=t(8693),o=t(468),a=t(9181),s=t(2985),A=t(681),c=t(7007),l=t(5286);s(s.S,"Reflect",{set:function n(r,t,s){var u,p,f=arguments.length<4?r:arguments[3],d=i.f(c(r),t);if(!d){if(l(p=o(r)))return n(p,t,s,f);d=A(0)}if(a(d,"value")){if(!1===d.writable||!l(f))return!1;if(u=i.f(f,t)){if(u.get||u.set||!1===u.writable)return!1;u.value=s,e.f(f,t,u)}else e.f(f,t,A(0,s));return!0}return void 0!==d.set&&(d.set.call(f,s),!0)}})},3946:function(n,r,t){var e=t(3816),i=t(266),o=t(9275).f,a=t(616).f,s=t(5364),A=t(3218),c=e.RegExp,l=c,u=c.prototype,p=/a/g,f=/a/g,d=new c(p)!==p;if(t(7057)&&(!d||t(4253)((function(){return f[t(6314)("match")]=!1,c(p)!=p||c(f)==f||"/a/i"!=c(p,"i")})))){c=function(n,r){var t=this instanceof c,e=s(n),o=void 0===r;return!t&&e&&n.constructor===c&&o?n:i(d?new l(e&&!o?n.source:n,r):l((e=n instanceof c)?n.source:n,e&&o?A.call(n):r),t?this:u,c)};for(var h=function(n){n in c||o(c,n,{configurable:!0,get:function(){return l[n]},set:function(r){l[n]=r}})},g=a(l),m=0;g.length>m;)h(g[m++]);u.constructor=c,c.prototype=u,t(7234)(e,"RegExp",c)}t(2974)("RegExp")},8269:function(n,r,t){"use strict";var e=t(1165);t(2985)({target:"RegExp",proto:!0,forced:e!==/./.exec},{exec:e})},6774:function(n,r,t){t(7057)&&"g"!=/./g.flags&&t(9275).f(RegExp.prototype,"flags",{configurable:!0,get:t(3218)})},1466:function(n,r,t){"use strict";var e=t(7007),i=t(875),o=t(6793),a=t(7787);t(8082)("match",1,(function(n,r,t,s){return[function(t){var e=n(this),i=null==t?void 0:t[r];return void 0!==i?i.call(t,e):new RegExp(t)[r](String(e))},function(n){var r=s(t,n,this);if(r.done)return r.value;var A=e(n),c=String(this);if(!A.global)return a(A,c);var l=A.unicode;A.lastIndex=0;for(var u,p=[],f=0;null!==(u=a(A,c));){var d=String(u[0]);p[f]=d,""===d&&(A.lastIndex=o(c,i(A.lastIndex),l)),f++}return 0===f?null:p}]}))},9357:function(n,r,t){"use strict";var e=t(7007),i=t(508),o=t(875),a=t(1467),s=t(6793),A=t(7787),c=Math.max,l=Math.min,u=Math.floor,p=/\$([$&`']|\d\d?|<[^>]*>)/g,f=/\$([$&`']|\d\d?)/g;t(8082)("replace",2,(function(n,r,t,d){return[function(e,i){var o=n(this),a=null==e?void 0:e[r];return void 0!==a?a.call(e,o,i):t.call(String(o),e,i)},function(n,r){var i=d(t,n,this,r);if(i.done)return i.value;var u=e(n),p=String(this),f="function"==typeof r;f||(r=String(r));var g=u.global;if(g){var m=u.unicode;u.lastIndex=0}for(var B=[];;){var x=A(u,p);if(null===x)break;if(B.push(x),!g)break;""===String(x[0])&&(u.lastIndex=s(p,o(u.lastIndex),m))}for(var v,C="",I=0,b=0;b<B.length;b++){x=B[b];for(var y=String(x[0]),w=c(l(a(x.index),p.length),0),k=[],E=1;E<x.length;E++)k.push(void 0===(v=x[E])?v:String(v));var S=x.groups;if(f){var _=[y].concat(k,w,p);void 0!==S&&_.push(S);var j=String(r.apply(void 0,_))}else j=h(y,p,w,k,S,r);w>=I&&(C+=p.slice(I,w)+j,I=w+y.length)}return C+p.slice(I)}];function h(n,r,e,o,a,s){var A=e+n.length,c=o.length,l=f;return void 0!==a&&(a=i(a),l=p),t.call(s,l,(function(t,i){var s;switch(i.charAt(0)){case"$":return"$";case"&":return n;case"`":return r.slice(0,e);case"'":return r.slice(A);case"<":s=a[i.slice(1,-1)];break;default:var l=+i;if(0===l)return t;if(l>c){var p=u(l/10);return 0===p?t:p<=c?void 0===o[p-1]?i.charAt(1):o[p-1]+i.charAt(1):t}s=o[l-1]}return void 0===s?"":s}))}}))},6142:function(n,r,t){"use strict";var e=t(7007),i=t(7195),o=t(7787);t(8082)("search",1,(function(n,r,t,a){return[function(t){var e=n(this),i=null==t?void 0:t[r];return void 0!==i?i.call(t,e):new RegExp(t)[r](String(e))},function(n){var r=a(t,n,this);if(r.done)return r.value;var s=e(n),A=String(this),c=s.lastIndex;i(c,0)||(s.lastIndex=0);var l=o(s,A);return i(s.lastIndex,c)||(s.lastIndex=c),null===l?-1:l.index}]}))},1876:function(n,r,t){"use strict";var e=t(5364),i=t(7007),o=t(8364),a=t(6793),s=t(875),A=t(7787),c=t(1165),l=t(4253),u=Math.min,p=[].push,f=4294967295,d=!l((function(){RegExp(f,"y")}));t(8082)("split",2,(function(n,r,t,l){var h;return h="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(n,r){var i=String(this);if(void 0===n&&0===r)return[];if(!e(n))return t.call(i,n,r);for(var o,a,s,A=[],l=(n.ignoreCase?"i":"")+(n.multiline?"m":"")+(n.unicode?"u":"")+(n.sticky?"y":""),u=0,d=void 0===r?f:r>>>0,h=new RegExp(n.source,l+"g");(o=c.call(h,i))&&!((a=h.lastIndex)>u&&(A.push(i.slice(u,o.index)),o.length>1&&o.index<i.length&&p.apply(A,o.slice(1)),s=o[0].length,u=a,A.length>=d));)h.lastIndex===o.index&&h.lastIndex++;return u===i.length?!s&&h.test("")||A.push(""):A.push(i.slice(u)),A.length>d?A.slice(0,d):A}:"0".split(void 0,0).length?function(n,r){return void 0===n&&0===r?[]:t.call(this,n,r)}:t,[function(t,e){var i=n(this),o=null==t?void 0:t[r];return void 0!==o?o.call(t,i,e):h.call(String(i),t,e)},function(n,r){var e=l(h,n,this,r,h!==t);if(e.done)return e.value;var c=i(n),p=String(this),g=o(c,RegExp),m=c.unicode,B=(c.ignoreCase?"i":"")+(c.multiline?"m":"")+(c.unicode?"u":"")+(d?"y":"g"),x=new g(d?c:"^(?:"+c.source+")",B),v=void 0===r?f:r>>>0;if(0===v)return[];if(0===p.length)return null===A(x,p)?[p]:[];for(var C=0,I=0,b=[];I<p.length;){x.lastIndex=d?I:0;var y,w=A(x,d?p:p.slice(I));if(null===w||(y=u(s(x.lastIndex+(d?0:I)),p.length))===C)I=a(p,I,m);else{if(b.push(p.slice(C,I)),b.length===v)return b;for(var k=1;k<=w.length-1;k++)if(b.push(w[k]),b.length===v)return b;I=C=y}}return b.push(p.slice(C)),b}]}))},6108:function(n,r,t){"use strict";t(6774);var e=t(7007),i=t(3218),o=t(7057),a="toString",s=/./.toString,A=function(n){t(7234)(RegExp.prototype,a,n,!0)};t(4253)((function(){return"/a/b"!=s.call({source:"a",flags:"b"})}))?A((function(){var n=e(this);return"/".concat(n.source,"/","flags"in n?n.flags:!o&&n instanceof RegExp?i.call(n):void 0)})):s.name!=a&&A((function(){return s.call(this)}))},8184:function(n,r,t){"use strict";var e=t(9824),i=t(1616);n.exports=t(5795)("Set",(function(n){return function(){return n(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(n){return e.def(i(this,"Set"),n=0===n?0:n,n)}},e)},856:function(n,r,t){"use strict";t(9395)("anchor",(function(n){return function(r){return n(this,"a","name",r)}}))},703:function(n,r,t){"use strict";t(9395)("big",(function(n){return function(){return n(this,"big","","")}}))},1539:function(n,r,t){"use strict";t(9395)("blink",(function(n){return function(){return n(this,"blink","","")}}))},5292:function(n,r,t){"use strict";t(9395)("bold",(function(n){return function(){return n(this,"b","","")}}))},9539:function(n,r,t){"use strict";var e=t(2985),i=t(4496)(!1);e(e.P,"String",{codePointAt:function(n){return i(this,n)}})},6620:function(n,r,t){"use strict";var e=t(2985),i=t(875),o=t(2094),a="endsWith",s="".endsWith;e(e.P+e.F*t(8852)(a),"String",{endsWith:function(n){var r=o(this,n,a),t=arguments.length>1?arguments[1]:void 0,e=i(r.length),A=void 0===t?e:Math.min(i(t),e),c=String(n);return s?s.call(r,c,A):r.slice(A-c.length,A)===c}})},6629:function(n,r,t){"use strict";t(9395)("fixed",(function(n){return function(){return n(this,"tt","","")}}))},3694:function(n,r,t){"use strict";t(9395)("fontcolor",(function(n){return function(r){return n(this,"font","color",r)}}))},7648:function(n,r,t){"use strict";t(9395)("fontsize",(function(n){return function(r){return n(this,"font","size",r)}}))},191:function(n,r,t){var e=t(2985),i=t(2337),o=String.fromCharCode,a=String.fromCodePoint;e(e.S+e.F*(!!a&&1!=a.length),"String",{fromCodePoint:function(n){for(var r,t=[],e=arguments.length,a=0;e>a;){if(r=+arguments[a++],i(r,1114111)!==r)throw RangeError(r+" is not a valid code point");t.push(r<65536?o(r):o(55296+((r-=65536)>>10),r%1024+56320))}return t.join("")}})},2850:function(n,r,t){"use strict";var e=t(2985),i=t(2094),o="includes";e(e.P+e.F*t(8852)(o),"String",{includes:function(n){return!!~i(this,n,o).indexOf(n,arguments.length>1?arguments[1]:void 0)}})},7795:function(n,r,t){"use strict";t(9395)("italics",(function(n){return function(){return n(this,"i","","")}}))},9115:function(n,r,t){"use strict";var e=t(4496)(!0);t(2923)(String,"String",(function(n){this._t=String(n),this._i=0}),(function(){var n,r=this._t,t=this._i;return t>=r.length?{value:void 0,done:!0}:(n=e(r,t),this._i+=n.length,{value:n,done:!1})}))},4531:function(n,r,t){"use strict";t(9395)("link",(function(n){return function(r){return n(this,"a","href",r)}}))},8306:function(n,r,t){var e=t(2985),i=t(2110),o=t(875);e(e.S,"String",{raw:function(n){for(var r=i(n.raw),t=o(r.length),e=arguments.length,a=[],s=0;t>s;)a.push(String(r[s++])),s<e&&a.push(String(arguments[s]));return a.join("")}})},823:function(n,r,t){var e=t(2985);e(e.P,"String",{repeat:t(8595)})},3605:function(n,r,t){"use strict";t(9395)("small",(function(n){return function(){return n(this,"small","","")}}))},7732:function(n,r,t){"use strict";var e=t(2985),i=t(875),o=t(2094),a="startsWith",s="".startsWith;e(e.P+e.F*t(8852)(a),"String",{startsWith:function(n){var r=o(this,n,a),t=i(Math.min(arguments.length>1?arguments[1]:void 0,r.length)),e=String(n);return s?s.call(r,e,t):r.slice(t,t+e.length)===e}})},6780:function(n,r,t){"use strict";t(9395)("strike",(function(n){return function(){return n(this,"strike","","")}}))},9937:function(n,r,t){"use strict";t(9395)("sub",(function(n){return function(){return n(this,"sub","","")}}))},511:function(n,r,t){"use strict";t(9395)("sup",(function(n){return function(){return n(this,"sup","","")}}))},4564:function(n,r,t){"use strict";t(9599)("trim",(function(n){return function(){return n(this,3)}}))},5767:function(n,r,t){"use strict";var e=t(3816),i=t(9181),o=t(7057),a=t(2985),s=t(7234),A=t(4728).KEY,c=t(4253),l=t(3825),u=t(2943),p=t(3953),f=t(6314),d=t(8787),h=t(6074),g=t(5541),m=t(4302),B=t(7007),x=t(5286),v=t(508),C=t(2110),I=t(1689),b=t(681),y=t(2503),w=t(9327),k=t(8693),E=t(4548),S=t(9275),_=t(7184),j=k.f,W=S.f,M=w.f,P=e.Symbol,T=e.JSON,L=T&&T.stringify,O=f("_hidden"),z=f("toPrimitive"),N={}.propertyIsEnumerable,F=l("symbol-registry"),R=l("symbols"),Y=l("op-symbols"),$=Object.prototype,X="function"==typeof P&&!!E.f,U=e.QObject,q=!U||!U.prototype||!U.prototype.findChild,Z=o&&c((function(){return 7!=y(W({},"a",{get:function(){return W(this,"a",{value:7}).a}})).a}))?function(n,r,t){var e=j($,r);e&&delete $[r],W(n,r,t),e&&n!==$&&W($,r,e)}:W,V=function(n){var r=R[n]=y(P.prototype);return r._k=n,r},H=X&&"symbol"==typeof P.iterator?function(n){return"symbol"==typeof n}:function(n){return n instanceof P},D=function(n,r,t){return n===$&&D(Y,r,t),B(n),r=I(r,!0),B(t),i(R,r)?(t.enumerable?(i(n,O)&&n[O][r]&&(n[O][r]=!1),t=y(t,{enumerable:b(0,!1)})):(i(n,O)||W(n,O,b(1,{})),n[O][r]=!0),Z(n,r,t)):W(n,r,t)},G=function(n,r){B(n);for(var t,e=g(r=C(r)),i=0,o=e.length;o>i;)D(n,t=e[i++],r[t]);return n},Q=function(n){var r=N.call(this,n=I(n,!0));return!(this===$&&i(R,n)&&!i(Y,n))&&(!(r||!i(this,n)||!i(R,n)||i(this,O)&&this[O][n])||r)},J=function(n,r){if(n=C(n),r=I(r,!0),n!==$||!i(R,r)||i(Y,r)){var t=j(n,r);return!t||!i(R,r)||i(n,O)&&n[O][r]||(t.enumerable=!0),t}},K=function(n){for(var r,t=M(C(n)),e=[],o=0;t.length>o;)i(R,r=t[o++])||r==O||r==A||e.push(r);return e},nn=function(n){for(var r,t=n===$,e=M(t?Y:C(n)),o=[],a=0;e.length>a;)!i(R,r=e[a++])||t&&!i($,r)||o.push(R[r]);return o};X||(s((P=function(){if(this instanceof P)throw TypeError("Symbol is not a constructor!");var n=p(arguments.length>0?arguments[0]:void 0),r=function(t){this===$&&r.call(Y,t),i(this,O)&&i(this[O],n)&&(this[O][n]=!1),Z(this,n,b(1,t))};return o&&q&&Z($,n,{configurable:!0,set:r}),V(n)}).prototype,"toString",(function(){return this._k})),k.f=J,S.f=D,t(616).f=w.f=K,t(4682).f=Q,E.f=nn,o&&!t(4461)&&s($,"propertyIsEnumerable",Q,!0),d.f=function(n){return V(f(n))}),a(a.G+a.W+a.F*!X,{Symbol:P});for(var rn="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),tn=0;rn.length>tn;)f(rn[tn++]);for(var en=_(f.store),on=0;en.length>on;)h(en[on++]);a(a.S+a.F*!X,"Symbol",{for:function(n){return i(F,n+="")?F[n]:F[n]=P(n)},keyFor:function(n){if(!H(n))throw TypeError(n+" is not a symbol!");for(var r in F)if(F[r]===n)return r},useSetter:function(){q=!0},useSimple:function(){q=!1}}),a(a.S+a.F*!X,"Object",{create:function(n,r){return void 0===r?y(n):G(y(n),r)},defineProperty:D,defineProperties:G,getOwnPropertyDescriptor:J,getOwnPropertyNames:K,getOwnPropertySymbols:nn});var an=c((function(){E.f(1)}));a(a.S+a.F*an,"Object",{getOwnPropertySymbols:function(n){return E.f(v(n))}}),T&&a(a.S+a.F*(!X||c((function(){var n=P();return"[null]"!=L([n])||"{}"!=L({a:n})||"{}"!=L(Object(n))}))),"JSON",{stringify:function(n){for(var r,t,e=[n],i=1;arguments.length>i;)e.push(arguments[i++]);if(t=r=e[1],(x(r)||void 0!==n)&&!H(n))return m(r)||(r=function(n,r){if("function"==typeof t&&(r=t.call(this,n,r)),!H(r))return r}),e[1]=r,L.apply(T,e)}}),P.prototype[z]||t(7728)(P.prototype,z,P.prototype.valueOf),u(P,"Symbol"),u(Math,"Math",!0),u(e.JSON,"JSON",!0)},142:function(n,r,t){"use strict";var e=t(2985),i=t(9383),o=t(1125),a=t(7007),s=t(2337),A=t(875),c=t(5286),l=t(3816).ArrayBuffer,u=t(8364),p=o.ArrayBuffer,f=o.DataView,d=i.ABV&&l.isView,h=p.prototype.slice,g=i.VIEW,m="ArrayBuffer";e(e.G+e.W+e.F*(l!==p),{ArrayBuffer:p}),e(e.S+e.F*!i.CONSTR,m,{isView:function(n){return d&&d(n)||c(n)&&g in n}}),e(e.P+e.U+e.F*t(4253)((function(){return!new p(2).slice(1,void 0).byteLength})),m,{slice:function(n,r){if(void 0!==h&&void 0===r)return h.call(a(this),n);for(var t=a(this).byteLength,e=s(n,t),i=s(void 0===r?t:r,t),o=new(u(this,p))(A(i-e)),c=new f(this),l=new f(o),d=0;e<i;)l.setUint8(d++,c.getUint8(e++));return o}}),t(2974)(m)},1786:function(n,r,t){var e=t(2985);e(e.G+e.W+e.F*!t(9383).ABV,{DataView:t(1125).DataView})},162:function(n,r,t){t(8440)("Float32",4,(function(n){return function(r,t,e){return n(this,r,t,e)}}))},3834:function(n,r,t){t(8440)("Float64",8,(function(n){return function(r,t,e){return n(this,r,t,e)}}))},4821:function(n,r,t){t(8440)("Int16",2,(function(n){return function(r,t,e){return n(this,r,t,e)}}))},1303:function(n,r,t){t(8440)("Int32",4,(function(n){return function(r,t,e){return n(this,r,t,e)}}))},5368:function(n,r,t){t(8440)("Int8",1,(function(n){return function(r,t,e){return n(this,r,t,e)}}))},9103:function(n,r,t){t(8440)("Uint16",2,(function(n){return function(r,t,e){return n(this,r,t,e)}}))},3318:function(n,r,t){t(8440)("Uint32",4,(function(n){return function(r,t,e){return n(this,r,t,e)}}))},6964:function(n,r,t){t(8440)("Uint8",1,(function(n){return function(r,t,e){return n(this,r,t,e)}}))},2152:function(n,r,t){t(8440)("Uint8",1,(function(n){return function(r,t,e){return n(this,r,t,e)}}),!0)},147:function(n,r,t){"use strict";var e,i=t(3816),o=t(50)(0),a=t(7234),s=t(4728),A=t(5345),c=t(3657),l=t(5286),u=t(1616),p=t(1616),f=!i.ActiveXObject&&"ActiveXObject"in i,d="WeakMap",h=s.getWeak,g=Object.isExtensible,m=c.ufstore,B=function(n){return function(){return n(this,arguments.length>0?arguments[0]:void 0)}},x={get:function(n){if(l(n)){var r=h(n);return!0===r?m(u(this,d)).get(n):r?r[this._i]:void 0}},set:function(n,r){return c.def(u(this,d),n,r)}},v=n.exports=t(5795)(d,B,x,c,!0,!0);p&&f&&(A((e=c.getConstructor(B,d)).prototype,x),s.NEED=!0,o(["delete","has","get","set"],(function(n){var r=v.prototype,t=r[n];a(r,n,(function(r,i){if(l(r)&&!g(r)){this._f||(this._f=new e);var o=this._f[n](r,i);return"set"==n?this:o}return t.call(this,r,i)}))})))},9192:function(n,r,t){"use strict";var e=t(3657),i=t(1616),o="WeakSet";t(5795)(o,(function(n){return function(){return n(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(n){return e.def(i(this,o),n,!0)}},e,!1,!0)},1268:function(n,r,t){"use strict";var e=t(2985),i=t(3325),o=t(508),a=t(875),s=t(4963),A=t(6886);e(e.P,"Array",{flatMap:function(n){var r,t,e=o(this);return s(n),r=a(e.length),t=A(e,0),i(t,e,e,r,0,1,n,arguments[1]),t}}),t(7722)("flatMap")},4692:function(n,r,t){"use strict";var e=t(2985),i=t(3325),o=t(508),a=t(875),s=t(1467),A=t(6886);e(e.P,"Array",{flatten:function(){var n=arguments[0],r=o(this),t=a(r.length),e=A(r,0);return i(e,r,r,t,0,void 0===n?1:s(n)),e}}),t(7722)("flatten")},2773:function(n,r,t){"use strict";var e=t(2985),i=t(9315)(!0);e(e.P,"Array",{includes:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0)}}),t(7722)("includes")},8267:function(n,r,t){var e=t(2985),i=t(4351)(),o=t(3816).process,a="process"==t(2032)(o);e(e.G,{asap:function(n){var r=a&&o.domain;i(r?r.bind(n):n)}})},2559:function(n,r,t){var e=t(2985),i=t(2032);e(e.S,"Error",{isError:function(n){return"Error"===i(n)}})},5575:function(n,r,t){var e=t(2985);e(e.G,{global:t(3816)})},525:function(n,r,t){t(1024)("Map")},8211:function(n,r,t){t(4881)("Map")},7698:function(n,r,t){var e=t(2985);e(e.P+e.R,"Map",{toJSON:t(6132)("Map")})},8865:function(n,r,t){var e=t(2985);e(e.S,"Math",{clamp:function(n,r,t){return Math.min(t,Math.max(r,n))}})},368:function(n,r,t){var e=t(2985);e(e.S,"Math",{DEG_PER_RAD:Math.PI/180})},6427:function(n,r,t){var e=t(2985),i=180/Math.PI;e(e.S,"Math",{degrees:function(n){return n*i}})},286:function(n,r,t){var e=t(2985),i=t(8757),o=t(4934);e(e.S,"Math",{fscale:function(n,r,t,e,a){return o(i(n,r,t,e,a))}})},2816:function(n,r,t){var e=t(2985);e(e.S,"Math",{iaddh:function(n,r,t,e){var i=n>>>0,o=t>>>0;return(r>>>0)+(e>>>0)+((i&o|(i|o)&~(i+o>>>0))>>>31)|0}})},2082:function(n,r,t){var e=t(2985);e(e.S,"Math",{imulh:function(n,r){var t=65535,e=+n,i=+r,o=e&t,a=i&t,s=e>>16,A=i>>16,c=(s*a>>>0)+(o*a>>>16);return s*A+(c>>16)+((o*A>>>0)+(c&t)>>16)}})},5986:function(n,r,t){var e=t(2985);e(e.S,"Math",{isubh:function(n,r,t,e){var i=n>>>0,o=t>>>0;return(r>>>0)-(e>>>0)-((~i&o|~(i^o)&i-o>>>0)>>>31)|0}})},6308:function(n,r,t){var e=t(2985);e(e.S,"Math",{RAD_PER_DEG:180/Math.PI})},9221:function(n,r,t){var e=t(2985),i=Math.PI/180;e(e.S,"Math",{radians:function(n){return n*i}})},3570:function(n,r,t){var e=t(2985);e(e.S,"Math",{scale:t(8757)})},3776:function(n,r,t){var e=t(2985);e(e.S,"Math",{signbit:function(n){return(n=+n)!=n?n:0==n?1/n==1/0:n>0}})},6754:function(n,r,t){var e=t(2985);e(e.S,"Math",{umulh:function(n,r){var t=65535,e=+n,i=+r,o=e&t,a=i&t,s=e>>>16,A=i>>>16,c=(s*a>>>0)+(o*a>>>16);return s*A+(c>>>16)+((o*A>>>0)+(c&t)>>>16)}})},8646:function(n,r,t){"use strict";var e=t(2985),i=t(508),o=t(4963),a=t(9275);t(7057)&&e(e.P+t(1670),"Object",{__defineGetter__:function(n,r){a.f(i(this),n,{get:o(r),enumerable:!0,configurable:!0})}})},2658:function(n,r,t){"use strict";var e=t(2985),i=t(508),o=t(4963),a=t(9275);t(7057)&&e(e.P+t(1670),"Object",{__defineSetter__:function(n,r){a.f(i(this),n,{set:o(r),enumerable:!0,configurable:!0})}})},3276:function(n,r,t){var e=t(2985),i=t(1131)(!0);e(e.S,"Object",{entries:function(n){return i(n)}})},8351:function(n,r,t){var e=t(2985),i=t(7643),o=t(2110),a=t(8693),s=t(2811);e(e.S,"Object",{getOwnPropertyDescriptors:function(n){for(var r,t,e=o(n),A=a.f,c=i(e),l={},u=0;c.length>u;)void 0!==(t=A(e,r=c[u++]))&&s(l,r,t);return l}})},6917:function(n,r,t){"use strict";var e=t(2985),i=t(508),o=t(1689),a=t(468),s=t(8693).f;t(7057)&&e(e.P+t(1670),"Object",{__lookupGetter__:function(n){var r,t=i(this),e=o(n,!0);do{if(r=s(t,e))return r.get}while(t=a(t))}})},372:function(n,r,t){"use strict";var e=t(2985),i=t(508),o=t(1689),a=t(468),s=t(8693).f;t(7057)&&e(e.P+t(1670),"Object",{__lookupSetter__:function(n){var r,t=i(this),e=o(n,!0);do{if(r=s(t,e))return r.set}while(t=a(t))}})},6409:function(n,r,t){var e=t(2985),i=t(1131)(!1);e(e.S,"Object",{values:function(n){return i(n)}})},6534:function(n,r,t){"use strict";var e=t(2985),i=t(3816),o=t(5645),a=t(4351)(),s=t(6314)("observable"),A=t(4963),c=t(7007),l=t(3328),u=t(4408),p=t(7728),f=t(3531),d=f.RETURN,h=function(n){return null==n?void 0:A(n)},g=function(n){var r=n._c;r&&(n._c=void 0,r())},m=function(n){return void 0===n._o},B=function(n){m(n)||(n._o=void 0,g(n))},x=function(n,r){c(n),this._c=void 0,this._o=n,n=new v(this);try{var t=r(n),e=t;null!=t&&("function"==typeof t.unsubscribe?t=function(){e.unsubscribe()}:A(t),this._c=t)}catch(r){return void n.error(r)}m(this)&&g(this)};x.prototype=u({},{unsubscribe:function(){B(this)}});var v=function(n){this._s=n};v.prototype=u({},{next:function(n){var r=this._s;if(!m(r)){var t=r._o;try{var e=h(t.next);if(e)return e.call(t,n)}catch(n){try{B(r)}finally{throw n}}}},error:function(n){var r=this._s;if(m(r))throw n;var t=r._o;r._o=void 0;try{var e=h(t.error);if(!e)throw n;n=e.call(t,n)}catch(n){try{g(r)}finally{throw n}}return g(r),n},complete:function(n){var r=this._s;if(!m(r)){var t=r._o;r._o=void 0;try{var e=h(t.complete);n=e?e.call(t,n):void 0}catch(n){try{g(r)}finally{throw n}}return g(r),n}}});var C=function(n){l(this,C,"Observable","_f")._f=A(n)};u(C.prototype,{subscribe:function(n){return new x(n,this._f)},forEach:function(n){var r=this;return new(o.Promise||i.Promise)((function(t,e){A(n);var i=r.subscribe({next:function(r){try{return n(r)}catch(n){e(n),i.unsubscribe()}},error:e,complete:t})}))}}),u(C,{from:function(n){var r="function"==typeof this?this:C,t=h(c(n)[s]);if(t){var e=c(t.call(n));return e.constructor===r?e:new r((function(n){return e.subscribe(n)}))}return new r((function(r){var t=!1;return a((function(){if(!t){try{if(f(n,!1,(function(n){if(r.next(n),t)return d}))===d)return}catch(n){if(t)throw n;return void r.error(n)}r.complete()}})),function(){t=!0}}))},of:function(){for(var n=0,r=arguments.length,t=new Array(r);n<r;)t[n]=arguments[n++];return new("function"==typeof this?this:C)((function(n){var r=!1;return a((function(){if(!r){for(var e=0;e<t.length;++e)if(n.next(t[e]),r)return;n.complete()}})),function(){r=!0}}))}}),p(C.prototype,s,(function(){return this})),e(e.G,{Observable:C}),t(2974)("Observable")},9865:function(n,r,t){"use strict";var e=t(2985),i=t(5645),o=t(3816),a=t(8364),s=t(94);e(e.P+e.R,"Promise",{finally:function(n){var r=a(this,i.Promise||o.Promise),t="function"==typeof n;return this.then(t?function(t){return s(r,n()).then((function(){return t}))}:n,t?function(t){return s(r,n()).then((function(){throw t}))}:n)}})},1898:function(n,r,t){"use strict";var e=t(2985),i=t(3499),o=t(188);e(e.S,"Promise",{try:function(n){var r=i.f(this),t=o(n);return(t.e?r.reject:r.resolve)(t.v),r.promise}})},3364:function(n,r,t){var e=t(133),i=t(7007),o=e.key,a=e.set;e.exp({defineMetadata:function(n,r,t,e){a(n,r,i(t),o(e))}})},1432:function(n,r,t){var e=t(133),i=t(7007),o=e.key,a=e.map,s=e.store;e.exp({deleteMetadata:function(n,r){var t=arguments.length<3?void 0:o(arguments[2]),e=a(i(r),t,!1);if(void 0===e||!e.delete(n))return!1;if(e.size)return!0;var A=s.get(r);return A.delete(t),!!A.size||s.delete(r)}})},4416:function(n,r,t){var e=t(8184),i=t(9490),o=t(133),a=t(7007),s=t(468),A=o.keys,c=o.key,l=function(n,r){var t=A(n,r),o=s(n);if(null===o)return t;var a=l(o,r);return a.length?t.length?i(new e(t.concat(a))):a:t};o.exp({getMetadataKeys:function(n){return l(a(n),arguments.length<2?void 0:c(arguments[1]))}})},6562:function(n,r,t){var e=t(133),i=t(7007),o=t(468),a=e.has,s=e.get,A=e.key,c=function(n,r,t){if(a(n,r,t))return s(n,r,t);var e=o(r);return null!==e?c(n,e,t):void 0};e.exp({getMetadata:function(n,r){return c(n,i(r),arguments.length<3?void 0:A(arguments[2]))}})},2213:function(n,r,t){var e=t(133),i=t(7007),o=e.keys,a=e.key;e.exp({getOwnMetadataKeys:function(n){return o(i(n),arguments.length<2?void 0:a(arguments[1]))}})},8681:function(n,r,t){var e=t(133),i=t(7007),o=e.get,a=e.key;e.exp({getOwnMetadata:function(n,r){return o(n,i(r),arguments.length<3?void 0:a(arguments[2]))}})},3471:function(n,r,t){var e=t(133),i=t(7007),o=t(468),a=e.has,s=e.key,A=function(n,r,t){if(a(n,r,t))return!0;var e=o(r);return null!==e&&A(n,e,t)};e.exp({hasMetadata:function(n,r){return A(n,i(r),arguments.length<3?void 0:s(arguments[2]))}})},4329:function(n,r,t){var e=t(133),i=t(7007),o=e.has,a=e.key;e.exp({hasOwnMetadata:function(n,r){return o(n,i(r),arguments.length<3?void 0:a(arguments[2]))}})},5159:function(n,r,t){var e=t(133),i=t(7007),o=t(4963),a=e.key,s=e.set;e.exp({metadata:function(n,r){return function(t,e){s(n,r,(void 0!==e?i:o)(t),a(e))}}})},9467:function(n,r,t){t(1024)("Set")},4837:function(n,r,t){t(4881)("Set")},8739:function(n,r,t){var e=t(2985);e(e.P+e.R,"Set",{toJSON:t(6132)("Set")})},7220:function(n,r,t){"use strict";var e=t(2985),i=t(4496)(!0),o=t(4253)((function(){return"𠮷"!=="𠮷".at(0)}));e(e.P+e.F*o,"String",{at:function(n){return i(this,n)}})},4208:function(n,r,t){"use strict";var e=t(2985),i=t(1355),o=t(875),a=t(5364),s=t(3218),A=RegExp.prototype,c=function(n,r){this._r=n,this._s=r};t(9988)(c,"RegExp String",(function(){var n=this._r.exec(this._s);return{value:n,done:null===n}})),e(e.P,"String",{matchAll:function(n){if(i(this),!a(n))throw TypeError(n+" is not a regexp!");var r=String(this),t="flags"in A?String(n.flags):s.call(n),e=new RegExp(n.source,~t.indexOf("g")?t:"g"+t);return e.lastIndex=o(n.lastIndex),new c(e,r)}})},2770:function(n,r,t){"use strict";var e=t(2985),i=t(5442),o=t(575),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);e(e.P+e.F*a,"String",{padEnd:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0,!1)}})},1784:function(n,r,t){"use strict";var e=t(2985),i=t(5442),o=t(575),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);e(e.P+e.F*a,"String",{padStart:function(n){return i(this,n,arguments.length>1?arguments[1]:void 0,!0)}})},5869:function(n,r,t){"use strict";t(9599)("trimLeft",(function(n){return function(){return n(this,1)}}),"trimStart")},4325:function(n,r,t){"use strict";t(9599)("trimRight",(function(n){return function(){return n(this,2)}}),"trimEnd")},9665:function(n,r,t){t(6074)("asyncIterator")},9593:function(n,r,t){t(6074)("observable")},8967:function(n,r,t){var e=t(2985);e(e.S,"System",{global:t(3816)})},4188:function(n,r,t){t(1024)("WeakMap")},7594:function(n,r,t){t(4881)("WeakMap")},3495:function(n,r,t){t(1024)("WeakSet")},9550:function(n,r,t){t(4881)("WeakSet")},1181:function(n,r,t){for(var e=t(6997),i=t(7184),o=t(7234),a=t(3816),s=t(7728),A=t(2803),c=t(6314),l=c("iterator"),u=c("toStringTag"),p=A.Array,f={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},d=i(f),h=0;h<d.length;h++){var g,m=d[h],B=f[m],x=a[m],v=x&&x.prototype;if(v&&(v[l]||s(v,l,p),v[u]||s(v,u,m),A[m]=p,B))for(g in e)v[g]||o(v,g,e[g],!0)}},4633:function(n,r,t){var e=t(2985),i=t(4193);e(e.G+e.B,{setImmediate:i.set,clearImmediate:i.clear})},2564:function(n,r,t){var e=t(3816),i=t(2985),o=t(575),a=[].slice,s=/MSIE .\./.test(o),A=function(n){return function(r,t){var e=arguments.length>2,i=!!e&&a.call(arguments,2);return n(e?function(){("function"==typeof r?r:Function(r)).apply(this,i)}:r,t)}};i(i.G+i.B+i.F*s,{setTimeout:A(e.setTimeout),setInterval:A(e.setInterval)})},1934:function(n,r,t){t(5767),t(8132),t(8388),t(7470),t(4882),t(1520),t(7476),t(9622),t(9375),t(3533),t(4672),t(4157),t(5095),t(9892),t(5115),t(9176),t(8838),t(6253),t(9730),t(6059),t(8377),t(1084),t(4299),t(1246),t(726),t(1901),t(5972),t(3403),t(2516),t(9371),t(6479),t(1736),t(1889),t(5177),t(6943),t(6503),t(6786),t(932),t(7526),t(1591),t(9073),t(347),t(579),t(4669),t(7710),t(5789),t(3514),t(9978),t(8472),t(6946),t(5068),t(413),t(191),t(8306),t(4564),t(9115),t(9539),t(6620),t(2850),t(823),t(7732),t(856),t(703),t(1539),t(5292),t(6629),t(3694),t(7648),t(7795),t(4531),t(3605),t(6780),t(9937),t(511),t(1822),t(9977),t(1031),t(6331),t(1560),t(774),t(522),t(8295),t(7842),t(110),t(75),t(4336),t(1802),t(8837),t(6773),t(5745),t(3057),t(3750),t(3369),t(9564),t(2e3),t(8977),t(2310),t(4899),t(1842),t(6997),t(3946),t(8269),t(6108),t(6774),t(1466),t(9357),t(6142),t(1876),t(851),t(8416),t(8184),t(147),t(9192),t(142),t(1786),t(5368),t(6964),t(2152),t(4821),t(9103),t(1303),t(3318),t(162),t(3834),t(1572),t(2139),t(685),t(5535),t(7347),t(3049),t(6633),t(8989),t(8270),t(4510),t(3984),t(5769),t(55),t(6014),t(2773),t(1268),t(4692),t(7220),t(1784),t(2770),t(5869),t(4325),t(4208),t(9665),t(9593),t(8351),t(6409),t(3276),t(8646),t(2658),t(6917),t(372),t(7698),t(8739),t(8211),t(4837),t(7594),t(9550),t(525),t(9467),t(4188),t(3495),t(5575),t(8967),t(2559),t(8865),t(368),t(6427),t(286),t(2816),t(5986),t(2082),t(6308),t(9221),t(3570),t(6754),t(3776),t(9865),t(1898),t(3364),t(1432),t(6562),t(4416),t(8681),t(2213),t(3471),t(4329),t(5159),t(8267),t(6534),t(2564),t(4633),t(1181),n.exports=t(5645)},1491:function(n,r,t){"use strict";var e=t(4015),i=t.n(e),o=t(3645),a=t.n(o)()(i());a.push([n.id,".action-container {\r\n    max-width: 1390px;\r\n    margin-top: 60px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    margin-left: 14%;\r\n    margin-right: 14%;\r\n}\r\n.action-top {\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.action-img-block {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n}\r\n\r\n.action-img-block img {\r\n    display: block;\r\n    width: 95%;\r\n    height: 100%;\r\n    border: 0.8rem solid var(--lighter-color);\r\n    border-radius: 8px;\r\n}\r\n\r\n.action-information {\r\n    width: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    padding: 40px;\r\n    background: #212648;\r\n    border-radius: 8px;\r\n}\r\n\r\n.action-information h1 {\r\n    font-size: 24px;\r\n    line-height: 29px;\r\n    font-weight: 800;\r\n    margin-bottom: 20px;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.action-description {\r\n    font-size: 18px;\r\n    line-height: 22px;\r\n    margin-bottom: 15px;\r\n    font-weight: 700;\r\n}\r\n\r\n.action-expire-date {\r\n    margin-top: 60px;\r\n    font-weight: 500;\r\n}","",{version:3,sources:["webpack://./css/action.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;IAClB,mBAAmB;IACnB,gBAAgB;IAChB,iBAAiB;AACrB;AACA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,cAAc;IACd,UAAU;IACV,YAAY;IACZ,yCAAyC;IACzC,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,aAAa;IACb,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,gBAAgB;IAChB,mBAAmB;IACnB,yBAAyB;AAC7B;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;AACpB",sourcesContent:[".action-container {\r\n    max-width: 1390px;\r\n    margin-top: 60px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    margin-left: 14%;\r\n    margin-right: 14%;\r\n}\r\n.action-top {\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.action-img-block {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n}\r\n\r\n.action-img-block img {\r\n    display: block;\r\n    width: 95%;\r\n    height: 100%;\r\n    border: 0.8rem solid var(--lighter-color);\r\n    border-radius: 8px;\r\n}\r\n\r\n.action-information {\r\n    width: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    padding: 40px;\r\n    background: #212648;\r\n    border-radius: 8px;\r\n}\r\n\r\n.action-information h1 {\r\n    font-size: 24px;\r\n    line-height: 29px;\r\n    font-weight: 800;\r\n    margin-bottom: 20px;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.action-description {\r\n    font-size: 18px;\r\n    line-height: 22px;\r\n    margin-bottom: 15px;\r\n    font-weight: 700;\r\n}\r\n\r\n.action-expire-date {\r\n    margin-top: 60px;\r\n    font-weight: 500;\r\n}"],sourceRoot:""}]),r.Z=a},7631:function(n,r,t){"use strict";var e=t(4015),i=t.n(e),o=t(3645),a=t.n(o)()(i());a.push([n.id,".overlay {\r\n    background: rgba(0,0,0,.5);\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 6;\r\n    display: none;\r\n}\r\n\r\n#products-counter-header {\r\n    display: none; /* flex */\r\n    top: 46px;\r\n    right: 241px;\r\n    width: 20px;\r\n    height: 20px;\r\n    text-indent: 0;\r\n    overflow: visible;\r\n    position: absolute;\r\n    justify-content: center;\r\n    font-weight: 800;\r\n    font-size: 9px;\r\n    line-height: 20px;\r\n    color: #fff;\r\n    background: #f31a5a;\r\n    border-radius: 50%;\r\n    transition: .2s ease;\r\n}\r\n\r\n#cart-dropdown{\r\n    display: none;\r\n    max-width: 575px;\r\n    max-height: 590px;\r\n    position: absolute;\r\n    left: auto;\r\n    right: 178px;\r\n    top: 114px;\r\n    transform: none;\r\n    width: 100%;\r\n    \r\n    border-radius: 4px;\r\n    z-index: 8;\r\n}\r\n\r\n.empty-cart {\r\n    display: none;\r\n    max-width: 455px;\r\n    margin-left:55px;\r\n    border-radius: 4px;\r\n    padding: 17px 30px;\r\n    background: #0c78e4;\r\n}\r\n\r\n\r\n#cart-dropdown::after {\r\n    right: 73px;\r\n    content: '';\r\n    position: absolute;\r\n    top: -10px;\r\n    left: auto;\r\n    display: block;\r\n    background: #0c78e4;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 6px;\r\n    z-index: -1;\r\n    transform: rotate(55deg) skew(20deg);\r\n}\r\n\r\n.empty-cart h1 {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-weight: 800;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n}\r\n\r\n.empty-cart p {\r\n    margin-top: 2px;\r\n    margin-bottom: 0;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    display: block;\r\n}\r\n\r\n.cart-header {\r\n    border-top-left-radius: 4px;\r\n    border-top-right-radius: 4px;\r\n    padding: 17px 30px;\r\n    background: #0c78e4;\r\n}\r\n\r\n.cart-dropdown-full {\r\n    display: none;\r\n    max-width: 575px;\r\n    width: 100%;\r\n    background: #212648;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n}\r\n\r\n.cart-header p {\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-weight: 800;\r\n    text-transform: uppercase;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n}\r\n\r\n#products-counter-dropdown {\r\n    display: inline-block;\r\n    margin-left: 5px;\r\n    padding: 0 4px;\r\n    background: #f31a5a;\r\n    border-radius: 2px;\r\n    font-weight: 800;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n}\r\n\r\n.cart-content {\r\n    position: relative;\r\n    overflow: visible;\r\n    max-height: 380px;\r\n}\r\n\r\n.products-in-cart {\r\n    max-height: none;\r\n    position: relative;\r\n    overflow-y: scroll;\r\n    height: 350px;\r\n    max-width: 100%;\r\n    outline: none;\r\n    padding: 10px 40px 10px 30px;\r\n}\r\n\r\n /* width */\r\n .products-in-cart::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n  \r\n  /* Track */\r\n  .products-in-cart::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n  }\r\n  \r\n  /* Handle */\r\n  .products-in-cart::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n  }\r\n  \r\n  /* Handle on hover */\r\n  .products-in-cart::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  } \r\n\r\n.cart-item {\r\n    background: #131730;\r\n    border-radius: 4px;\r\n    padding: 15px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    position: relative;\r\n    margin-bottom: 5px;\r\n    max-height: 147px;\r\n}\r\n\r\n.delete-item {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n    width: 16px;\r\n    height: 16px;\r\n    display: block;\r\n    transition: opacity .2s ease;\r\n    text-decoration: none;\r\n}\r\n\r\n.delete-item::before, .delete-item::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%,-50%) rotate(-45deg);\r\n    width: 3px;\r\n    height: 20px;\r\n    background-color: #f31a5a;\r\n}\r\n\r\n.delete-item::after {\r\n    transform: translate(-50%,-50%) rotate(45deg);\r\n}\r\n\r\n.delete-item:hover {\r\n    opacity: .8;\r\n}\r\n\r\n.cart-item-image {\r\n    margin-right: 15px;\r\n    transition: opacity .2s ease;\r\n    display: flex;\r\n}\r\n\r\n.cart-item-image {\r\n    max-width: 110px;\r\n}\r\n\r\n.cart-item-image img {\r\n    max-width: 100%;\r\n}\r\n\r\n.cart-item-image:hover {\r\n    opacity: .8;\r\n}\r\n\r\n.cart-item-info {\r\n    width: calc(100% - 110px);\r\n}\r\n\r\n.cart-item-title {\r\n    overflow-wrap: break-word;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    display: flex;\r\n    align-items: center;\r\n    color: #fff;\r\n    overflow: hidden;\r\n    margin-bottom: 10px;\r\n    max-width: 294px;\r\n    transition: color .2s ease;\r\n    text-decoration: none;\r\n\r\n}\r\n\r\n.cart-item-title:hover {\r\n    color: #49b749;\r\n}\r\n\r\n.cart-item-platform,\r\n.cart-item-version, \r\n.cart-item-lang {\r\n    display: flex;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    line-height: 15px;\r\n    color: #c4c4c4;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.cart-item-platform span,\r\n.cart-item-version span,\r\n.cart-item-lang span {\r\n    color: #fff;\r\n    margin-left: 10px;\r\n}\r\n\r\n.cart-item-block {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n}\r\n\r\n.cart-item-price {\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    line-height: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    color: #fff;\r\n}\r\n\r\n.cart-item-counter {\r\n    background: #3c4b72;\r\n    box-shadow: 0 2px 3px rgba(79,87,108,.15);\r\n    border-radius: 30px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    width: 94px;\r\n    height: 30px;\r\n}\r\n\r\n.cart-item-counter span{\r\n    position: relative;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    height: 100%;\r\n    display: block;\r\n    cursor: pointer;\r\n    background: 0 0;\r\n    transition: .2s ease;\r\n}\r\n\r\n.counter-minus::after, \r\n.counter-plus::after, \r\n.counter-plus::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%,-50%);\r\n    width: 12px;\r\n    height: 2px;\r\n    background: #49b749;\r\n    transition: .2s ease;\r\n}\r\n\r\n.counter-plus::before {\r\n    transform: translate(-50%,-50%) rotate(-90deg);\r\n}\r\n\r\n.counter-minus:hover,\r\n.counter-plus:hover {\r\n    background-color: rgb(255, 255, 255, 0.2);\r\n}\r\n\r\n.counter-value {\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 15px;\r\n    padding-top: 7px;\r\n    text-align: center;\r\n    color: #fff;\r\n    border: 0;\r\n    outline: 0;\r\n    box-shadow: none;\r\n    display: flex;\r\n}\r\n\r\n.cart-bottom-btn {\r\n    padding: 30px;\r\n    background: #212648;\r\n    box-shadow: 0 -5px 10px rgba(0,0,0,.4);\r\n}\r\n\r\n.cart-total {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    margin-bottom: 16px;\r\n}\r\n\r\n.cart-total-title{\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    color: #fff;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.cart-total-price {\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    line-height: 15px;\r\n    color: #fff;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.btns-block {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n}\r\n\r\n.btn-simple {\r\n    width: calc((100% - 10px)/ 2);\r\n    margin-right: 10px;\r\n    min-width: 175px;\r\n    box-shadow: none;\r\n    border: 2px solid #fff;\r\n    box-sizing: border-box;\r\n    background: 0 0;\r\n    border-radius: 30px;\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 15px 20px;\r\n    font-weight: 900;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: .2s ease;\r\n    text-decoration: none;\r\n}\r\n\r\n.btn-simple:hover {\r\n    opacity: .7;\r\n}","",{version:3,sources:["webpack://./css/cart.css"],names:[],mappings:"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",sourcesContent:[".overlay {\r\n    background: rgba(0,0,0,.5);\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 6;\r\n    display: none;\r\n}\r\n\r\n#products-counter-header {\r\n    display: none; /* flex */\r\n    top: 46px;\r\n    right: 241px;\r\n    width: 20px;\r\n    height: 20px;\r\n    text-indent: 0;\r\n    overflow: visible;\r\n    position: absolute;\r\n    justify-content: center;\r\n    font-weight: 800;\r\n    font-size: 9px;\r\n    line-height: 20px;\r\n    color: #fff;\r\n    background: #f31a5a;\r\n    border-radius: 50%;\r\n    transition: .2s ease;\r\n}\r\n\r\n#cart-dropdown{\r\n    display: none;\r\n    max-width: 575px;\r\n    max-height: 590px;\r\n    position: absolute;\r\n    left: auto;\r\n    right: 178px;\r\n    top: 114px;\r\n    transform: none;\r\n    width: 100%;\r\n    \r\n    border-radius: 4px;\r\n    z-index: 8;\r\n}\r\n\r\n.empty-cart {\r\n    display: none;\r\n    max-width: 455px;\r\n    margin-left:55px;\r\n    border-radius: 4px;\r\n    padding: 17px 30px;\r\n    background: #0c78e4;\r\n}\r\n\r\n\r\n#cart-dropdown::after {\r\n    right: 73px;\r\n    content: '';\r\n    position: absolute;\r\n    top: -10px;\r\n    left: auto;\r\n    display: block;\r\n    background: #0c78e4;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 6px;\r\n    z-index: -1;\r\n    transform: rotate(55deg) skew(20deg);\r\n}\r\n\r\n.empty-cart h1 {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-weight: 800;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n}\r\n\r\n.empty-cart p {\r\n    margin-top: 2px;\r\n    margin-bottom: 0;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    display: block;\r\n}\r\n\r\n.cart-header {\r\n    border-top-left-radius: 4px;\r\n    border-top-right-radius: 4px;\r\n    padding: 17px 30px;\r\n    background: #0c78e4;\r\n}\r\n\r\n.cart-dropdown-full {\r\n    display: none;\r\n    max-width: 575px;\r\n    width: 100%;\r\n    background: #212648;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n}\r\n\r\n.cart-header p {\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-weight: 800;\r\n    text-transform: uppercase;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n}\r\n\r\n#products-counter-dropdown {\r\n    display: inline-block;\r\n    margin-left: 5px;\r\n    padding: 0 4px;\r\n    background: #f31a5a;\r\n    border-radius: 2px;\r\n    font-weight: 800;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n}\r\n\r\n.cart-content {\r\n    position: relative;\r\n    overflow: visible;\r\n    max-height: 380px;\r\n}\r\n\r\n.products-in-cart {\r\n    max-height: none;\r\n    position: relative;\r\n    overflow-y: scroll;\r\n    height: 350px;\r\n    max-width: 100%;\r\n    outline: none;\r\n    padding: 10px 40px 10px 30px;\r\n}\r\n\r\n /* width */\r\n .products-in-cart::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n  \r\n  /* Track */\r\n  .products-in-cart::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n  }\r\n  \r\n  /* Handle */\r\n  .products-in-cart::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n  }\r\n  \r\n  /* Handle on hover */\r\n  .products-in-cart::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  } \r\n\r\n.cart-item {\r\n    background: #131730;\r\n    border-radius: 4px;\r\n    padding: 15px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    position: relative;\r\n    margin-bottom: 5px;\r\n    max-height: 147px;\r\n}\r\n\r\n.delete-item {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n    width: 16px;\r\n    height: 16px;\r\n    display: block;\r\n    transition: opacity .2s ease;\r\n    text-decoration: none;\r\n}\r\n\r\n.delete-item::before, .delete-item::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%,-50%) rotate(-45deg);\r\n    width: 3px;\r\n    height: 20px;\r\n    background-color: #f31a5a;\r\n}\r\n\r\n.delete-item::after {\r\n    transform: translate(-50%,-50%) rotate(45deg);\r\n}\r\n\r\n.delete-item:hover {\r\n    opacity: .8;\r\n}\r\n\r\n.cart-item-image {\r\n    margin-right: 15px;\r\n    transition: opacity .2s ease;\r\n    display: flex;\r\n}\r\n\r\n.cart-item-image {\r\n    max-width: 110px;\r\n}\r\n\r\n.cart-item-image img {\r\n    max-width: 100%;\r\n}\r\n\r\n.cart-item-image:hover {\r\n    opacity: .8;\r\n}\r\n\r\n.cart-item-info {\r\n    width: calc(100% - 110px);\r\n}\r\n\r\n.cart-item-title {\r\n    overflow-wrap: break-word;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    display: flex;\r\n    align-items: center;\r\n    color: #fff;\r\n    overflow: hidden;\r\n    margin-bottom: 10px;\r\n    max-width: 294px;\r\n    transition: color .2s ease;\r\n    text-decoration: none;\r\n\r\n}\r\n\r\n.cart-item-title:hover {\r\n    color: #49b749;\r\n}\r\n\r\n.cart-item-platform,\r\n.cart-item-version, \r\n.cart-item-lang {\r\n    display: flex;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    line-height: 15px;\r\n    color: #c4c4c4;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.cart-item-platform span,\r\n.cart-item-version span,\r\n.cart-item-lang span {\r\n    color: #fff;\r\n    margin-left: 10px;\r\n}\r\n\r\n.cart-item-block {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n}\r\n\r\n.cart-item-price {\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    line-height: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    color: #fff;\r\n}\r\n\r\n.cart-item-counter {\r\n    background: #3c4b72;\r\n    box-shadow: 0 2px 3px rgba(79,87,108,.15);\r\n    border-radius: 30px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    width: 94px;\r\n    height: 30px;\r\n}\r\n\r\n.cart-item-counter span{\r\n    position: relative;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    height: 100%;\r\n    display: block;\r\n    cursor: pointer;\r\n    background: 0 0;\r\n    transition: .2s ease;\r\n}\r\n\r\n.counter-minus::after, \r\n.counter-plus::after, \r\n.counter-plus::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%,-50%);\r\n    width: 12px;\r\n    height: 2px;\r\n    background: #49b749;\r\n    transition: .2s ease;\r\n}\r\n\r\n.counter-plus::before {\r\n    transform: translate(-50%,-50%) rotate(-90deg);\r\n}\r\n\r\n.counter-minus:hover,\r\n.counter-plus:hover {\r\n    background-color: rgb(255, 255, 255, 0.2);\r\n}\r\n\r\n.counter-value {\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 15px;\r\n    padding-top: 7px;\r\n    text-align: center;\r\n    color: #fff;\r\n    border: 0;\r\n    outline: 0;\r\n    box-shadow: none;\r\n    display: flex;\r\n}\r\n\r\n.cart-bottom-btn {\r\n    padding: 30px;\r\n    background: #212648;\r\n    box-shadow: 0 -5px 10px rgba(0,0,0,.4);\r\n}\r\n\r\n.cart-total {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    margin-bottom: 16px;\r\n}\r\n\r\n.cart-total-title{\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    color: #fff;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.cart-total-price {\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    line-height: 15px;\r\n    color: #fff;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.btns-block {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n}\r\n\r\n.btn-simple {\r\n    width: calc((100% - 10px)/ 2);\r\n    margin-right: 10px;\r\n    min-width: 175px;\r\n    box-shadow: none;\r\n    border: 2px solid #fff;\r\n    box-sizing: border-box;\r\n    background: 0 0;\r\n    border-radius: 30px;\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 15px 20px;\r\n    font-weight: 900;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: .2s ease;\r\n    text-decoration: none;\r\n}\r\n\r\n.btn-simple:hover {\r\n    opacity: .7;\r\n}"],sourceRoot:""}]),r.Z=a},1542:function(n,r,t){"use strict";var e=t(4015),i=t.n(e),o=t(3645),a=t.n(o),s=t(1667),A=t.n(s),c=t(5850),l=t.n(c),u=a()(i()),p=A()(l());u.push([n.id,".container {\r\n    max-width: 1390px;\r\n    margin-top: 60px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n}\r\n\r\n.products-list {\r\n    display: flex;\r\n    width: 100%;\r\n}\r\n\r\n/* SIDEBAR */\r\n.products-list-sidebar {\r\n    width: 305px;\r\n    margin-right: 40px;\r\n    background: #131730;\r\n}\r\n\r\n.filter-block {\r\n    position: relative;\r\n    height: 100%;\r\n}\r\n\r\n#fixed-filter {\r\n    will-change: min-height;\r\n}\r\n\r\n.toggle-row {\r\n    margin-bottom: 20px;\r\n    padding-bottom: 20px;\r\n    position: relative;\r\n}\r\n\r\n.toggle-title {\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.price-ranges {\r\n    display: flex;\r\n    margin-top: 15px;\r\n}\r\n\r\n.price-ranges::after, .checkbox-wrap::after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    left: 0;\r\n    bottom: 0;\r\n    height: 2px;\r\n    background: #323963;\r\n    box-shadow: 0 0 2px rgba(0,0,0,.6);\r\n}\r\n\r\n.price-input {\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n\r\n.form-group-price {\r\n    width: 105px;\r\n    position: relative;\r\n    margin-right: 10px;\r\n    margin-bottom: 0;\r\n    max-width: 100%;\r\n}\r\n\r\n#price-from, #price-to {\r\n    height: 40px;\r\n    padding: 10px;\r\n    text-align: center;\r\n    line-height: 17px;\r\n    border: 2px solid #3c4b72;\r\n    box-sizing: border-box;\r\n    box-shadow: 0 3px 5px rgba(0,0,0,.4);\r\n    border-radius: 4px;\r\n    width: 100%;\r\n    background: 0 0;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    outline: 0;\r\n    color: #fff;\r\n    font-family: Montserrat;\r\n}\r\n\r\n#price-btn {\r\n    min-width: 35px;\r\n    background: #49b749;\r\n    box-shadow: 0 2px 3px rgba(0,0,0,.4);\r\n    border-radius: 30px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 10px 20px;\r\n    font-weight: 900;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    transition: .2s ease;\r\n}\r\n\r\n#price-btn:hover {\r\n    opacity: 0.7;\r\n}\r\n\r\n.checkbox-row {\r\n    display: block;\r\n    margin-top: 15px;\r\n}\r\n\r\n.check-group {\r\n    padding: 10px 0;\r\n    position: relative;\r\n    text-decoration: none;\r\n}\r\n\r\n.check-group input {\r\n    width: 0;\r\n    height: 0;\r\n    overflow: hidden;\r\n    visibility: hidden;\r\n    margin: 0;\r\n    padding: 0;\r\n    position: absolute;\r\n    outline: 0;\r\n    border: none;\r\n    font-family: Montserrat;\r\n}\r\n\r\n.check-group input:checked + label::before{\r\n    content: url("+p+");\r\n}\r\n\r\n.check-group label {\r\n    padding-bottom: 15px;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    transition: color .2s ease;\r\n    font-weight: 500;\r\n    color: #fff;\r\n    padding-left: 30px;\r\n    position: relative;\r\n    display: inline-block;\r\n    cursor: pointer;\r\n}\r\n\r\n.check-group label::before {\r\n    top: -1px;\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    width: 20px;\r\n    height: 20px;\r\n    border: 2px solid #3c4b72;\r\n    box-sizing: border-box;\r\n    box-shadow: 0 3px 5px rgba(0,0,0,.4);\r\n    border-radius: 4px;\r\n}\r\n\r\n\r\n.check-group label::after {\r\n    opacity: 1;\r\n    top: 4px;\r\n    content: '';\r\n    position: absolute;\r\n    left: 5px;\r\n    transform: rotate(-45deg);\r\n    width: 10px;\r\n    height: 6px;\r\n    opacity: 0;\r\n    border-bottom: 2px solid #49b749;\r\n    border-left: 2px solid #49b749;\r\n    transition: .2s ease;\r\n}\r\n\r\n.check-group label:hover {\r\n    color: #49b749;\r\n}\r\n\r\n/* CATALOG */\r\n.products-list-catalog {\r\n    width: 100%;\r\n    min-width: 50%;\r\n}\r\n\r\n.top-section {\r\n    padding: 13px 15px;\r\n    background: #212648;\r\n    box-shadow: 0 5px 10px rgba(79,87,108,.15);\r\n    border-radius: 8px;\r\n}\r\n\r\n.catalog-control {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.catalog-sort {\r\n    \r\n    margin-right: 20px;\r\n    text-decoration: none;\r\n    padding-bottom: 1px;\r\n    border-bottom: 1px dashed #5be45b;\r\n    color: #5be45b;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    cursor: pointer;\r\n}\r\n\r\n.catalog-sort:hover {\r\n    \r\n    border-bottom: none;\r\n}\r\n\r\n.active {\r\n    border-bottom: none;\r\n    padding-bottom: 2px;\r\n    color: #fff;\r\n}\r\n\r\n.catalog-content {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between ;\r\n    margin-top: 2rem;\r\n    flex-wrap: wrap;\r\n    \r\n}\r\n","",{version:3,sources:["webpack://./css/catalog.css"],names:[],mappings:"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",sourcesContent:[".container {\r\n    max-width: 1390px;\r\n    margin-top: 60px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n}\r\n\r\n.products-list {\r\n    display: flex;\r\n    width: 100%;\r\n}\r\n\r\n/* SIDEBAR */\r\n.products-list-sidebar {\r\n    width: 305px;\r\n    margin-right: 40px;\r\n    background: #131730;\r\n}\r\n\r\n.filter-block {\r\n    position: relative;\r\n    height: 100%;\r\n}\r\n\r\n#fixed-filter {\r\n    will-change: min-height;\r\n}\r\n\r\n.toggle-row {\r\n    margin-bottom: 20px;\r\n    padding-bottom: 20px;\r\n    position: relative;\r\n}\r\n\r\n.toggle-title {\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.price-ranges {\r\n    display: flex;\r\n    margin-top: 15px;\r\n}\r\n\r\n.price-ranges::after, .checkbox-wrap::after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    left: 0;\r\n    bottom: 0;\r\n    height: 2px;\r\n    background: #323963;\r\n    box-shadow: 0 0 2px rgba(0,0,0,.6);\r\n}\r\n\r\n.price-input {\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n\r\n.form-group-price {\r\n    width: 105px;\r\n    position: relative;\r\n    margin-right: 10px;\r\n    margin-bottom: 0;\r\n    max-width: 100%;\r\n}\r\n\r\n#price-from, #price-to {\r\n    height: 40px;\r\n    padding: 10px;\r\n    text-align: center;\r\n    line-height: 17px;\r\n    border: 2px solid #3c4b72;\r\n    box-sizing: border-box;\r\n    box-shadow: 0 3px 5px rgba(0,0,0,.4);\r\n    border-radius: 4px;\r\n    width: 100%;\r\n    background: 0 0;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    outline: 0;\r\n    color: #fff;\r\n    font-family: Montserrat;\r\n}\r\n\r\n#price-btn {\r\n    min-width: 35px;\r\n    background: #49b749;\r\n    box-shadow: 0 2px 3px rgba(0,0,0,.4);\r\n    border-radius: 30px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 10px 20px;\r\n    font-weight: 900;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    transition: .2s ease;\r\n}\r\n\r\n#price-btn:hover {\r\n    opacity: 0.7;\r\n}\r\n\r\n.checkbox-row {\r\n    display: block;\r\n    margin-top: 15px;\r\n}\r\n\r\n.check-group {\r\n    padding: 10px 0;\r\n    position: relative;\r\n    text-decoration: none;\r\n}\r\n\r\n.check-group input {\r\n    width: 0;\r\n    height: 0;\r\n    overflow: hidden;\r\n    visibility: hidden;\r\n    margin: 0;\r\n    padding: 0;\r\n    position: absolute;\r\n    outline: 0;\r\n    border: none;\r\n    font-family: Montserrat;\r\n}\r\n\r\n.check-group input:checked + label::before{\r\n    content: url('../images/svg/check-solid.svg');\r\n}\r\n\r\n.check-group label {\r\n    padding-bottom: 15px;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    transition: color .2s ease;\r\n    font-weight: 500;\r\n    color: #fff;\r\n    padding-left: 30px;\r\n    position: relative;\r\n    display: inline-block;\r\n    cursor: pointer;\r\n}\r\n\r\n.check-group label::before {\r\n    top: -1px;\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    width: 20px;\r\n    height: 20px;\r\n    border: 2px solid #3c4b72;\r\n    box-sizing: border-box;\r\n    box-shadow: 0 3px 5px rgba(0,0,0,.4);\r\n    border-radius: 4px;\r\n}\r\n\r\n\r\n.check-group label::after {\r\n    opacity: 1;\r\n    top: 4px;\r\n    content: '';\r\n    position: absolute;\r\n    left: 5px;\r\n    transform: rotate(-45deg);\r\n    width: 10px;\r\n    height: 6px;\r\n    opacity: 0;\r\n    border-bottom: 2px solid #49b749;\r\n    border-left: 2px solid #49b749;\r\n    transition: .2s ease;\r\n}\r\n\r\n.check-group label:hover {\r\n    color: #49b749;\r\n}\r\n\r\n/* CATALOG */\r\n.products-list-catalog {\r\n    width: 100%;\r\n    min-width: 50%;\r\n}\r\n\r\n.top-section {\r\n    padding: 13px 15px;\r\n    background: #212648;\r\n    box-shadow: 0 5px 10px rgba(79,87,108,.15);\r\n    border-radius: 8px;\r\n}\r\n\r\n.catalog-control {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.catalog-sort {\r\n    \r\n    margin-right: 20px;\r\n    text-decoration: none;\r\n    padding-bottom: 1px;\r\n    border-bottom: 1px dashed #5be45b;\r\n    color: #5be45b;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    cursor: pointer;\r\n}\r\n\r\n.catalog-sort:hover {\r\n    \r\n    border-bottom: none;\r\n}\r\n\r\n.active {\r\n    border-bottom: none;\r\n    padding-bottom: 2px;\r\n    color: #fff;\r\n}\r\n\r\n.catalog-content {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between ;\r\n    margin-top: 2rem;\r\n    flex-wrap: wrap;\r\n    \r\n}\r\n"],sourceRoot:""}]),r.Z=u},263:function(n,r,t){"use strict";var e=t(4015),i=t.n(e),o=t(3645),a=t.n(o)()(i());a.push([n.id,".container-order {\r\n    max-width: 1390px;\r\n    margin-top: 30px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    margin-left: 13%;\r\n    margin-right: 13%;\r\n}\r\n\r\n.order-title {\r\n    margin-bottom: 30px;\r\n    padding: 0;\r\n    font-size: 36px;\r\n    line-height: 44px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.steps {\r\n    margin: 30px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n    max-height: 80px;\r\n    max-width: 1360px;\r\n}\r\n\r\n.steps-throuth {\r\n    background: #212648;\r\n    position: absolute;\r\n    width: calc(100% - 20px);\r\n    height: 10px;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%,-50%);\r\n}\r\n\r\n.steps-item {\r\n    min-width: 60px;\r\n    min-height: 60px;\r\n    border-radius: 50%;\r\n    border: 10px solid #212648;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    z-index: 2;\r\n    background: #3c4b72;\r\n}\r\n\r\n.steps-item-icon-active {\r\n    background: #49b749;\r\n    box-shadow: 0 2px 3px rgba(0,0,0,.15);\r\n}\r\n\r\n.steps-item-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n    min-width: 60px;\r\n    min-height: 60px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.steps-item-icon svg {\r\n    width: 30px;\r\n    height: auto;\r\n}\r\n\r\n.order-wrapper {\r\n    display: flex;\r\n}\r\n\r\n.order-form {\r\n    margin-bottom: 20px;\r\n    margin-right: 20px;\r\n    width: calc(100% - 400px);\r\n}\r\n\r\n.order-form-block {\r\n    border-radius: 8px;\r\n    background: #212648;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n    width: auto;\r\n    max-width: initial;\r\n}\r\n\r\n.order-form-header {\r\n    border-bottom: 2px solid #323963;\r\n    padding: 40px 40px 40px;\r\n    font-size: 24px;\r\n    font-weight: 900;\r\n    line-height: 22px;\r\n    text-transform: uppercase;\r\n    \r\n}\r\n\r\n.order-form-content {\r\n    padding: 40px;\r\n}\r\n\r\nform {\r\n    max-width: initial;\r\n}\r\n\r\ninput::placeholder {\r\n    color: #c4c4c4;\r\n}\r\n\r\n.form-group {\r\n    position: relative;\r\n    width: 340px;\r\n    max-width: 100%;\r\n    margin-bottom: 10px;\r\n    \r\n}\r\n\r\n.form-group-input {\r\n    border: 2px solid #3c4b72;\r\n    box-sizing: border-box;\r\n    box-shadow: 0 3px 5px rgba(0,0,0,.4);\r\n    border-radius: 4px;\r\n    width: 100%;\r\n    height: 60px;\r\n    background: 0 0;\r\n    padding: 32px 20px 12px;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    color: #fff;\r\n    font-family: Montserrat;\r\n}\r\n\r\n.validated {\r\n    border: 2px solid #49b749;\r\n}\r\n\r\n.non-validated {\r\n    border: 2px solid red;\r\n}\r\n\r\n.form-group input:focus {\r\n    outline: none;\r\n}\r\n\r\n.form-group > label {\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 20px;\r\n    color: #c4c4c4;\r\n    transition: .2s linear;\r\n}\r\n\r\n.form-group input:focus ~ label {\r\n    font-size: 10px;\r\n    line-height: 5px;\r\n}\r\n\r\n.form-group:last-child {\r\n    margin-bottom: 40px;\r\n}\r\n\r\n.help {\r\n    width: 100%;\r\n    position: absolute;\r\n    left: calc(100% + 20px);\r\n    margin-top: 0;\r\n    top: 23px;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    line-height: 15px;\r\n    display: block;\r\n    color: #c4c4c4;\r\n}\r\n\r\n.btn-submit{\r\n    min-width: 210px;\r\n    width: 210px;\r\n    height: 45px;\r\n    position: relative;\r\n    background: #49b749;\r\n    box-shadow: 0 2px 3px rgba(0,0,0,.4);\r\n    border-radius: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 15px 20px;\r\n    font-weight: 900;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: .2s ease;\r\n    text-decoration: none;\r\n}\r\n\r\n.btn-submit:hover {\r\n    opacity: 0.8;\r\n}\r\n\r\n.cart-block {\r\n    width: 470px;\r\n}\r\n\r\n.cart-block-wrapper {\r\n    padding: 40px 20px 15px;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n    border-radius: 8px;\r\n    background: #212648;\r\n}\r\n\r\n.cart-block-title {\r\n    font-size: 24px;\r\n    padding: 0 0 30px;\r\n    font-weight: 900;\r\n    line-height: 22px;\r\n    display: inline-flex;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.cart-block-content {\r\n    font-size: 18px;\r\n    padding: 0 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: 900;\r\n    line-height: 22px;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.cart-block-content span {\r\n    background: #f31a5a;\r\n    margin-left: 10px;\r\n    padding: 0 4px;\r\n    border-radius: 2px;\r\n    font-weight: 800;\r\n    font-size: 18px;\r\n    line-height: 20px;\r\n    display: inline-block;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n}\r\n\r\n.item-count-p {\r\n    font-size: 12px;\r\n    color: #c4c4c4;\r\n    white-space: nowrap;\r\n}\r\n\r\n.order-count-price {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    left: 0;\r\n    bottom: 0;\r\n    height: 2px;\r\n    background: #323963;\r\n    box-shadow: 0 0 2px rgba(0,0,0,.6);\r\n}\r\n\r\n.order-count-price ul {\r\n    list-style: none;\r\n}\r\n\r\n.order-count-price ul {\r\n    font-size: 16px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\n#step-4 p {\r\n    line-height: 15px;\r\n    font-weight: 500;\r\n}","",{version:3,sources:["webpack://./css/checkout.css"],names:[],mappings:"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",sourcesContent:[".container-order {\r\n    max-width: 1390px;\r\n    margin-top: 30px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    margin-left: 13%;\r\n    margin-right: 13%;\r\n}\r\n\r\n.order-title {\r\n    margin-bottom: 30px;\r\n    padding: 0;\r\n    font-size: 36px;\r\n    line-height: 44px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.steps {\r\n    margin: 30px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n    max-height: 80px;\r\n    max-width: 1360px;\r\n}\r\n\r\n.steps-throuth {\r\n    background: #212648;\r\n    position: absolute;\r\n    width: calc(100% - 20px);\r\n    height: 10px;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%,-50%);\r\n}\r\n\r\n.steps-item {\r\n    min-width: 60px;\r\n    min-height: 60px;\r\n    border-radius: 50%;\r\n    border: 10px solid #212648;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    z-index: 2;\r\n    background: #3c4b72;\r\n}\r\n\r\n.steps-item-icon-active {\r\n    background: #49b749;\r\n    box-shadow: 0 2px 3px rgba(0,0,0,.15);\r\n}\r\n\r\n.steps-item-icon {\r\n    width: 60px;\r\n    height: 60px;\r\n    min-width: 60px;\r\n    min-height: 60px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.steps-item-icon svg {\r\n    width: 30px;\r\n    height: auto;\r\n}\r\n\r\n.order-wrapper {\r\n    display: flex;\r\n}\r\n\r\n.order-form {\r\n    margin-bottom: 20px;\r\n    margin-right: 20px;\r\n    width: calc(100% - 400px);\r\n}\r\n\r\n.order-form-block {\r\n    border-radius: 8px;\r\n    background: #212648;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n    width: auto;\r\n    max-width: initial;\r\n}\r\n\r\n.order-form-header {\r\n    border-bottom: 2px solid #323963;\r\n    padding: 40px 40px 40px;\r\n    font-size: 24px;\r\n    font-weight: 900;\r\n    line-height: 22px;\r\n    text-transform: uppercase;\r\n    \r\n}\r\n\r\n.order-form-content {\r\n    padding: 40px;\r\n}\r\n\r\nform {\r\n    max-width: initial;\r\n}\r\n\r\ninput::placeholder {\r\n    color: #c4c4c4;\r\n}\r\n\r\n.form-group {\r\n    position: relative;\r\n    width: 340px;\r\n    max-width: 100%;\r\n    margin-bottom: 10px;\r\n    \r\n}\r\n\r\n.form-group-input {\r\n    border: 2px solid #3c4b72;\r\n    box-sizing: border-box;\r\n    box-shadow: 0 3px 5px rgba(0,0,0,.4);\r\n    border-radius: 4px;\r\n    width: 100%;\r\n    height: 60px;\r\n    background: 0 0;\r\n    padding: 32px 20px 12px;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    color: #fff;\r\n    font-family: Montserrat;\r\n}\r\n\r\n.validated {\r\n    border: 2px solid #49b749;\r\n}\r\n\r\n.non-validated {\r\n    border: 2px solid red;\r\n}\r\n\r\n.form-group input:focus {\r\n    outline: none;\r\n}\r\n\r\n.form-group > label {\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 20px;\r\n    color: #c4c4c4;\r\n    transition: .2s linear;\r\n}\r\n\r\n.form-group input:focus ~ label {\r\n    font-size: 10px;\r\n    line-height: 5px;\r\n}\r\n\r\n.form-group:last-child {\r\n    margin-bottom: 40px;\r\n}\r\n\r\n.help {\r\n    width: 100%;\r\n    position: absolute;\r\n    left: calc(100% + 20px);\r\n    margin-top: 0;\r\n    top: 23px;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    line-height: 15px;\r\n    display: block;\r\n    color: #c4c4c4;\r\n}\r\n\r\n.btn-submit{\r\n    min-width: 210px;\r\n    width: 210px;\r\n    height: 45px;\r\n    position: relative;\r\n    background: #49b749;\r\n    box-shadow: 0 2px 3px rgba(0,0,0,.4);\r\n    border-radius: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 15px 20px;\r\n    font-weight: 900;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: .2s ease;\r\n    text-decoration: none;\r\n}\r\n\r\n.btn-submit:hover {\r\n    opacity: 0.8;\r\n}\r\n\r\n.cart-block {\r\n    width: 470px;\r\n}\r\n\r\n.cart-block-wrapper {\r\n    padding: 40px 20px 15px;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n    border-radius: 8px;\r\n    background: #212648;\r\n}\r\n\r\n.cart-block-title {\r\n    font-size: 24px;\r\n    padding: 0 0 30px;\r\n    font-weight: 900;\r\n    line-height: 22px;\r\n    display: inline-flex;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.cart-block-content {\r\n    font-size: 18px;\r\n    padding: 0 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: 900;\r\n    line-height: 22px;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.cart-block-content span {\r\n    background: #f31a5a;\r\n    margin-left: 10px;\r\n    padding: 0 4px;\r\n    border-radius: 2px;\r\n    font-weight: 800;\r\n    font-size: 18px;\r\n    line-height: 20px;\r\n    display: inline-block;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n}\r\n\r\n.item-count-p {\r\n    font-size: 12px;\r\n    color: #c4c4c4;\r\n    white-space: nowrap;\r\n}\r\n\r\n.order-count-price {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    left: 0;\r\n    bottom: 0;\r\n    height: 2px;\r\n    background: #323963;\r\n    box-shadow: 0 0 2px rgba(0,0,0,.6);\r\n}\r\n\r\n.order-count-price ul {\r\n    list-style: none;\r\n}\r\n\r\n.order-count-price ul {\r\n    font-size: 16px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\n#step-4 p {\r\n    line-height: 15px;\r\n    font-weight: 500;\r\n}"],sourceRoot:""}]),r.Z=a},2632:function(n,r,t){"use strict";var e=t(4015),i=t.n(e),o=t(3645),a=t.n(o)()(i());a.push([n.id,"\r\n.game-card {\r\n    padding: 14px;\r\n    width: 300px;\r\n    background: #212648;\r\n    box-shadow: 0 3px 5px rgba(0,0,0,.4);\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    margin-bottom: 2rem;\r\n\r\n}\r\n\r\n.game-card-image {\r\n    width: 100%;\r\n    height: auto;\r\n    overflow: hidden;\r\n    border-radius: 4px;\r\n    transition: .2s ease;\r\n    margin-bottom: 15px;\r\n    display: flex;\r\n    position: relative;\r\n    text-decoration: none;\r\n}\r\n\r\n.game-card-image img {\r\n    display: block;\r\n    width: 100%;\r\n    min-width: 100%;\r\n    min-height: 100%;\r\n}\r\n\r\n.game-card-image:hover {\r\n    opacity: 0.6;\r\n}\r\n\r\n.game-card-title {\r\n    overflow-wrap: break-word;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    color: #fff;\r\n    font-weight: 400;\r\n    transition: .2s ease;\r\n    display: flex;\r\n    width: 100%;\r\n    text-decoration: none;\r\n    margin-bottom: 30px;\r\n    max-height: 20px;\r\n}\r\n\r\n.game-card-title:hover {\r\n    opacity: 0.7;\r\n}\r\n\r\n.game-card-price {\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: baseline;\r\n}\r\n\r\n.game-card-price p {\r\n    font-size: 24px;\r\n    line-height: 29px;\r\n    font-weight: 700;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.game-card-platform {\r\n    margin-top: 15px;\r\n    padding-left: 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n}\r\n\r\n.platform-item {\r\n    display: none;\r\n}\r\n\r\n.Playstation, .Xbox, .Nintendo{\r\n    display: block;\r\n}\r\n\r\n.game-card-platform img {\r\n    width: 100%;\r\n    margin-right: 10px;\r\n    max-width: 50px;\r\n}","",{version:3,sources:["webpack://./css/game-card.css"],names:[],mappings:";AACA;IACI,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,oCAAoC;IACpC,kBAAkB;IAClB,gBAAgB;IAChB,mBAAmB;;AAEvB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,oBAAoB;IACpB,mBAAmB;IACnB,aAAa;IACb,kBAAkB;IAClB,qBAAqB;AACzB;;AAEA;IACI,cAAc;IACd,WAAW;IACX,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,eAAe;IACf,iBAAiB;IACjB,WAAW;IACX,gBAAgB;IAChB,oBAAoB;IACpB,aAAa;IACb,WAAW;IACX,qBAAqB;IACrB,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,eAAe;AACnB",sourcesContent:["\r\n.game-card {\r\n    padding: 14px;\r\n    width: 300px;\r\n    background: #212648;\r\n    box-shadow: 0 3px 5px rgba(0,0,0,.4);\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    margin-bottom: 2rem;\r\n\r\n}\r\n\r\n.game-card-image {\r\n    width: 100%;\r\n    height: auto;\r\n    overflow: hidden;\r\n    border-radius: 4px;\r\n    transition: .2s ease;\r\n    margin-bottom: 15px;\r\n    display: flex;\r\n    position: relative;\r\n    text-decoration: none;\r\n}\r\n\r\n.game-card-image img {\r\n    display: block;\r\n    width: 100%;\r\n    min-width: 100%;\r\n    min-height: 100%;\r\n}\r\n\r\n.game-card-image:hover {\r\n    opacity: 0.6;\r\n}\r\n\r\n.game-card-title {\r\n    overflow-wrap: break-word;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    color: #fff;\r\n    font-weight: 400;\r\n    transition: .2s ease;\r\n    display: flex;\r\n    width: 100%;\r\n    text-decoration: none;\r\n    margin-bottom: 30px;\r\n    max-height: 20px;\r\n}\r\n\r\n.game-card-title:hover {\r\n    opacity: 0.7;\r\n}\r\n\r\n.game-card-price {\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: baseline;\r\n}\r\n\r\n.game-card-price p {\r\n    font-size: 24px;\r\n    line-height: 29px;\r\n    font-weight: 700;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.game-card-platform {\r\n    margin-top: 15px;\r\n    padding-left: 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n}\r\n\r\n.platform-item {\r\n    display: none;\r\n}\r\n\r\n.Playstation, .Xbox, .Nintendo{\r\n    display: block;\r\n}\r\n\r\n.game-card-platform img {\r\n    width: 100%;\r\n    margin-right: 10px;\r\n    max-width: 50px;\r\n}"],sourceRoot:""}]),r.Z=a},3170:function(n,r,t){"use strict";var e=t(4015),i=t.n(e),o=t(3645),a=t.n(o)()(i());a.push([n.id,".product-bg-image {\r\n    position: absolute;\r\n    top: -15px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    z-index: -1;\r\n    width: 100%;\r\n}\r\n\r\n.product-bg-image img {\r\n    width: 100%;\r\n    z-index: -1;\r\n}\r\n\r\n.gradient {\r\n    background: linear-gradient(180deg,rgba(19,23,48,0) 62.18%,#131730 100%),linear-gradient(269.91deg,#131730 .07%,rgba(19,23,48,0) 49.99%,#131730 99.9%),linear-gradient(180deg,rgba(19,23,48,0) 0,#131730 100%);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 544px;\r\n}\r\n\r\n.product-container {\r\n    position: relative;\r\n    margin-right: 14%;\r\n    margin-left: 14%;  \r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    top: -180px;\r\n    \r\n}\r\n\r\n.product-info-wrap {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n}\r\n\r\n.product-image {\r\n    max-width: 410px;\r\n    min-width: 410px;\r\n    margin-right: 40px;\r\n}\r\n\r\n.product-image img{\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 0.4rem solid var(--lighter-color);\r\n}\r\n\r\n.product-details{\r\n    width: 100%;\r\n}\r\n\r\n.product-title {\r\n    margin-bottom: 48px;\r\n}\r\n\r\n.product-title h1 {\r\n    margin-bottom: 26px;\r\n    min-height: 100px;\r\n    font-size: 28px;\r\n    line-height: 34px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.product-info {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: row;\r\n}\r\n\r\n.product-info--left {\r\n    margin-right: 40px;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.product-info--block {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.product-info--block p {\r\n    font-weight: 800;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    margin-bottom: 15px;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.platform-list {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.info-item {\r\n    margin-right: 0;\r\n    height: auto;\r\n    padding: 15px 20px;\r\n    border: 2px solid #49b749;\r\n    box-sizing: border-box;\r\n    box-shadow: 0 3px 5px rgba(0,0,0,.4);\r\n    border-radius: 4px;\r\n    transition: .2s ease;\r\n    display: none;\r\n    margin-bottom: 20px;\r\n    margin-right: 1rem;\r\n}\r\n\r\n.info-item:hover {\r\n    border: 2px solid white;\r\n}\r\n\r\n.info-item img {\r\n    height: 16px;\r\n    width: auto;\r\n    max-width: 95px;\r\n}\r\n\r\n.Playstation, .Xbox, \r\n.Nintendo, .version,\r\n.English, .Russian {\r\n    display: block;\r\n}\r\n\r\n.version-list {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.product-info--right {\r\n    padding: 20px 30px;\r\n    background: #212648;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n    border-radius: 8px;\r\n    margin-left: auto;\r\n}\r\n\r\n.info-price {\r\n    margin-top: 15px;\r\n}\r\n\r\n.info-price p {\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    font-weight: 500;\r\n    text-transform: none;\r\n    color: #fff;\r\n}\r\n\r\n.info-price p span {\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    margin-left: 5px;\r\n}\r\n\r\n.info-buttons {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n}\r\n\r\n#buy_btn {\r\n    min-width: 240px;\r\n    font-size: 18px;\r\n    line-height: 22px;\r\n    width: auto;\r\n    margin-right: 20px;\r\n    background: #49b749;\r\n    border-radius: 30px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 15px 20px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: .2s ease;\r\n    text-decoration: none;\r\n}\r\n\r\n#buy_btn:hover {\r\n    opacity: 0.8;\r\n}\r\n\r\n#fav_btn:hover svg path{\r\n    stroke: #49b749;\r\n    transition: .3s ease;\r\n}\r\n\r\n\r\n\r\n.text_1 {\r\n    display: block;\r\n}\r\n\r\n.text_2 {\r\n    display: none;\r\n}\r\n\r\n.info-options {\r\n    margin-top: 30px;\r\n    display: flex;\r\n}\r\n\r\n.info-options img {\r\n    margin-right: 15px;\r\n}\r\n\r\n.info-options p {\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    font-weight: 500;\r\n    opacity: .6;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin-bottom: 0;\r\n    width: 100%;\r\n}\r\n\r\n.product-content {\r\n    position: relative;\r\n    margin-left: 14%;\r\n    margin-right: 14%;\r\n    top: -110px;\r\n}\r\n\r\n.characteristics-block {\r\n    padding: 40px;\r\n    width: 100%;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    border-radius: 8px;\r\n    background: #212648;\r\n    margin-bottom: 20px;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n}\r\n\r\n.characteristics-block p, .description-block p {\r\n    font-size: 24px;\r\n    line-height: 29px;\r\n    font-weight: 900;\r\n}\r\n\r\n.characteristics-content {\r\n    margin-top: 30px;\r\n}\r\n\r\n.characteristics-content ul {\r\n    list-style: none;\r\n    padding: 0;\r\n}\r\n\r\n.characteristics-content ul li{\r\n    width: 100%;\r\n    padding: 15px 0;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: row;\r\n    position: relative;\r\n}\r\n\r\n.characteristics-content ul li p{\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    text-transform: none;\r\n}\r\n\r\n.characteristics-block li::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 2px;\r\n    background: #323963;\r\n    box-shadow: 0 0 2px rgba(0,0,0,.6);\r\n}\r\n\r\n.characteristics-title {\r\n    color: #c4c4c4;\r\n    max-width: 40%;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.characteristics-value {\r\n    margin-top: 0;\r\n    margin-left: auto;\r\n    max-width: 60%;\r\n    text-align: right;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.description-block {\r\n    width: 100%;\r\n    min-height: 330px;\r\n    padding: 40px;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    border-radius: 8px;\r\n    background: #212648;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n    margin-bottom: 20px\r\n}\r\n\r\n.description-block-content {\r\n    margin-top: 30px;\r\n}\r\n\r\n.description-block-content p {\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    margin-top: 22px;\r\n    font-weight: 500;\r\n}","",{version:3,sources:["webpack://./css/product.css"],names:[],mappings:"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",sourcesContent:[".product-bg-image {\r\n    position: absolute;\r\n    top: -15px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    z-index: -1;\r\n    width: 100%;\r\n}\r\n\r\n.product-bg-image img {\r\n    width: 100%;\r\n    z-index: -1;\r\n}\r\n\r\n.gradient {\r\n    background: linear-gradient(180deg,rgba(19,23,48,0) 62.18%,#131730 100%),linear-gradient(269.91deg,#131730 .07%,rgba(19,23,48,0) 49.99%,#131730 99.9%),linear-gradient(180deg,rgba(19,23,48,0) 0,#131730 100%);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 544px;\r\n}\r\n\r\n.product-container {\r\n    position: relative;\r\n    margin-right: 14%;\r\n    margin-left: 14%;  \r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    top: -180px;\r\n    \r\n}\r\n\r\n.product-info-wrap {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n}\r\n\r\n.product-image {\r\n    max-width: 410px;\r\n    min-width: 410px;\r\n    margin-right: 40px;\r\n}\r\n\r\n.product-image img{\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 0.4rem solid var(--lighter-color);\r\n}\r\n\r\n.product-details{\r\n    width: 100%;\r\n}\r\n\r\n.product-title {\r\n    margin-bottom: 48px;\r\n}\r\n\r\n.product-title h1 {\r\n    margin-bottom: 26px;\r\n    min-height: 100px;\r\n    font-size: 28px;\r\n    line-height: 34px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.product-info {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: row;\r\n}\r\n\r\n.product-info--left {\r\n    margin-right: 40px;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.product-info--block {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.product-info--block p {\r\n    font-weight: 800;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    margin-bottom: 15px;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.platform-list {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.info-item {\r\n    margin-right: 0;\r\n    height: auto;\r\n    padding: 15px 20px;\r\n    border: 2px solid #49b749;\r\n    box-sizing: border-box;\r\n    box-shadow: 0 3px 5px rgba(0,0,0,.4);\r\n    border-radius: 4px;\r\n    transition: .2s ease;\r\n    display: none;\r\n    margin-bottom: 20px;\r\n    margin-right: 1rem;\r\n}\r\n\r\n.info-item:hover {\r\n    border: 2px solid white;\r\n}\r\n\r\n.info-item img {\r\n    height: 16px;\r\n    width: auto;\r\n    max-width: 95px;\r\n}\r\n\r\n.Playstation, .Xbox, \r\n.Nintendo, .version,\r\n.English, .Russian {\r\n    display: block;\r\n}\r\n\r\n.version-list {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.product-info--right {\r\n    padding: 20px 30px;\r\n    background: #212648;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n    border-radius: 8px;\r\n    margin-left: auto;\r\n}\r\n\r\n.info-price {\r\n    margin-top: 15px;\r\n}\r\n\r\n.info-price p {\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    font-weight: 500;\r\n    text-transform: none;\r\n    color: #fff;\r\n}\r\n\r\n.info-price p span {\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    margin-left: 5px;\r\n}\r\n\r\n.info-buttons {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n}\r\n\r\n#buy_btn {\r\n    min-width: 240px;\r\n    font-size: 18px;\r\n    line-height: 22px;\r\n    width: auto;\r\n    margin-right: 20px;\r\n    background: #49b749;\r\n    border-radius: 30px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 15px 20px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: .2s ease;\r\n    text-decoration: none;\r\n}\r\n\r\n#buy_btn:hover {\r\n    opacity: 0.8;\r\n}\r\n\r\n#fav_btn:hover svg path{\r\n    stroke: #49b749;\r\n    transition: .3s ease;\r\n}\r\n\r\n\r\n\r\n.text_1 {\r\n    display: block;\r\n}\r\n\r\n.text_2 {\r\n    display: none;\r\n}\r\n\r\n.info-options {\r\n    margin-top: 30px;\r\n    display: flex;\r\n}\r\n\r\n.info-options img {\r\n    margin-right: 15px;\r\n}\r\n\r\n.info-options p {\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    font-weight: 500;\r\n    opacity: .6;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin-bottom: 0;\r\n    width: 100%;\r\n}\r\n\r\n.product-content {\r\n    position: relative;\r\n    margin-left: 14%;\r\n    margin-right: 14%;\r\n    top: -110px;\r\n}\r\n\r\n.characteristics-block {\r\n    padding: 40px;\r\n    width: 100%;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    border-radius: 8px;\r\n    background: #212648;\r\n    margin-bottom: 20px;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n}\r\n\r\n.characteristics-block p, .description-block p {\r\n    font-size: 24px;\r\n    line-height: 29px;\r\n    font-weight: 900;\r\n}\r\n\r\n.characteristics-content {\r\n    margin-top: 30px;\r\n}\r\n\r\n.characteristics-content ul {\r\n    list-style: none;\r\n    padding: 0;\r\n}\r\n\r\n.characteristics-content ul li{\r\n    width: 100%;\r\n    padding: 15px 0;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: row;\r\n    position: relative;\r\n}\r\n\r\n.characteristics-content ul li p{\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    text-transform: none;\r\n}\r\n\r\n.characteristics-block li::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 2px;\r\n    background: #323963;\r\n    box-shadow: 0 0 2px rgba(0,0,0,.6);\r\n}\r\n\r\n.characteristics-title {\r\n    color: #c4c4c4;\r\n    max-width: 40%;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.characteristics-value {\r\n    margin-top: 0;\r\n    margin-left: auto;\r\n    max-width: 60%;\r\n    text-align: right;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.description-block {\r\n    width: 100%;\r\n    min-height: 330px;\r\n    padding: 40px;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    border-radius: 8px;\r\n    background: #212648;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n    margin-bottom: 20px\r\n}\r\n\r\n.description-block-content {\r\n    margin-top: 30px;\r\n}\r\n\r\n.description-block-content p {\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    margin-top: 22px;\r\n    font-weight: 500;\r\n}"],sourceRoot:""}]),r.Z=a},174:function(n,r,t){"use strict";var e=t(4015),i=t.n(e),o=t(3645),a=t.n(o),s=t(1667),A=t.n(s),c=t(4225),l=t.n(c),u=a()(i()),p=A()(l());u.push([n.id,":root{\r\n    font-size: 16px;\r\n    font-family: 'Montserrat';\r\n    color: #fff;\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    \r\n\r\n    --primary-color: #131730;\r\n    --lighter-color: #212648;\r\n    \r\n}\r\n\r\nhtml{\r\n    position: relative;\r\n    overflow-y: scroll;\r\n    \r\n}\r\n\r\nbody{\r\n    margin: 0;\r\n    padding: 0;\r\n    overflow-x: hidden;\r\n    background: var(--primary-color);\r\n    color: #fff;\r\n    \r\n}\r\n\r\n#page-content{\r\n    height: 100%;\r\n    min-height: 418px;\r\n    position: relative;\r\n    \r\n}\r\n\r\n/* HEADER */\r\n/* HEADER-UPPER */\r\nheader{\r\n    width: 100vw;\r\n    overflow: hidden;\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.header-upper-row{\r\n    width: auto;\r\n    background-color: var(--primary-color);\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0.7rem ;\r\n    padding-left: 14%;\r\n    padding-right: 14%;\r\n    \r\n}\r\n\r\n.header-search {\r\n    display: block;\r\n    max-width: 350px;\r\n    padding: 0;\r\n    width: 30rem;\r\n}\r\n\r\n.search-block {\r\n    width: 100%;\r\n    position: relative;\r\n    margin-bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    border: 0.15rem solid #3c4b72;\r\n    border-radius: 0.4rem;\r\n    box-shadow: 0 3px 5px rgba(0,0,0,.4);\r\n}\r\n\r\n.search-block input {\r\n    line-height: 20px;\r\n    width: 100%;\r\n    margin-left: 0.2rem;\r\n    padding: 8px 40px 8px 20px;\r\n    box-shadow: none;\r\n    background: var(--primary-color);\r\n    border: none;\r\n    color: #fff;\r\n    height: 2rem;\r\n    font: inherit;\r\n    font-weight: 500;\r\n}\r\n\r\n.search-block input:focus{\r\n    outline: none;\r\n}\r\n\r\nbutton {\r\n    outline: 0;\r\n    border: none;\r\n    box-shadow: none;\r\n    background: 0 0;\r\n    cursor: pointer;\r\n    \r\n}\r\n\r\n.header-hours, .header-phone{\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    white-space: nowrap;\r\n    padding-top: 20px;\r\n}\r\n\r\n.header-hours span, .header-phone a {\r\n    font-weight: 900;\r\n    font-size: 18px;\r\n    line-height: 22px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    text-decoration: none;  \r\n}\r\n\r\n.header-hours p, .header-phone p{\r\n    font-weight: 600;\r\n    font-size: 12px;\r\n    line-height: 15px;\r\n    color: #c4c4c4;\r\n    text-transform: uppercase;\r\n    margin-top: 2px;\r\n}\r\n\r\n.header-icons {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.header-item {\r\n    margin-left: 2rem;\r\n}\r\n\r\n.header-item:first-child {\r\n    display: none;\r\n}\r\n\r\n/* HEADER-LOWER */\r\n.header-lower-row { \r\n    background-color: var(--lighter-color);\r\n}\r\n\r\n.header-containter{\r\n    margin-left: 14%;\r\n    margin-right: 14%;\r\n}\r\n\r\n.header-nav {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.nav-item{\r\n    flex-grow: 1;\r\n}\r\n\r\n.nav-link {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2rem 0;\r\n    font-weight: 600;\r\n    line-height: 18px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    position: relative;\r\n    text-decoration: none;\r\n}\r\n\r\n.nav-link::after {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 0;\r\n    transform: translateY(-50%);\r\n    width: 1px;\r\n    height: 30px;\r\n    background: #3c4b72;\r\n    box-shadow: 0 0 4px rgba(0,0,0,.8);\r\n}\r\n\r\n.nav-link-promotion {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2rem 0;\r\n    font-weight: 600;\r\n    line-height: 18px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    position: relative;\r\n    text-decoration: none;\r\n}\r\n\r\n/* MAIN */\r\nmain {\r\n    width: 100%; \r\n    position: relative;\r\n    \r\n}\r\n\r\n.pacman-loader {\r\n    position: absolute;\r\n    top: 35%;\r\n    left: 45%;\r\n}\r\n\r\n.master-block {\r\n    position: relative;\r\n    min-height: 530px;\r\n    margin-top: 128px;\r\n    \r\n    flex-wrap: wrap;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    padding-right: 0;\r\n    padding-left: 60px;\r\n    padding-top: 32px;\r\n    padding-bottom: 0;\r\n\r\n    margin-left: 14%;\r\n    margin-right: 14%;\r\n    border-radius: 8px;\r\n    background: #1f244a;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n}\r\n\r\n.master-block > div{\r\n    height: 100%;\r\n}\r\n\r\n.master-block h2 {\r\n    max-width: 520px;\r\n    padding-top: 0;\r\n    margin-bottom: 20px;\r\n    font-size: 36px;\r\n    line-height: 44px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.master-block span, .the-hateful-four span {\r\n    color: #f31a5a !important;\r\n}\r\n\r\n.master-block p {\r\n    font-size: 18px;\r\n    line-height: 22px;\r\n    font-weight: 400;\r\n    margin-bottom: 30px;\r\n    max-width: 520px;\r\n}\r\n\r\n.top-products {\r\n    margin-top: 80px;\r\n}\r\n\r\n.master-image {\r\n    min-height: 530px;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: flex-end;\r\n    height: 100%;\r\n}\r\n\r\n.image_1 {\r\n    max-height: 500px;\r\n    height: 100%;\r\n    width: auto;\r\n    display: block;\r\n}\r\n\r\n.image_2 {\r\n    margin-right: -1px;\r\n    max-height: 500px;\r\n    height: 100%;\r\n    width: auto;\r\n    display: block;\r\n}\r\n\r\n.btn-promotes{\r\n    min-width: 210px;\r\n    width: 210px;\r\n    height: 20px;\r\n    position: relative;\r\n    background: #49b749;\r\n    box-shadow: 0 2px 3px rgba(0,0,0,.4);\r\n    border-radius: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 15px 20px;\r\n    font-weight: 900;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: .2s ease;\r\n    text-decoration: none;\r\n}\r\n\r\n.btn-promotes:hover {\r\n    opacity: 0.8;\r\n}\r\n\r\n.master-block:hover .image_1 {\r\n    display: none;\r\n}\r\n\r\n.master-block:not(:hover) .image_2 {\r\n    display: none;\r\n}\r\n\r\n.the-hateful-four {\r\n    margin-top: 80px;\r\n    margin-left: 14%;\r\n    margin-right: 14%;\r\n}\r\n\r\n.the-hateful-four h2 {\r\n    max-width: 620px;\r\n    padding-top: 0;\r\n    margin-bottom: 20px;\r\n    font-size: 36px;\r\n    line-height: 44px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.top-games-block {\r\n    margin-top: 30px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n\r\n/* SLIDER */\r\n.slider {\r\n    width: 40vw;\r\n    height: 400px;\r\n    overflow: hidden;\r\n    border: 0.8rem solid var(--lighter-color);\r\n    margin-left: 50%;\r\n\r\n    transform: translate(-50%, 15%);\r\n}\r\n\r\n.navigation {\r\n    bottom: 10px;\r\n    position: absolute;\r\n    display: flex;\r\n    margin-left: 38%;\r\n}\r\n\r\n.slider-bar {\r\n    height: 8px;\r\n    width: 30px;\r\n    margin: 6px;\r\n    cursor: pointer;\r\n    background-color: var(--lighter-color);\r\n    border: 0.3rem solid var(--primary-color);\r\n    opacity: .7;\r\n    border-radius: 10px;\r\n    transition: all .4s ease;\r\n}\r\n\r\n.slider-bar:hover {\r\n    opacity: 1;\r\n    transform: scale(1.1);\r\n}\r\n\r\ninput[name=\"r\"] {\r\n    position: absolute;\r\n    visibility: hidden;\r\n}\r\n\r\n.slides {\r\n    width: 400%;\r\n    height: 100%;\r\n    display: flex;\r\n}\r\n\r\n.slide {\r\n    width: 25%;\r\n    transition: all .6s ease;\r\n}\r\n\r\n.slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n#r1:checked ~ .curS {\r\n    margin-left: 0;\r\n}\r\n\r\n#r2:checked ~ .curS {\r\n    margin-left: -25%;\r\n}\r\n\r\n#r3:checked ~ .curS {\r\n    margin-left: -50%;\r\n}\r\n\r\n#r4:checked ~ .curS {\r\n    margin-left: -75%;\r\n}\r\n\r\n/* FOOTER */\r\nfooter {\r\n    bottom: 0;\r\n    width: 100vw;\r\n    background-color: var(--lighter-color);\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: stretch;\r\n    padding-left: 14%;\r\n    padding-right: 14%;\r\n    padding-top: 2rem;\r\n    justify-content: space-between;\r\n}\r\n\r\n.contacts-info {\r\n    margin-bottom: 0;\r\n    order: 0;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n\r\n.contacts-info span {\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    color: #b8c1d8;\r\n    margin-bottom: 5px;\r\n    display: block;\r\n}\r\n\r\n.contacts-info a, p{\r\n    font-size: 24px;\r\n    line-height: 29px;\r\n    margin-bottom: 30px;\r\n    transition: .2s ease;\r\n    font-weight: 900;\r\n    text-decoration: none;\r\n    margin-top: 0;\r\n    color: #fff;\r\n}\r\n\r\n.footer_promotes {\r\n    max-width: 310px;\r\n    height: 190px;\r\n    order: 0;\r\n    background-position: 70% 105%;\r\n    background-size: 165px;\r\n    background: url("+p+") 100% 75% no-repeat;\r\n    padding-bottom: 50px;\r\n    position: relative;\r\n    color: #fff;\r\n}\r\n\r\n.promotes-title {\r\n    font-size: 24px;\r\n    line-height: 29px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.promotes-text {\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    font-weight: 500;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.btn-promotes{\r\n    min-width: 210px;\r\n    width: 210px;\r\n    height: 20px;\r\n    position: relative;\r\n    background: #49b749;\r\n    box-shadow: 0 2px 3px rgba(0,0,0,.4);\r\n    border-radius: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 15px 20px;\r\n    font-weight: 900;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: .2s ease;\r\n    text-decoration: none;\r\n}\r\n\r\n.btn-promotes:hover {\r\n    background: #3b8d3b;\r\n}\r\n\r\n@media only screen and (max-width: 1280px){\r\n    .header-hours, .header-phone, .header-search, .slider {\r\n        display: none;\r\n    }\r\n    .header-item:first-child {\r\n        display: block;\r\n    }\r\n}","",{version:3,sources:["webpack://./css/style.css"],names:[],mappings:"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",sourcesContent:[":root{\r\n    font-size: 16px;\r\n    font-family: 'Montserrat';\r\n    color: #fff;\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    \r\n\r\n    --primary-color: #131730;\r\n    --lighter-color: #212648;\r\n    \r\n}\r\n\r\nhtml{\r\n    position: relative;\r\n    overflow-y: scroll;\r\n    \r\n}\r\n\r\nbody{\r\n    margin: 0;\r\n    padding: 0;\r\n    overflow-x: hidden;\r\n    background: var(--primary-color);\r\n    color: #fff;\r\n    \r\n}\r\n\r\n#page-content{\r\n    height: 100%;\r\n    min-height: 418px;\r\n    position: relative;\r\n    \r\n}\r\n\r\n/* HEADER */\r\n/* HEADER-UPPER */\r\nheader{\r\n    width: 100vw;\r\n    overflow: hidden;\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.header-upper-row{\r\n    width: auto;\r\n    background-color: var(--primary-color);\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0.7rem ;\r\n    padding-left: 14%;\r\n    padding-right: 14%;\r\n    \r\n}\r\n\r\n.header-search {\r\n    display: block;\r\n    max-width: 350px;\r\n    padding: 0;\r\n    width: 30rem;\r\n}\r\n\r\n.search-block {\r\n    width: 100%;\r\n    position: relative;\r\n    margin-bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    border: 0.15rem solid #3c4b72;\r\n    border-radius: 0.4rem;\r\n    box-shadow: 0 3px 5px rgba(0,0,0,.4);\r\n}\r\n\r\n.search-block input {\r\n    line-height: 20px;\r\n    width: 100%;\r\n    margin-left: 0.2rem;\r\n    padding: 8px 40px 8px 20px;\r\n    box-shadow: none;\r\n    background: var(--primary-color);\r\n    border: none;\r\n    color: #fff;\r\n    height: 2rem;\r\n    font: inherit;\r\n    font-weight: 500;\r\n}\r\n\r\n.search-block input:focus{\r\n    outline: none;\r\n}\r\n\r\nbutton {\r\n    outline: 0;\r\n    border: none;\r\n    box-shadow: none;\r\n    background: 0 0;\r\n    cursor: pointer;\r\n    \r\n}\r\n\r\n.header-hours, .header-phone{\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    white-space: nowrap;\r\n    padding-top: 20px;\r\n}\r\n\r\n.header-hours span, .header-phone a {\r\n    font-weight: 900;\r\n    font-size: 18px;\r\n    line-height: 22px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    text-decoration: none;  \r\n}\r\n\r\n.header-hours p, .header-phone p{\r\n    font-weight: 600;\r\n    font-size: 12px;\r\n    line-height: 15px;\r\n    color: #c4c4c4;\r\n    text-transform: uppercase;\r\n    margin-top: 2px;\r\n}\r\n\r\n.header-icons {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.header-item {\r\n    margin-left: 2rem;\r\n}\r\n\r\n.header-item:first-child {\r\n    display: none;\r\n}\r\n\r\n/* HEADER-LOWER */\r\n.header-lower-row { \r\n    background-color: var(--lighter-color);\r\n}\r\n\r\n.header-containter{\r\n    margin-left: 14%;\r\n    margin-right: 14%;\r\n}\r\n\r\n.header-nav {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.nav-item{\r\n    flex-grow: 1;\r\n}\r\n\r\n.nav-link {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2rem 0;\r\n    font-weight: 600;\r\n    line-height: 18px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    position: relative;\r\n    text-decoration: none;\r\n}\r\n\r\n.nav-link::after {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 0;\r\n    transform: translateY(-50%);\r\n    width: 1px;\r\n    height: 30px;\r\n    background: #3c4b72;\r\n    box-shadow: 0 0 4px rgba(0,0,0,.8);\r\n}\r\n\r\n.nav-link-promotion {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2rem 0;\r\n    font-weight: 600;\r\n    line-height: 18px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    position: relative;\r\n    text-decoration: none;\r\n}\r\n\r\n/* MAIN */\r\nmain {\r\n    width: 100%; \r\n    position: relative;\r\n    \r\n}\r\n\r\n.pacman-loader {\r\n    position: absolute;\r\n    top: 35%;\r\n    left: 45%;\r\n}\r\n\r\n.master-block {\r\n    position: relative;\r\n    min-height: 530px;\r\n    margin-top: 128px;\r\n    \r\n    flex-wrap: wrap;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    padding-right: 0;\r\n    padding-left: 60px;\r\n    padding-top: 32px;\r\n    padding-bottom: 0;\r\n\r\n    margin-left: 14%;\r\n    margin-right: 14%;\r\n    border-radius: 8px;\r\n    background: #1f244a;\r\n    box-shadow: 0 5px 10px rgba(0,0,0,.4);\r\n}\r\n\r\n.master-block > div{\r\n    height: 100%;\r\n}\r\n\r\n.master-block h2 {\r\n    max-width: 520px;\r\n    padding-top: 0;\r\n    margin-bottom: 20px;\r\n    font-size: 36px;\r\n    line-height: 44px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.master-block span, .the-hateful-four span {\r\n    color: #f31a5a !important;\r\n}\r\n\r\n.master-block p {\r\n    font-size: 18px;\r\n    line-height: 22px;\r\n    font-weight: 400;\r\n    margin-bottom: 30px;\r\n    max-width: 520px;\r\n}\r\n\r\n.top-products {\r\n    margin-top: 80px;\r\n}\r\n\r\n.master-image {\r\n    min-height: 530px;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: flex-end;\r\n    height: 100%;\r\n}\r\n\r\n.image_1 {\r\n    max-height: 500px;\r\n    height: 100%;\r\n    width: auto;\r\n    display: block;\r\n}\r\n\r\n.image_2 {\r\n    margin-right: -1px;\r\n    max-height: 500px;\r\n    height: 100%;\r\n    width: auto;\r\n    display: block;\r\n}\r\n\r\n.btn-promotes{\r\n    min-width: 210px;\r\n    width: 210px;\r\n    height: 20px;\r\n    position: relative;\r\n    background: #49b749;\r\n    box-shadow: 0 2px 3px rgba(0,0,0,.4);\r\n    border-radius: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 15px 20px;\r\n    font-weight: 900;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: .2s ease;\r\n    text-decoration: none;\r\n}\r\n\r\n.btn-promotes:hover {\r\n    opacity: 0.8;\r\n}\r\n\r\n.master-block:hover .image_1 {\r\n    display: none;\r\n}\r\n\r\n.master-block:not(:hover) .image_2 {\r\n    display: none;\r\n}\r\n\r\n.the-hateful-four {\r\n    margin-top: 80px;\r\n    margin-left: 14%;\r\n    margin-right: 14%;\r\n}\r\n\r\n.the-hateful-four h2 {\r\n    max-width: 620px;\r\n    padding-top: 0;\r\n    margin-bottom: 20px;\r\n    font-size: 36px;\r\n    line-height: 44px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.top-games-block {\r\n    margin-top: 30px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n\r\n/* SLIDER */\r\n.slider {\r\n    width: 40vw;\r\n    height: 400px;\r\n    overflow: hidden;\r\n    border: 0.8rem solid var(--lighter-color);\r\n    margin-left: 50%;\r\n\r\n    transform: translate(-50%, 15%);\r\n}\r\n\r\n.navigation {\r\n    bottom: 10px;\r\n    position: absolute;\r\n    display: flex;\r\n    margin-left: 38%;\r\n}\r\n\r\n.slider-bar {\r\n    height: 8px;\r\n    width: 30px;\r\n    margin: 6px;\r\n    cursor: pointer;\r\n    background-color: var(--lighter-color);\r\n    border: 0.3rem solid var(--primary-color);\r\n    opacity: .7;\r\n    border-radius: 10px;\r\n    transition: all .4s ease;\r\n}\r\n\r\n.slider-bar:hover {\r\n    opacity: 1;\r\n    transform: scale(1.1);\r\n}\r\n\r\ninput[name=\"r\"] {\r\n    position: absolute;\r\n    visibility: hidden;\r\n}\r\n\r\n.slides {\r\n    width: 400%;\r\n    height: 100%;\r\n    display: flex;\r\n}\r\n\r\n.slide {\r\n    width: 25%;\r\n    transition: all .6s ease;\r\n}\r\n\r\n.slide img {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n#r1:checked ~ .curS {\r\n    margin-left: 0;\r\n}\r\n\r\n#r2:checked ~ .curS {\r\n    margin-left: -25%;\r\n}\r\n\r\n#r3:checked ~ .curS {\r\n    margin-left: -50%;\r\n}\r\n\r\n#r4:checked ~ .curS {\r\n    margin-left: -75%;\r\n}\r\n\r\n/* FOOTER */\r\nfooter {\r\n    bottom: 0;\r\n    width: 100vw;\r\n    background-color: var(--lighter-color);\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: stretch;\r\n    padding-left: 14%;\r\n    padding-right: 14%;\r\n    padding-top: 2rem;\r\n    justify-content: space-between;\r\n}\r\n\r\n.contacts-info {\r\n    margin-bottom: 0;\r\n    order: 0;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n\r\n.contacts-info span {\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    color: #b8c1d8;\r\n    margin-bottom: 5px;\r\n    display: block;\r\n}\r\n\r\n.contacts-info a, p{\r\n    font-size: 24px;\r\n    line-height: 29px;\r\n    margin-bottom: 30px;\r\n    transition: .2s ease;\r\n    font-weight: 900;\r\n    text-decoration: none;\r\n    margin-top: 0;\r\n    color: #fff;\r\n}\r\n\r\n.footer_promotes {\r\n    max-width: 310px;\r\n    height: 190px;\r\n    order: 0;\r\n    background-position: 70% 105%;\r\n    background-size: 165px;\r\n    background: url(../images/svg/footer-prom.svg) 100% 75% no-repeat;\r\n    padding-bottom: 50px;\r\n    position: relative;\r\n    color: #fff;\r\n}\r\n\r\n.promotes-title {\r\n    font-size: 24px;\r\n    line-height: 29px;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.promotes-text {\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    font-weight: 500;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.btn-promotes{\r\n    min-width: 210px;\r\n    width: 210px;\r\n    height: 20px;\r\n    position: relative;\r\n    background: #49b749;\r\n    box-shadow: 0 2px 3px rgba(0,0,0,.4);\r\n    border-radius: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 15px 20px;\r\n    font-weight: 900;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: .2s ease;\r\n    text-decoration: none;\r\n}\r\n\r\n.btn-promotes:hover {\r\n    background: #3b8d3b;\r\n}\r\n\r\n@media only screen and (max-width: 1280px){\r\n    .header-hours, .header-phone, .header-search, .slider {\r\n        display: none;\r\n    }\r\n    .header-item:first-child {\r\n        display: block;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=u},3645:function(n){"use strict";n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var t=n(r);return r[2]?"@media ".concat(r[2]," {").concat(t,"}"):t})).join("")},r.i=function(n,t,e){"string"==typeof n&&(n=[[null,n,""]]);var i={};if(e)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);e&&i[A[0]]||(t&&(A[2]?A[2]="".concat(t," and ").concat(A[2]):A[2]=t),r.push(A))}},r}},4015:function(n){"use strict";function r(n,r){(null==r||r>n.length)&&(r=n.length);for(var t=0,e=new Array(r);t<r;t++)e[t]=n[t];return e}n.exports=function(n){var t,e,i=(e=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var t=[],e=!0,i=!1,o=void 0;try{for(var a,s=n[Symbol.iterator]();!(e=(a=s.next()).done)&&(t.push(a.value),!r||t.length!==r);e=!0);}catch(n){i=!0,o=n}finally{try{e||null==s.return||s.return()}finally{if(i)throw o}}return t}}(t,e)||function(n,t){if(n){if("string"==typeof n)return r(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?r(n,t):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[1],a=i[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),c="/*# ".concat(A," */"),l=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[o].concat(l).concat([c]).join("\n")}return[o].join("\n")}},1667:function(n){"use strict";n.exports=function(n,r){return r||(r={}),"string"!=typeof(n=n&&n.__esModule?n.default:n)?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n)}},3379:function(n,r,t){"use strict";var e,i=function(){var n={};return function(r){if(void 0===n[r]){var t=document.querySelector(r);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[r]=t}return n[r]}}(),o=[];function a(n){for(var r=-1,t=0;t<o.length;t++)if(o[t].identifier===n){r=t;break}return r}function s(n,r){for(var t={},e=[],i=0;i<n.length;i++){var s=n[i],A=r.base?s[0]+r.base:s[0],c=t[A]||0,l="".concat(A," ").concat(c);t[A]=c+1;var u=a(l),p={css:s[1],media:s[2],sourceMap:s[3]};-1!==u?(o[u].references++,o[u].updater(p)):o.push({identifier:l,updater:h(p,r),references:1}),e.push(l)}return e}function A(n){var r=document.createElement("style"),e=n.attributes||{};if(void 0===e.nonce){var o=t.nc;o&&(e.nonce=o)}if(Object.keys(e).forEach((function(n){r.setAttribute(n,e[n])})),"function"==typeof n.insert)n.insert(r);else{var a=i(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(r)}return r}var c,l=(c=[],function(n,r){return c[n]=r,c.filter(Boolean).join("\n")});function u(n,r,t,e){var i=t?"":e.media?"@media ".concat(e.media," {").concat(e.css,"}"):e.css;if(n.styleSheet)n.styleSheet.cssText=l(r,i);else{var o=document.createTextNode(i),a=n.childNodes;a[r]&&n.removeChild(a[r]),a.length?n.insertBefore(o,a[r]):n.appendChild(o)}}function p(n,r,t){var e=t.css,i=t.media,o=t.sourceMap;if(i?n.setAttribute("media",i):n.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}var f=null,d=0;function h(n,r){var t,e,i;if(r.singleton){var o=d++;t=f||(f=A(r)),e=u.bind(null,t,o,!1),i=u.bind(null,t,o,!0)}else t=A(r),e=p.bind(null,t,r),i=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return e(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap)return;e(n=r)}else i()}}n.exports=function(n,r){(r=r||{}).singleton||"boolean"==typeof r.singleton||(r.singleton=(void 0===e&&(e=Boolean(window&&document&&document.all&&!window.atob)),e));var t=s(n=n||[],r);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var e=0;e<t.length;e++){var i=a(t[e]);o[i].references--}for(var A=s(n,r),c=0;c<t.length;c++){var l=a(t[c]);0===o[l].references&&(o[l].updater(),o.splice(l,1))}t=A}}}},8198:function(n,r,t){"use strict";async function e(){let n=await fetch("https://my-json-server.typicode.com/VladSach/GameRshop/db");if(n.ok)return await n.json();throw new Error(n.status)}t.d(r,{D:function(){return d}});class i{constructor({products_end_points:n,actions_end_points:r,catalog_end_points:t,orders_end_points:e,cart_end_points:i},o){window.addEventListener("hashchange",(()=>this.onRouteChange())),this.end_points={home:"",cart:i,product:n,action:r,catalog:t,checkout:e},this.hub=o,window.location.hash&&this.loadHome()}onRouteChange(){window.scrollTo({left:0,top:0,behavior:"smooth"});const n=window.location.hash.substring(1).split("/");let r,t;2==n.length?(r=n[0],t=n[1],this.loadContent(r,t)||this.loadHome()):1==n.length?(r=n[0],this.loadContent(r)||this.loadHome()):this.loadHome()}loadContent(n,r=null){if(n in this.end_points){if(null!=r&&this.end_points[n].includes(r))return this.hub.loadByHash(n,r),!0;if(null==r)return this.hub.loadByHash(n),!0}return!1}loadHome(){history.pushState(null,null,"#home"),this.hub.loadDefaultPage()}}var o=t(3379),a=t.n(o),s=t(174),A=(a()(s.Z,{insert:"head",singleton:!1}),s.Z.locals,t(1491)),c=(a()(A.Z,{insert:"head",singleton:!1}),A.Z.locals,t(7631)),l=(a()(c.Z,{insert:"head",singleton:!1}),c.Z.locals,t(1542)),u=(a()(l.Z,{insert:"head",singleton:!1}),l.Z.locals,t(263)),p=(a()(u.Z,{insert:"head",singleton:!1}),u.Z.locals,t(2632)),f=(a()(p.Z,{insert:"head",singleton:!1}),p.Z.locals,t(3170));function d(){return'\n        <div class="pacman-loader" role="status">\n            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="200px" height="200px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">\n                    <g>\n                        <circle cx="63.2327" cy="50" r="4" fill="#fff">\n                            <animate attributeName="cx" repeatCount="indefinite" dur="1s" values="95;35" keyTimes="0;1" begin="-0.67s"></animate>\n                            <animate attributeName="fill-opacity" repeatCount="indefinite" dur="1s" values="0;1;1" keyTimes="0;0.2;1" begin="-0.67s"></animate>\n                        </circle>\n                        <circle cx="83.6327" cy="50" r="4" fill="#fff">\n                            <animate attributeName="cx" repeatCount="indefinite" dur="1s" values="95;35" keyTimes="0;1" begin="-0.33s"></animate>\n                            <animate attributeName="fill-opacity" repeatCount="indefinite" dur="1s" values="0;1;1" keyTimes="0;0.2;1" begin="-0.33s"></animate>\n                        </circle>\n                        <circle cx="43.4327" cy="50" r="4" fill="#fff">\n                            <animate attributeName="cx" repeatCount="indefinite" dur="1s" values="95;35" keyTimes="0;1" begin="0s"></animate>\n                            <animate attributeName="fill-opacity" repeatCount="indefinite" dur="1s" values="0;1;1" keyTimes="0;0.2;1" begin="0s"></animate>\n                        </circle>\n                    </g><g transform="translate(-15 0)">\n                    <path d="M50 50L20 50A30 30 0 0 0 80 50Z" fill="#fff" transform="rotate(90 50 50)"></path>\n                    <path d="M50 50L20 50A30 30 0 0 0 80 50Z" fill="#fff" transform="rotate(12.6491 50 50)">\n                        <animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="1s" values="0 50 50;45 50 50;0 50 50" keyTimes="0;0.5;1"></animateTransform>\n                    </path>\n                    <path d="M50 50L20 50A30 30 0 0 1 80 50Z" fill="#fff" transform="rotate(-12.6491 50 50)">\n                        <animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="1s" values="0 50 50;-45 50 50;0 50 50" keyTimes="0;0.5;1"></animateTransform>\n                    </path>\n                </g>\n            </svg> \n        </div>\n    '}a()(f.Z,{insert:"head",singleton:!1}),f.Z.locals;let h=new class{constructor(){this.route="cart",this.content=document.getElementById("product-list"),this.cartBtn=document.getElementById("cart-btn"),this.totalPrice=0,this.totalProducts=0}loadPage(n){return null==n?(this.showCartOnClick(),!1):("clear"==n?this.clearCart():this.addItemToCartLocalStorage(n),!0)}showCartOnClick(){let n=document.getElementById("cart-dropdown"),r=document.querySelector(".overlay"),t=document.querySelector(".empty-cart"),e=document.querySelector(".cart-dropdown-full"),i=document.getElementById("products-counter-header");n.style.display="block",r.style.display="block",0==JSON.parse(localStorage.getItem("cart")).length?(t.style.display="block",i.style.display="none",e.style.display="none"):(t.style.display="none",e.style.display="block"),r.addEventListener("click",(()=>{n.style.display="none",r.style.display="none",t.style.display="none",e.style.display="none",history.pushState(null,null,"#home")}));let o=document.querySelectorAll(".counter-plus"),a=document.querySelectorAll(".counter-minus");o.forEach((n=>{n.addEventListener("click",(()=>{console.log("+")}))})),a.forEach((n=>{n.addEventListener("click",(()=>{console.log("-")}))}))}async loadCart(){let n=await e(),r=[],t=JSON.parse(localStorage.getItem("cart"));t.forEach((n=>{r.push(n.url)}));let i=n.products.filter((n=>r.includes(n.url))),o=document.getElementById("products-counter-header"),a=document.getElementById("products-counter-dropdown"),s=document.getElementById("cart-total-sum");i.forEach((n=>{o.style.display="flex";let r=this.getAmountFromLocalStorage(n.url);this.totalProducts+=r,o.innerText=this.totalProducts,a.innerText=this.totalProducts,this.totalPrice+=n.price*r,s.innerText=this.totalPrice;let e=t.filter((r=>n.url===r.url))[0].amount;this.content.innerHTML+=this.loadCartItemTemplate(n,e)}))}async addItemToCart(n){let r=(await e()).products.filter((r=>r.url===n));r=r[0];let t=document.getElementById("products-counter-header");t.style.display="flex";let i=document.getElementById("products-counter-dropdown"),o=document.getElementById("cart-total-sum"),a=this.getAmountFromLocalStorage(r.url);this.totalProducts+=a,t.innerText=this.totalProducts,i.innerText=this.totalProducts,this.totalPrice+=r.price*a,o.innerText=this.totalPrice,this.content.innerHTML+=this.loadCartItemTemplate(r,1)}async updateCart(n){let r=(await e()).products.filter((r=>r.url===n));if(null!=r){let n=document.getElementById("products-counter-header");n.style.display="flex";let t=document.getElementById("products-counter-dropdown"),e=document.getElementById("cart-total-sum");r.forEach((r=>{let i=this.getAmountFromLocalStorage(r.url);this.totalProducts++,n.innerText=this.totalProducts,t.innerText=this.totalProducts,this.totalPrice+=r.price,e.innerText=this.totalPrice,document.getElementById("amount-"+r.url).innerText=i}))}}addItemToCartLocalStorage(n){let r=JSON.parse(localStorage.getItem("cart"));if(!r)return r=[],r.push({url:n,amount:1}),localStorage.setItem("cart",JSON.stringify(r)),this.loadCart(),!0;let t=!1;for(let e=0;e<r.length;e++)if(r[e].url===n){r[e].amount++,t=!0;break}return t?(localStorage.setItem("cart",JSON.stringify(r)),this.updateCart(n),!1):(r.push({url:n,amount:1}),localStorage.setItem("cart",JSON.stringify(r)),this.addItemToCart(n),!0)}getAmountFromLocalStorage(n){let r=JSON.parse(localStorage.getItem("cart"));for(let t=0;t<r.length;t++)if(r[t].url===n)return r[t].amount}loadCartItemTemplate(n,r){return`\n        <div class="cart-item">\n            <a class="delete-item" href="javascript:void(0);"></a>\n            <a class="cart-item-image" href="#product/${n.url}">\n                <img src="${n.image}" alt="item img">\n            </a>\n            <div class="cart-item-info">\n                <a class="cart-item-title" href="#product/${n.url}">${n.title}</a>\n                <p class="cart-item-platform">\n                    Platform \n                    <span class="${n.platform[0]}"><img src="./images/platforms/${n.platform[0]}.svg" alt=''></span>\n                    <span class="${n.platform[1]}"><img src="./images/platforms/${n.platform[1]}.svg" alt=''></span>\n                    <span class="${n.platform[2]}"><img src="./images/platforms/${n.platform[2]}.svg" alt=''></span>\n                </p>\n                <p class="cart-item-version">\n                    Version\n                    <span>Standart</span>\n                </p>\n                <p class="cart-item-lang">\n                    Language\n                    <span>${n.languages[0]}</span>\n                </p>\n                <div class="cart-item-block">\n                    <span class="cart-item-price">\n                        <span class="cart-item-price-value">${n.price}</span>\n                        ₴\n                    </span>\n                    <div class="cart-item-counter">\n                        <span class="counter-minus"></span>\n                        <span id="amount-${n.url}" class="counter-value">${r}</span>\n                        <span class="counter-plus"></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        `}clearCart(){localStorage.setItem("cart",JSON.stringify([])),this.totalPrice=0,this.totalProducts=0,this.content.innerHTML="",this.loadPage()}},g=new class{constructor(){this.route="home",this.content=document.getElementById("page-content")}loadPage(){return this.loadHomePage(),!0}async loadHomePage(){let n=(await e()).products;n.sort((function(n,r){return r.sold-n.sold})),n=Object.entries(n).slice(0,4).map((n=>n[1])),this.content.innerHTML=`\n        ${this.loadSlider()}\n        ${this.loadMastersBlock()}\n        ${this.bestSellers(n)}`,this.sliderScript()}loadSlider(){return'\n        <div class="slider">\n                \n            <div class="slides">\n                <input type="radio" name="r" id="r1" checked>\n                <input type="radio" name="r" id="r2" >\n                <input type="radio" name="r" id="r3" >\n                <input type="radio" name="r" id="r4" >\n                <div class="slide curS">\n                    <a href="#catalog/playstation_4">\n                        <img src="images/slider/image1.webp" alt="Slide">\n                    </a>\n                </div>\n                <div class="slide">\n                    <a href="#catalog/xbox_one">\n                        <img src="images/slider/image2.webp" alt="Slide">\n                    </a>\n                </div>\n                <div class="slide">\n                    <a href="#catalog/nintendo_switch">\n                        <img src="images/slider/image3.webp" alt="Slide">\n                    </a>\n                </div>\n                <div class="slide">\n                    <a href="#action/winter_action">\n                        <img src="images/slider/image4.webp" alt="Slide">\n                    </a>\n                </div>\n                \n            </div>\n            <div class="navigation">\n                <label for="r1" class="slider-bar"></label>\n                <label for="r2" class="slider-bar"></label>\n                <label for="r3" class="slider-bar"></label>\n                <label for="r4" class="slider-bar"></label>\n            </div>\n        </div>\n            '}sliderScript(){let n=0,r=[];r[0]=document.getElementById("r1"),r[1]=document.getElementById("r2"),r[2]=document.getElementById("r3"),r[3]=document.getElementById("r4"),window.onload=function t(){r[n].click(),n<r.length-1?n++:n=0,setTimeout(t,4e3)}()}loadMastersBlock(){return'\n        <div class="master-block">\n            <div>\n                <h2 class="white-text">Master of \n                    <span class="red-text">games</span>\n                </h2>\n                <p> Game selection crisis? \n                    Great choice and don\'t know how to play? \n                    Played for a long time and do not know anything about new products? \n                    Our <span style="text-decoration:line-through;">Dungeon</span> Game Master will solve your problem quickly and without unnecessary words :)\n                </p>\n                <a href="#catalog" id="btn-h" class="btn-promotes">Begin</a>\n            </div>\n            <div class="master-image">\n                <img class="image_1" src="./images/master/kia-1.svg" alt="master-down">\n                <img class="image_2" src="./images/master/kia-2.svg" alt="master-up">\n            </div>\n        </div>\n        '}bestSellers(n){let r="";return n.forEach((n=>{r+=`\n                <div class="game-card">\n                    <a class="game-card-image" href="#product/${n.url}">\n                           <img src="${n.image}" alt="game image">\n                    </a>\n                    <a class="game-card-title" href="#product/${n.url}">${n.title}</a>\n                    <div class="game-card-price">\n                        <p>${n.price} ₴</p>\n                    </div>\n                    <div class="game-card-platform">\n                        <span class="platform-item ${n.platform[0]}"><img src="./images/platforms/${n.platform[0]}.svg" alt=''></span>\n                        <span class="platform-item ${n.platform[1]}"><img src="./images/platforms/${n.platform[1]}.svg" alt=''></span>\n                        <span class="platform-item ${n.platform[2]}"><img src="./images/platforms/${n.platform[2]}.svg" alt=''></span>\n                    </div>\n                </div>\n            `})),`\n        <div class="the-hateful-four">\n            <h2>Our <span>best</span> selling games</h2>\n            <div class="top-games-block">\n               ${r} \n            </div>\n        </div>\n        `}},m=new class{constructor(){this.route="checkout",this.content=document.getElementById("page-content"),this.formContent,this.validForm=[]}loadPage(n){return null==n?this.loadCheckout():this.loadOrder(n),!0}loadCheckout(){this.content.innerHTML='\n        <div class="container-order">\n            <h1 class="order-title">Forming order</h1>\n            <div class="steps">\n                <div class="steps-throuth"></div>\n                <div class="steps-item">\n                    <div class="steps-item-icon steps-item-icon-active" id="step-icon-1">\n                        <svg class="steps-user" width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">\n                            <circle cx="16" cy="10" r="7.5" stroke="white" stroke-width="3"></circle>\n                            <path d="M29 31C29 23.8203 23.1797 18 16 18C8.8203 18 3 23.8203 3 31" stroke="white" stroke-width="3"></path>\n                        </svg>\n                    </div>\n                </div>\n                <div class="steps-item">\n                    <div class="steps-item-icon" id="step-icon-2">\n                        <svg class="steps-box" width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">\n                            <path d="M2.25 2.9375V7.0625H2.9375V18.0625H18.0625V7.0625H18.75V2.9375H2.25ZM3.625 4.3125H17.375V5.6875H3.625V4.3125ZM4.3125 7.0625H16.6875V16.6875H4.3125V7.0625ZM8.30894 8.4375C8.21865 8.44594 8.13092 8.47208 8.05074 8.51443C7.97056 8.55678 7.8995 8.61451 7.84163 8.68432C7.78376 8.75413 7.7402 8.83465 7.71345 8.92129C7.6867 9.00794 7.67728 9.099 7.68572 9.18928C7.69416 9.27957 7.7203 9.3673 7.76265 9.44748C7.805 9.52766 7.86273 9.59872 7.93254 9.65659C8.07352 9.77347 8.25516 9.82955 8.4375 9.8125H12.5625C12.7448 9.8125 12.9197 9.74007 13.0486 9.61114C13.1776 9.4822 13.25 9.30734 13.25 9.125C13.25 8.94266 13.1776 8.7678 13.0486 8.63886C12.9197 8.50993 12.7448 8.4375 12.5625 8.4375H8.4375C8.41597 8.43649 8.3944 8.43649 8.37288 8.4375C8.35135 8.43649 8.33047 8.43649 8.30894 8.4375Z" fill="white"></path>\n                        </svg>\n                    </div>\n                </div>\n                <div class="steps-item">\n                    <div class="steps-item-icon" id="step-icon-3">\n                        <svg class="steps__cart" width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">\n                            <path d="M18.8789 3.41016H2.12109C1.76459 3.41016 1.47656 3.69818 1.47656 4.05469V16.9453C1.47656 17.3018 1.76459 17.5898 2.12109 17.5898H18.8789C19.2354 17.5898 19.5234 17.3018 19.5234 16.9453V4.05469C19.5234 3.69818 19.2354 3.41016 18.8789 3.41016ZM2.92676 4.86035H18.0732V7.27734H2.92676V4.86035ZM18.0732 16.1396H2.92676V9.0498H18.0732V16.1396ZM13.2997 14.8506H16.623C16.7117 14.8506 16.7842 14.7781 16.7842 14.6895V13.2393C16.7842 13.1506 16.7117 13.0781 16.623 13.0781H13.2997C13.2111 13.0781 13.1385 13.1506 13.1385 13.2393V14.6895C13.1385 14.7781 13.2111 14.8506 13.2997 14.8506Z" fill="white"></path>\n                        </svg>\n                    </div>\n                </div>\n                <div class="steps-item">\n                    <div class="steps-item-icon" id="step-icon-4">\n                        <svg class="steps__check" width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">\n                            <path d="M2.24484 11.997L6.32086 15.108L12.8659 7.62797L11.5716 6.49703L6.08539 12.767L3.2864 10.6306L2.24484 11.997ZM18.8815 7.62797L17.5873 6.49703L12.1139 12.7524L11.4668 12.2351L10.3926 13.5774L12.3236 15.1226L18.8815 7.62797Z" fill="white"></path>\n                        </svg>\n                    </div>\n                </div>\n            </div>\n\n            <div class="order-wrapper">\n                <div class="order-form">\n                    <div class="order-form-block">\n                        <div class="order-form-header">Personal information</div>\n                        <div class="order-form-content">\n\n                        </div>\n                    </div>\n                </div>  \n            </div>\n\n        </div>\n        ',this.formContent=document.querySelector(".order-form-content"),this.formContent.innerHTML=this.loadStepOne(),this.eventListerStepOne()}loadStepOne(){return'\n        <div id="step-1">\n            <form id="form-step-1" autocomplete="off"  novalidate>\n                <div class="form-group">\n                    <input class = "form-group-input" id="name" name="name" type="text" value="" required>\n                    <label for="name">Name</label>\n                    <span class="help">Order will be placed in this name</span>\n                </div>\n                <div class="form-group">\n                    <input class = "form-group-input" id="surname" name="surname" type="text" value="" required>\n                    <label for="surname">Surname</label>\n                    <span class="help">Order will be placed in this surname</span>\n                </div>\n                <div class="form-group">\n                    <input class = "form-group-input" id="tel" name="tel" type="tel" value="" required>\n                    <label for="tel">Phone</label>\n                    <span class="help">Requared for order conformation</span>\n                </div>\n                <div class="form-group">\n                    <input class = "form-group-input" id="email" name="email" type="email" value="" required>\n                    <label for="email">Email</label>\n                    <span class="help">Order detail will be sent there</span>\n                </div>\n\n                <button type="submit" id="btn-step-1" class="btn-submit">\n                    Further\n                </button>\n            </form>\n            \n        </div>\n        '}eventListerStepOne(){let n=document.getElementById("form-step-1");const r=n.elements.namedItem("name"),t=n.elements.namedItem("surname"),e=n.elements.namedItem("tel"),i=n.elements.namedItem("email"),o=/^[^0-9_!¡?÷?¿/\\+=@#$%ˆ&*(){}|~<>;:[\]]{2,}$/,a=/^\+?3?8?(0\d{9})$/,s=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;r.addEventListener("input",(n=>{history.pushState(null,null,"#checkout"),o.test(n.target.value)?(n.target.classList.add("validated"),n.target.classList.remove("non-validated")):(n.target.classList.add("non-validated"),n.target.classList.remove("validated"))})),t.addEventListener("input",(n=>{o.test(n.target.value)?(n.target.classList.add("validated"),n.target.classList.remove("non-validated")):(n.target.classList.add("non-validated"),n.target.classList.remove("validated"))})),e.addEventListener("input",(n=>{a.test(n.target.value)?(n.target.classList.add("validated"),n.target.classList.remove("non-validated")):(n.target.classList.add("non-validated"),n.target.classList.remove("validated"))})),i.addEventListener("input",(n=>{s.test(n.target.value)?(n.target.classList.add("validated"),n.target.classList.remove("non-validated")):(n.target.classList.add("non-validated"),n.target.classList.remove("validated"))}));let A=!0;n.addEventListener("submit",(n=>{n.preventDefault();let c=[];o.test(r.value)||c.push({text:"name",el:r}),o.test(t.value)||c.push({text:"surname",el:t}),a.test(e.value)||c.push({text:"tel",el:e}),s.test(i.value)||c.push({text:"email",el:i}),c.length>0&&(A=!1),A&&(this.validForm.push(r.value),this.validForm.push(t.value),this.validForm.push(e.value),this.validForm.push(i.value),this.loadStepThree())}))}loadStepThree(){document.getElementById("step-icon-2").classList.add("steps-item-icon-active"),document.getElementById("step-icon-3").classList.add("steps-item-icon-active"),document.querySelector(".order-form-header").innerHTML="Payment",this.formContent.innerHTML='\n            <div id="step-2">\n                <form id="form-step-2" autocomplete="off"  novalidate>\n                    <div class="form-group">\n                        <input class = "form-group-input" id="name-on-card" name="name-on-card" type="text" value="" required>\n                        <label for="name">Name on card</label>\n                        <span class="help">Full name as displayed on card</span>\n                    </div>\n                    <div class="form-group">\n                        <input class = "form-group-input" id="credit-card-number" name="credit-card-number" type="text" value="" required>\n                        <label for="surname">Credit card number</label>\n                        <span class="help">Credit card number is required</span>\n                    </div>\n                    <div class="form-group">\n                        <input class = "form-group-input" id="expiration-date" name="expiration-date" type="text" value="" required>\n                        <label for="tel">Expiration date</label>\n                        <span class="help">Expiration date is required</span>\n                    </div>\n                    <div class="form-group">\n                        <input class = "form-group-input" id="cvc" name="cvc" type="password" value="" required>\n                        <label for="tel">CVC</label>\n                        <span class="help">CVC is required</span>\n                    </div>\n\n                    <button type="submit" id="btn-step-2" class="btn-submit">\n                        Further\n                    </button>\n                </form>\n                \n            </div>\n        ',this.eventListerStepThree()}eventListerStepThree(){let n=document.getElementById("form-step-2");const r=n.elements.namedItem("name-on-card"),t=n.elements.namedItem("credit-card-number"),e=n.elements.namedItem("expiration-date"),i=n.elements.namedItem("cvc"),o=/^[^0-9_!¡?÷?¿/\\+=@#$%ˆ&*(){}|~<>;:[\]]{2,}$/,a=/^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$/,s=/^((0[1-9])|(1[0-2]))[/.-]*(2[0-9])$/,A=/^[0-9]{3,}/;r.addEventListener("input",(n=>{o.test(n.target.value)?(n.target.classList.add("validated"),n.target.classList.remove("non-validated")):(n.target.classList.add("non-validated"),n.target.classList.remove("validated"))})),t.addEventListener("input",(n=>{a.test(n.target.value)?(n.target.classList.add("validated"),n.target.classList.remove("non-validated")):(n.target.classList.add("non-validated"),n.target.classList.remove("validated"))})),e.addEventListener("input",(n=>{s.test(n.target.value)?(n.target.classList.add("validated"),n.target.classList.remove("non-validated")):(n.target.classList.add("non-validated"),n.target.classList.remove("validated"))})),i.addEventListener("input",(n=>{A.test(n.target.value)?(n.target.classList.add("validated"),n.target.classList.remove("non-validated")):(n.target.classList.add("non-validated"),n.target.classList.remove("validated"))}));let c=!0;n.addEventListener("submit",(n=>{n.preventDefault();let l=[];o.test(r.value)||l.push({text:"cardName",el:r}),a.test(t.value)||l.push({text:"creditCardNumber",el:t}),s.test(e.value)||l.push({text:"expiration",el:e}),A.test(i.value)||l.push({text:"cvc",el:i}),l.length>0&&(c=!1),c&&(this.validForm.push(r.value),this.validForm.push(t.value),this.validForm.push(e.value),this.validForm.push(i.value),this.loadStepFour())}))}loadStepFour(){document.getElementById("step-icon-4").classList.add("steps-item-icon-active"),document.querySelector(".order-form-header").innerHTML="Order review";let n={name:this.validForm[0],surname:this.validForm[1],tel:this.validForm[2],email:this.validForm[3],cardName:this.validForm[4],creditCardNumber:this.validForm[5],expiration:this.validForm[6],cvc:this.validForm[7]};this.formContent.innerHTML=`\n            <div id="step-4">\n                <p>Name: ${n.name}</p>\n                <p>Surame: ${n.surname}</p>\n                <p>Phone: ${n.tel}</p>\n                <p>Email: ${n.email}</p>\n                <p>Card Name: ${n.cardName}</p>\n                <p>Card: ${n.creditCardNumber}</p>\n                <p>Expiration date: ${n.expiration}</p>\n                <p>CVC: ***</p>  \n                \n                <a href="#cart/clear"type="button" id="btn-step-4" class="btn-submit">\n                    Sumbit\n                </a>\n            </div>\n        `,document.getElementById("btn-step-4").addEventListener("click",(()=>{(function(n,r,t=null){return fetch(r,{method:n,body:t}).then((n=>{if(!n.ok)throw Error(n.statusText);return n.json()})).catch((n=>{console.log(n)}))})("POST","https://my-json-server.typicode.com/VladSach/GameRshop/orders",JSON.stringify(n)).then((r=>{this.loadOrderById(r.id,n)})).catch((n=>{console.log(n),this.showError()}))}))}loadOrderById(n,{name:r,surname:t,tel:e,email:i,cardName:o,creditCardNumber:a,expiration:s}){history.pushState(null,null,"#checkout/"+n),document.querySelector(".order-title").innerHTML="Your order",document.querySelector(".order-form-header").innerHTML="Congrats",this.formContent.innerHTML=`\n            <div id="step-4">\n            <h2>Order ID: ${n}</h2>\n                <p>Name: ${r}</p>\n                <p>Surame: ${t}</p>\n                <p>Phone: ${e}</p>\n                <p>Email: ${i}</p>\n                <p>Card Name: ${o}</p>\n                <p>Card: ${a}</p>\n                <p>Expiration date: ${s}</p>\n                <p>CVC: ***</p>  \n            </div>\n        `,history.pushState(null,null,"#checkout/"+n)}showError(){this.content.innerHTML='\n        <div role="alert">\n            Some problems with the data server. Sorry\n        </div>\n        '}},B=new class{constructor(){this.route="action",this.content=document.getElementById("page-content")}loadPage(n){return null!=n&&(this.loadProductPage(n),!0)}async loadProductPage(n){this.content.innerHTML='\n        <div class="pacman-loader" role="status">\n            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="200px" height="200px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">\n                    <g>\n                        <circle cx="63.2327" cy="50" r="4" fill="#fff">\n                            <animate attributeName="cx" repeatCount="indefinite" dur="1s" values="95;35" keyTimes="0;1" begin="-0.67s"></animate>\n                            <animate attributeName="fill-opacity" repeatCount="indefinite" dur="1s" values="0;1;1" keyTimes="0;0.2;1" begin="-0.67s"></animate>\n                        </circle>\n                        <circle cx="83.6327" cy="50" r="4" fill="#fff">\n                            <animate attributeName="cx" repeatCount="indefinite" dur="1s" values="95;35" keyTimes="0;1" begin="-0.33s"></animate>\n                            <animate attributeName="fill-opacity" repeatCount="indefinite" dur="1s" values="0;1;1" keyTimes="0;0.2;1" begin="-0.33s"></animate>\n                        </circle>\n                        <circle cx="43.4327" cy="50" r="4" fill="#fff">\n                            <animate attributeName="cx" repeatCount="indefinite" dur="1s" values="95;35" keyTimes="0;1" begin="0s"></animate>\n                            <animate attributeName="fill-opacity" repeatCount="indefinite" dur="1s" values="0;1;1" keyTimes="0;0.2;1" begin="0s"></animate>\n                        </circle>\n                    </g><g transform="translate(-15 0)">\n                    <path d="M50 50L20 50A30 30 0 0 0 80 50Z" fill="#fff" transform="rotate(90 50 50)"></path>\n                    <path d="M50 50L20 50A30 30 0 0 0 80 50Z" fill="#fff" transform="rotate(12.6491 50 50)">\n                        <animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="1s" values="0 50 50;45 50 50;0 50 50" keyTimes="0;0.5;1"></animateTransform>\n                    </path>\n                    <path d="M50 50L20 50A30 30 0 0 1 80 50Z" fill="#fff" transform="rotate(-12.6491 50 50)">\n                        <animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="1s" values="0 50 50;-45 50 50;0 50 50" keyTimes="0;0.5;1"></animateTransform>\n                    </path>\n                </g>\n            </svg> \n        </div>\n    ';let r=(await e()).actions.filter((r=>r.url===n));r=r[0],this.content.innerHTML=`\n            ${this.pageHTML(r)}\n        `}pageHTML(n){return`\n            <div class="action-container">\n                <div class="action-top">\n                    <div class="action-img-block">\n                        <img src="${n.image}" alt="action image">\n                    </div>\n                    <div class="action-information">\n                        <h1>${n.title}</h1>\n                        <p class="action-description">${n.description}</p>\n                        <p class="action-expire-date">${n.endDate}</p>\n                    </div>\n                </div>\n            </div>\n        `}},x=new class{constructor(){this.route="product",this.content=document.getElementById("page-content")}loadPage(n){return null!=n&&(this.loadProductPage(n),!0)}async loadProductPage(n){this.content.innerHTML='\n        <div class="pacman-loader" role="status">\n            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="200px" height="200px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">\n                    <g>\n                        <circle cx="63.2327" cy="50" r="4" fill="#fff">\n                            <animate attributeName="cx" repeatCount="indefinite" dur="1s" values="95;35" keyTimes="0;1" begin="-0.67s"></animate>\n                            <animate attributeName="fill-opacity" repeatCount="indefinite" dur="1s" values="0;1;1" keyTimes="0;0.2;1" begin="-0.67s"></animate>\n                        </circle>\n                        <circle cx="83.6327" cy="50" r="4" fill="#fff">\n                            <animate attributeName="cx" repeatCount="indefinite" dur="1s" values="95;35" keyTimes="0;1" begin="-0.33s"></animate>\n                            <animate attributeName="fill-opacity" repeatCount="indefinite" dur="1s" values="0;1;1" keyTimes="0;0.2;1" begin="-0.33s"></animate>\n                        </circle>\n                        <circle cx="43.4327" cy="50" r="4" fill="#fff">\n                            <animate attributeName="cx" repeatCount="indefinite" dur="1s" values="95;35" keyTimes="0;1" begin="0s"></animate>\n                            <animate attributeName="fill-opacity" repeatCount="indefinite" dur="1s" values="0;1;1" keyTimes="0;0.2;1" begin="0s"></animate>\n                        </circle>\n                    </g><g transform="translate(-15 0)">\n                    <path d="M50 50L20 50A30 30 0 0 0 80 50Z" fill="#fff" transform="rotate(90 50 50)"></path>\n                    <path d="M50 50L20 50A30 30 0 0 0 80 50Z" fill="#fff" transform="rotate(12.6491 50 50)">\n                        <animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="1s" values="0 50 50;45 50 50;0 50 50" keyTimes="0;0.5;1"></animateTransform>\n                    </path>\n                    <path d="M50 50L20 50A30 30 0 0 1 80 50Z" fill="#fff" transform="rotate(-12.6491 50 50)">\n                        <animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="1s" values="0 50 50;-45 50 50;0 50 50" keyTimes="0;0.5;1"></animateTransform>\n                    </path>\n                </g>\n            </svg> \n        </div>\n    ';let r=(await e()).products.filter((r=>r.url===n));r=r[0],this.content.innerHTML=`\n            ${this.pageHTML(r)}\n        `}pageHTML(n){return`\n        <div class="product-bg-img">\n            <img src="${n.backgroundImage}" alt="product bg img">\n            <div class="gradient"></div>\n        </div>\n        <div class="product-container">\n            <div class="product-info-wrap">\n                <div class="product-image">\n                    <img src="${n.image}" alt="prod img">\n                </div>\n                <div class="product-details">\n                    <div class="product-title">\n                        <h1>${n.title}</h1>\n                    </div>\n                    <div class="product-info">\n                        <div class="product-info--left">\n                            <div class="product-info--block">\n                                <p>Platform</p>\n                                <div class="platform-list">\n                                    <span class="info-item ${n.platform[0]}">\n                                        <img src="./images/platforms/${n.platform[0]}.svg" alt=' '>\n                                    </span>\n                                    <span class="info-item ${n.platform[1]}">\n                                        <img src="./images/platforms/${n.platform[1]}.svg" alt=' '>\n                                    </span>\n                                    <span class="info-item ${n.platform[2]}">\n                                        <img src="./images/platforms/${n.platform[2]}.svg" alt=' '>\n                                    </span>\n                                </div>\n                            </div>\n                            <div class="product-info--block">\n                                <p>Version</p>\n                                <div class="version-list">\n                                    <span class="info-item version">\n                                        <span>Standart</span>\n                                    </span>\n                                </div>\n                            </div>\n                            <div class="product-info--block">\n                                <p>Language</p>\n                                <div class="version-list">\n                                    <span class="info-item ${n.languages[0]}">\n                                        <span>${n.languages[0]}</span>\n                                    </span>\n                                    <span class="info-item ${n.languages[1]}">\n                                        <span>${n.languages[1]}</span>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                            <div class="product-info--right">\n                                <div class="info-price">\n                                    <p>Price: <span>${n.price} ₴</span></p>\n                                </div>\n                                <div class="info-buttons">\n                                    <a id="buy_btn" href="#cart/${n.url}">\n                                        <span class="text_1">buy</span>\n                                        <span class="text_2">In cart</span>\n                                    </a>\n                                    <a id="fav_btn" href="">\n                                        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">\n                                            <path d="M28.3255 16.697C26.7111 19.0368 24.0796 21.5956 19.9388 25.2058L16.0203 28.1164L12.287 25.2164C8.13283 21.5954 5.44092 19.0305 3.76908 16.6796C2.15321 14.4074 1.5 12.3462 1.5 9.66848C1.5 5.63225 4.64705 2.5 8.8 2.5C11.08 2.5 13.3854 3.56799 14.8622 5.28718L16 6.61181L17.1378 5.28718C18.6146 3.56799 20.92 2.5 23.2 2.5C27.3529 2.5 30.5 5.63225 30.5 9.66848C30.5 12.3684 29.8872 14.4336 28.3255 16.697Z" stroke="white" stroke-width="3" stroke-linecap="round"></path>\n                                        </svg>\n                                    </a>\n                                </div>\n                                <div class="info-options">\n                                    <img src="images/svg/rocket.svg" alt="">\n                                    <p>Will arrive tomorrow at 3pm</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="product-content">\n                <div class="characteristics-block">\n                    <p>Characteristics</p>\n                    <div class="characteristics-content">\n                        <ul>\n                            <li>\n                                <p class="characteristics-title">Platform</p>\n                                <p class="characteristics-value">\n                                    ${n.platform[0]} \n                                    ${n.platform[1]} \n                                    ${n.platform[2]}</p>\n                            </li>\n                            <li>\n                                <p class="characteristics-title">Version</p>\n                                <p class="characteristics-value">Standart</p>\n                            </li>\n                            <li>\n                                <p class="characteristics-title">Language</p>\n                                <p class="characteristics-value">\n                                ${n.languages[0]} \n                                ${n.languages[1]}</p>\n                            </li>\n                            <li>\n                                <p class="characteristics-title">Genres</p>\n                                <p class="characteristics-value">\n                                ${n.genres[0]}, \n                                ${n.genres[1]}</p>\n                            </li>\n                            <li>\n                                <p class="characteristics-title">Warranty</p>\n                                <p class="characteristics-value">14 days</p>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div class="description-block">\n                    <p>Description</p>\n                    <div class="description-block-content">\n                        <p>${n.description}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        `}},v=new class{constructor(){this.route="catalog",this.content=document.getElementById("page-content"),this.genresToShow=[],this.allGenres=["Action","Horror","Shooter","Stealth","Andventure","Platformer","Roleplaying"],this.allProducts}loadPage(n=null){return this.loadCatalogPage(n),!0}async loadCatalogPage(n=null){this.content.innerHTML='\n        <div class="pacman-loader" role="status">\n            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="200px" height="200px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">\n                    <g>\n                        <circle cx="63.2327" cy="50" r="4" fill="#fff">\n                            <animate attributeName="cx" repeatCount="indefinite" dur="1s" values="95;35" keyTimes="0;1" begin="-0.67s"></animate>\n                            <animate attributeName="fill-opacity" repeatCount="indefinite" dur="1s" values="0;1;1" keyTimes="0;0.2;1" begin="-0.67s"></animate>\n                        </circle>\n                        <circle cx="83.6327" cy="50" r="4" fill="#fff">\n                            <animate attributeName="cx" repeatCount="indefinite" dur="1s" values="95;35" keyTimes="0;1" begin="-0.33s"></animate>\n                            <animate attributeName="fill-opacity" repeatCount="indefinite" dur="1s" values="0;1;1" keyTimes="0;0.2;1" begin="-0.33s"></animate>\n                        </circle>\n                        <circle cx="43.4327" cy="50" r="4" fill="#fff">\n                            <animate attributeName="cx" repeatCount="indefinite" dur="1s" values="95;35" keyTimes="0;1" begin="0s"></animate>\n                            <animate attributeName="fill-opacity" repeatCount="indefinite" dur="1s" values="0;1;1" keyTimes="0;0.2;1" begin="0s"></animate>\n                        </circle>\n                    </g><g transform="translate(-15 0)">\n                    <path d="M50 50L20 50A30 30 0 0 0 80 50Z" fill="#fff" transform="rotate(90 50 50)"></path>\n                    <path d="M50 50L20 50A30 30 0 0 0 80 50Z" fill="#fff" transform="rotate(12.6491 50 50)">\n                        <animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="1s" values="0 50 50;45 50 50;0 50 50" keyTimes="0;0.5;1"></animateTransform>\n                    </path>\n                    <path d="M50 50L20 50A30 30 0 0 1 80 50Z" fill="#fff" transform="rotate(-12.6491 50 50)">\n                        <animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="1s" values="0 50 50;-45 50 50;0 50 50" keyTimes="0;0.5;1"></animateTransform>\n                    </path>\n                </g>\n            </svg> \n        </div>\n    ';let r=(await e()).products;this.genresToShow=this.allGenres,this.content.innerHTML=`\n            <div class="container">\n                <div class="products-list">\n                    <div class="products-list-sidebar">\n                        ${this.loadCatalogListSidebar()}\n                    </div>\n                    <div class="products-list-catalog">\n                        <div class="top-section">\n                            <div class="catalog-control">\n                                <a href="javascript:void(0);" class="catalog-sort active">Expensive first</a>\n                                <a href="javascript:void(0);" class="catalog-sort">Cheap first</a>\n                            </div>\n                        </div>\n\n                        <div class="catalog-content">\n                            ${this.loadCatalog(r)}\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        `,this.eventListener(r,n),this.refreshPage(r,n)}sortProducts(n,r=null){let t=n;if(r){let e="playstation_4"===r?"Playstation 4":"xbox_one"===r?"Xbox One":"Nintendo Switch";t=n.filter((n=>n.platform.includes(e)))}if(7!=this.genresToShow.length){if(0==this.genresToShow.length)return t=[],t;this.genresToShow.forEach((n=>{t.forEach((r=>{r.genres.includes(n)||t.splice(t.indexOf(r),1)}))}))}return t}eventListener(n,r=null){this.getPlatforms().forEach((t=>{t.addEventListener("change",(r=>{r.target.checked?(history.pushState(null,null,"#catalog/"+r.target.id.slice(6)),this.refreshPage(n,r.target.id.slice(6)),this.genresToShow=this.allGenres):r.target.checked||(history.pushState(null,null,"#catalog"),this.refreshPage(n,null),this.genresToShow=this.allGenres)})),t.id.slice(6)==r&&(t.checked=!0)})),this.getGenres().forEach((t=>{t.addEventListener("change",(e=>{7==this.genresToShow.length&&(this.genresToShow=[]),e.target.checked?(this.genresToShow.push(e.target.id.slice(6)),this.refreshPage(n,r)):e.target.checked||(this.genresToShow.splice(this.genresToShow.indexOf(t.id.slice(6)),1),this.refreshPage(n,r))})),this.genresToShow.includes(t.id.slice(6))&&(t.checked=!0)}));let t=[];t[0]=document.querySelectorAll(".catalog-sort")[0],t[1]=document.querySelectorAll(".catalog-sort")[1],addEventListener("click",(n=>{n.target==t[0]?(t[0].classList.add("active"),t[1].classList.remove("active")):n.target==t[1]&&(t[1].classList.add("active"),t[0].classList.remove("active"))}))}refreshPage(n,r){let t=this.sortProducts(n,r);this.content.innerHTML=`\n            <div class="container">\n                <div class="products-list">\n                    <div class="products-list-sidebar">\n                        ${this.loadCatalogListSidebar()}\n                    </div>\n                    <div class="products-list-catalog">\n                        <div class="top-section">\n                            <div class="catalog-control">\n                                <a href="javascript:void(0);" class="catalog-sort active">Expensive first</a>\n                                <a href="javascript:void(0);" class="catalog-sort">Cheap first</a>\n                            </div>\n                        </div>\n\n                        <div class="catalog-content">\n                            ${this.loadCatalog(t)}\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        `,this.eventListener(n,r)}getPlatforms(){let n=[];return n[0]=document.getElementById("check-playstation_4"),n[1]=document.getElementById("check-xbox_one"),n[2]=document.getElementById("check-nintendo_switch"),n}getGenres(){let n=[];return n[0]=document.getElementById("check-Action"),n[1]=document.getElementById("check-Horror"),n[2]=document.getElementById("check-Shooter"),n[3]=document.getElementById("check-Stealth"),n[4]=document.getElementById("check-Andventure"),n[5]=document.getElementById("check-Platformer"),n[6]=document.getElementById("check-Roleplaying"),n}getPrices(){let n=[];return n[0]=document.getElementById("price-from"),n[1]=document.getElementById("price-to"),n}loadCatalogListSidebar(){return'\n            <div class="filter-block">\n                <div id="fixed-filter">\n                    <div class="toggle-content">\n                        <div class="toggle-row">\n                            <div class="toggle-title">\n                                Price\n                            </div>\n                            <div class="price-ranges">\n                                <br>\n                                <div class="price-input">\n                                    <div class="form-group-price">\n                                        <input type="text" id="price-from" maxlength="4" min="99" autocomplete="off" name="price_from" value="99">\n                                    </div>\n                                    <div class="form-group-price">\n                                        <input type="text" id="price-to" maxlength="4" min="99" autocomplete="off" name="price_from" value="3999">\n                                    </div>\n                                </div>\n                                <a id="price-btn" href="javascript:void(0);">OK</a>\n                            </div>\n                        </div>\n                        <div class="toggle-row">\n                            <div class="toggle-title">\n                                Platform\n                            </div>\n                            <div class="checkbox-row">\n                                <div class="checkbox-wrap">\n                                    <a class="check-group" href="javascript:void(0);"> \x3c!--#catalog/playstation_4--\x3e\n                                        <input id="check-playstation_4" type="checkbox">\n                                        <label for="check-playstation_4">Playstation 4</label>\n                                    </a>\n                                </div>\n                                <div class="checkbox-wrap">\n                                    <a class="check-group" href="javascript:void(0);">\n                                        <input id="check-xbox_one" type="checkbox">\n                                        <label for="check-xbox_one">Xbox One</label>\n                                    </a>\n                                </div>\n                                <div class="checkbox-wrap">\n                                    <a class="check-group" href="javascript:void(0);">\n                                        <input id="check-nintendo_switch" type="checkbox" >\n                                        <label for="check-nintendo_switch">Nintendo Switch</label>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="toggle-row">\n                            <div class="toggle-title">\n                                Genre\n                            </div>\n                            <div class="checkbox-row">\n                                <div class="checkbox-wrap">\n                                    <a class="check-group" href="javascript:void(0);">\n                                        <input id="check-Action" type="checkbox">\n                                        <label for="check-Action">Action</label>\n                                    </a>\n                                </div>\n                                <div class="checkbox-wrap">\n                                    <a class="check-group" href="javascript:void(0);">\n                                        <input id="check-Andventure" type="checkbox">\n                                        <label for="check-Andventure">Andventure</label>\n                                    </a>\n                                </div>\n                                <div class="checkbox-wrap">\n                                    <a class="check-group" href="javascript:void(0);">\n                                        <input id="check-Roleplaying" type="checkbox" >\n                                        <label for="check-Roleplaying">Roleplaying</label>\n                                    </a>\n                                </div>\n                                <div class="checkbox-wrap">\n                                    <a class="check-group" href="javascript:void(0);">\n                                        <input id="check-Horror" type="checkbox">\n                                        <label for="check-Horror">Horror</label>\n                                    </a>\n                                </div>\n                                <div class="checkbox-wrap">\n                                    <a class="check-group" href="javascript:void(0);">\n                                        <input id="check-Shooter" type="checkbox">\n                                        <label for="check-Shooter">Shooter</label>\n                                    </a>\n                                </div>\n                                <div class="checkbox-wrap">\n                                    <a class="check-group" href="javascript:void(0);">\n                                        <input id="check-Stealth" type="checkbox">\n                                        <label for="check-Stealth">Stealth</label>\n                                    </a>\n                                </div>\n                                <div class="checkbox-wrap">\n                                    <a class="check-group" href="javascript:void(0);">\n                                        <input id="check-Platformer" type="checkbox">\n                                        <label for="check-Platformer">Platformer</label>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        '}loadCatalog(n){let r="";return n.forEach((n=>{r+=`\n                <div class="game-card">\n                    <a class="game-card-image" href="#product/${n.url}">\n                           <img src="${n.image}" alt="game image">\n                    </a>\n                    <a class="game-card-title" href="#product/${n.url}">${n.title}</a>\n                    <div class="game-card-price">\n                        <p>${n.price} ₴</p>\n                    </div>\n                    <div class="game-card-platform">\n                        <span class="platform-item ${n.platform[0]}"><img src="./images/platforms/${n.platform[0]}.svg" alt=''></span>\n                        <span class="platform-item ${n.platform[1]}"><img src="./images/platforms/${n.platform[1]}.svg" alt=''></span>\n                        <span class="platform-item ${n.platform[2]}"><img src="./images/platforms/${n.platform[2]}.svg" alt=''></span>\n                    </div>\n                </div>\n            `})),r}},C=new class{constructor(n,r){this.pages=n,this.homePage=r}getPage(n){for(let r=0;r<this.pages.length;r++)if(n===this.pages[r].route)return this.pages[r]}loadByHash(n,r=null){this.getPage(n).loadPage(r)||this.loadDefaultPage()}loadDefaultPage(){this.homePage.loadHomePage()}loadCart(){this.getPage("cart").loadCart()}}([h,g,B,x,v,m],g);!async function(){let n=await async function(){let n=await e(),r=[],t=[],i=[],o=[],a=[];return n.products.forEach((n=>{r.push(n.url)})),n.actions.forEach((n=>{i.push(n.url)})),n.orders.forEach((n=>{o.push(n)})),t=["playstation_4","xbox_one","nintendo_switch"],a=r.slice(),a.push("clear"),{products_end_points:r,catalog_end_points:t,actions_end_points:i,orders_end_points:o,cart_end_points:a}}();new i(n,C),C.loadDefaultPage(),C.loadCart()}()}},r={};function t(e){if(r[e])return r[e].exports;var i=r[e]={id:e,exports:{}};return n[e].call(i.exports,i,i.exports,t),i.exports}t.n=function(n){var r=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(r,{a:r}),r},t.d=function(n,r){for(var e in r)t.o(r,e)&&!t.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:r[e]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},t(6124),t(8198)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,